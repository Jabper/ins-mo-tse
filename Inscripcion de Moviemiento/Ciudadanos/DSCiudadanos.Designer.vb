'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4223
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSCiudadanos"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSCiudadanos
    Inherits Global.System.Data.DataSet
    
    Private tableIM_CIUDADANOS_RESPALDAN As IM_CIUDADANOS_RESPALDANDataTable
    
    Private tableIM_CIUDADANOS_RESPALDAN1 As IM_CIUDADANOS_RESPALDAN1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IM_CIUDADANOS_RESPALDAN")) Is Nothing) Then
                MyBase.Tables.Add(New IM_CIUDADANOS_RESPALDANDataTable(ds.Tables("IM_CIUDADANOS_RESPALDAN")))
            End If
            If (Not (ds.Tables("IM_CIUDADANOS_RESPALDAN1")) Is Nothing) Then
                MyBase.Tables.Add(New IM_CIUDADANOS_RESPALDAN1DataTable(ds.Tables("IM_CIUDADANOS_RESPALDAN1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_CIUDADANOS_RESPALDAN() As IM_CIUDADANOS_RESPALDANDataTable
        Get
            Return Me.tableIM_CIUDADANOS_RESPALDAN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_CIUDADANOS_RESPALDAN1() As IM_CIUDADANOS_RESPALDAN1DataTable
        Get
            Return Me.tableIM_CIUDADANOS_RESPALDAN1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSCiudadanos = CType(MyBase.Clone,DSCiudadanos)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("IM_CIUDADANOS_RESPALDAN")) Is Nothing) Then
                MyBase.Tables.Add(New IM_CIUDADANOS_RESPALDANDataTable(ds.Tables("IM_CIUDADANOS_RESPALDAN")))
            End If
            If (Not (ds.Tables("IM_CIUDADANOS_RESPALDAN1")) Is Nothing) Then
                MyBase.Tables.Add(New IM_CIUDADANOS_RESPALDAN1DataTable(ds.Tables("IM_CIUDADANOS_RESPALDAN1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIM_CIUDADANOS_RESPALDAN = CType(MyBase.Tables("IM_CIUDADANOS_RESPALDAN"),IM_CIUDADANOS_RESPALDANDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_CIUDADANOS_RESPALDAN) Is Nothing) Then
                Me.tableIM_CIUDADANOS_RESPALDAN.InitVars
            End If
        End If
        Me.tableIM_CIUDADANOS_RESPALDAN1 = CType(MyBase.Tables("IM_CIUDADANOS_RESPALDAN1"),IM_CIUDADANOS_RESPALDAN1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_CIUDADANOS_RESPALDAN1) Is Nothing) Then
                Me.tableIM_CIUDADANOS_RESPALDAN1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DSCiudadanos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSCiudadanos.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIM_CIUDADANOS_RESPALDAN = New IM_CIUDADANOS_RESPALDANDataTable
        MyBase.Tables.Add(Me.tableIM_CIUDADANOS_RESPALDAN)
        Me.tableIM_CIUDADANOS_RESPALDAN1 = New IM_CIUDADANOS_RESPALDAN1DataTable
        MyBase.Tables.Add(Me.tableIM_CIUDADANOS_RESPALDAN1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_CIUDADANOS_RESPALDAN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_CIUDADANOS_RESPALDAN1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSCiudadanos = New DSCiudadanos
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub IM_CIUDADANOS_RESPALDANRowChangeEventHandler(ByVal sender As Object, ByVal e As IM_CIUDADANOS_RESPALDANRowChangeEvent)
    
    Public Delegate Sub IM_CIUDADANOS_RESPALDAN1RowChangeEventHandler(ByVal sender As Object, ByVal e As IM_CIUDADANOS_RESPALDAN1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_CIUDADANOS_RESPALDANDataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_CIUDADANOS_RESPALDANRow)
        
        Private columnCODIGO_CUIDADANOS_RESPALDAN As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnFIRMA As Global.System.Data.DataColumn
        
        Private columnHUELLA As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnNOMBRE_IGUAL As Global.System.Data.DataColumn
        
        Private columnIMAGEN_FIRMA As Global.System.Data.DataColumn
        
        Private columnFOLIO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_PAPELETA As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnEstado As Global.System.Data.DataColumn
        
        Private columnPrimerNombre As Global.System.Data.DataColumn
        
        Private columnPrimerApellido As Global.System.Data.DataColumn
        
        Private columnSegundoNombre As Global.System.Data.DataColumn
        
        Private columnSegundoApellido As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_CIUDADANOS_RESPALDAN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CUIDADANOS_RESPALDANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CUIDADANOS_RESPALDAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FIRMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HUELLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHUELLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_IGUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_IGUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMAGEN_FIRMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN_FIRMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FOLIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOLIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_PAPELETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_PAPELETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EstadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrimerNombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrimerNombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrimerApellidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrimerApellido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SegundoNombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSegundoNombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SegundoApellidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSegundoApellido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_CIUDADANOS_RESPALDANRow
            Get
                Return CType(Me.Rows(index),IM_CIUDADANOS_RESPALDANRow)
            End Get
        End Property
        
        Public Event IM_CIUDADANOS_RESPALDANRowChanging As IM_CIUDADANOS_RESPALDANRowChangeEventHandler
        
        Public Event IM_CIUDADANOS_RESPALDANRowChanged As IM_CIUDADANOS_RESPALDANRowChangeEventHandler
        
        Public Event IM_CIUDADANOS_RESPALDANRowDeleting As IM_CIUDADANOS_RESPALDANRowChangeEventHandler
        
        Public Event IM_CIUDADANOS_RESPALDANRowDeleted As IM_CIUDADANOS_RESPALDANRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_CIUDADANOS_RESPALDANRow(ByVal row As IM_CIUDADANOS_RESPALDANRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_CIUDADANOS_RESPALDANRow( _
                    ByVal CODIGO_CUIDADANOS_RESPALDAN As Decimal,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal FIRMA As String,  _
                    ByVal HUELLA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal NOMBRE_IGUAL As String,  _
                    ByVal IMAGEN_FIRMA() As Byte,  _
                    ByVal FOLIO As Decimal,  _
                    ByVal NOMBRE_PAPELETA As String,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Date,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Estado As Boolean,  _
                    ByVal PrimerNombre As String,  _
                    ByVal PrimerApellido As String,  _
                    ByVal SegundoNombre As String,  _
                    ByVal SegundoApellido As String) As IM_CIUDADANOS_RESPALDANRow
            Dim rowIM_CIUDADANOS_RESPALDANRow As IM_CIUDADANOS_RESPALDANRow = CType(Me.NewRow,IM_CIUDADANOS_RESPALDANRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CUIDADANOS_RESPALDAN, CODIGO_PARTIDO, CODIGO_MOVIMIENTO, CODIGO_MUNICIPIO, FIRMA, HUELLA, DIRECCION, IDENTIDAD, NOMBRE, NOMBRE_IGUAL, IMAGEN_FIRMA, FOLIO, NOMBRE_PAPELETA, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, CODIGO_DEPARTAMENTO, Estado, PrimerNombre, PrimerApellido, SegundoNombre, SegundoApellido}
            rowIM_CIUDADANOS_RESPALDANRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_CIUDADANOS_RESPALDANRow)
            Return rowIM_CIUDADANOS_RESPALDANRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_CIUDADANOS_RESPALDANDataTable = CType(MyBase.Clone,IM_CIUDADANOS_RESPALDANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_CIUDADANOS_RESPALDANDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CUIDADANOS_RESPALDAN = MyBase.Columns("CODIGO_CUIDADANOS_RESPALDAN")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnFIRMA = MyBase.Columns("FIRMA")
            Me.columnHUELLA = MyBase.Columns("HUELLA")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnNOMBRE_IGUAL = MyBase.Columns("NOMBRE_IGUAL")
            Me.columnIMAGEN_FIRMA = MyBase.Columns("IMAGEN_FIRMA")
            Me.columnFOLIO = MyBase.Columns("FOLIO")
            Me.columnNOMBRE_PAPELETA = MyBase.Columns("NOMBRE_PAPELETA")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnEstado = MyBase.Columns("Estado")
            Me.columnPrimerNombre = MyBase.Columns("PrimerNombre")
            Me.columnPrimerApellido = MyBase.Columns("PrimerApellido")
            Me.columnSegundoNombre = MyBase.Columns("SegundoNombre")
            Me.columnSegundoApellido = MyBase.Columns("SegundoApellido")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CUIDADANOS_RESPALDAN = New Global.System.Data.DataColumn("CODIGO_CUIDADANOS_RESPALDAN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CUIDADANOS_RESPALDAN)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnFIRMA = New Global.System.Data.DataColumn("FIRMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMA)
            Me.columnHUELLA = New Global.System.Data.DataColumn("HUELLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHUELLA)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnNOMBRE_IGUAL = New Global.System.Data.DataColumn("NOMBRE_IGUAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_IGUAL)
            Me.columnIMAGEN_FIRMA = New Global.System.Data.DataColumn("IMAGEN_FIRMA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN_FIRMA)
            Me.columnFOLIO = New Global.System.Data.DataColumn("FOLIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOLIO)
            Me.columnNOMBRE_PAPELETA = New Global.System.Data.DataColumn("NOMBRE_PAPELETA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_PAPELETA)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnEstado = New Global.System.Data.DataColumn("Estado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstado)
            Me.columnPrimerNombre = New Global.System.Data.DataColumn("PrimerNombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrimerNombre)
            Me.columnPrimerApellido = New Global.System.Data.DataColumn("PrimerApellido", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrimerApellido)
            Me.columnSegundoNombre = New Global.System.Data.DataColumn("SegundoNombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSegundoNombre)
            Me.columnSegundoApellido = New Global.System.Data.DataColumn("SegundoApellido", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSegundoApellido)
            Me.columnFIRMA.MaxLength = 1
            Me.columnHUELLA.MaxLength = 1
            Me.columnDIRECCION.MaxLength = 300
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnNOMBRE.MaxLength = 100
            Me.columnNOMBRE_IGUAL.MaxLength = 2
            Me.columnNOMBRE_PAPELETA.MaxLength = 100
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnMODIFICADO_POR.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_CIUDADANOS_RESPALDANRow() As IM_CIUDADANOS_RESPALDANRow
            Return CType(Me.NewRow,IM_CIUDADANOS_RESPALDANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_CIUDADANOS_RESPALDANRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_CIUDADANOS_RESPALDANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDANRowChangedEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDANRowChanged(Me, New IM_CIUDADANOS_RESPALDANRowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDANRowChangingEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDANRowChanging(Me, New IM_CIUDADANOS_RESPALDANRowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDANRowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDANRowDeleted(Me, New IM_CIUDADANOS_RESPALDANRowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDANRowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDANRowDeleting(Me, New IM_CIUDADANOS_RESPALDANRowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_CIUDADANOS_RESPALDANRow(ByVal row As IM_CIUDADANOS_RESPALDANRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCiudadanos = New DSCiudadanos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_CIUDADANOS_RESPALDANDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_CIUDADANOS_RESPALDAN1DataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_CIUDADANOS_RESPALDAN1Row)
        
        Private columnCODIGO_CUIDADANOS_RESPALDAN As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnFIRMA As Global.System.Data.DataColumn
        
        Private columnHUELLA As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnNOMBRE_IGUAL As Global.System.Data.DataColumn
        
        Private columnFOLIO As Global.System.Data.DataColumn
        
        Private columnPRIMER_NOMBRE_PAPELETA As Global.System.Data.DataColumn
        
        Private columnIMAGEN_FIRMA As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        Private columnCONSISTENTE As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnMAQUINA As Global.System.Data.DataColumn
        
        Private columnPAGINA As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_NOMBRE_PAPELETA As Global.System.Data.DataColumn
        
        Private columnPRIMER_APELLIDO_PAPELETA As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_APELLIDO_PAPELETA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_CIUDADANOS_RESPALDAN1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CUIDADANOS_RESPALDANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CUIDADANOS_RESPALDAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FIRMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HUELLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHUELLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_IGUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_IGUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FOLIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOLIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_NOMBRE_PAPELETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_NOMBRE_PAPELETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMAGEN_FIRMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN_FIRMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONSISTENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSISTENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MAQUINAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAQUINA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAGINAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAGINA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_NOMBRE_PAPELETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_NOMBRE_PAPELETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_APELLIDO_PAPELETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_APELLIDO_PAPELETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_APELLIDO_PAPELETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_APELLIDO_PAPELETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_CIUDADANOS_RESPALDAN1Row
            Get
                Return CType(Me.Rows(index),IM_CIUDADANOS_RESPALDAN1Row)
            End Get
        End Property
        
        Public Event IM_CIUDADANOS_RESPALDAN1RowChanging As IM_CIUDADANOS_RESPALDAN1RowChangeEventHandler
        
        Public Event IM_CIUDADANOS_RESPALDAN1RowChanged As IM_CIUDADANOS_RESPALDAN1RowChangeEventHandler
        
        Public Event IM_CIUDADANOS_RESPALDAN1RowDeleting As IM_CIUDADANOS_RESPALDAN1RowChangeEventHandler
        
        Public Event IM_CIUDADANOS_RESPALDAN1RowDeleted As IM_CIUDADANOS_RESPALDAN1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_CIUDADANOS_RESPALDAN1Row(ByVal row As IM_CIUDADANOS_RESPALDAN1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_CIUDADANOS_RESPALDAN1Row( _
                    ByVal CODIGO_CUIDADANOS_RESPALDAN As Decimal,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal FIRMA As String,  _
                    ByVal HUELLA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE_IGUAL As String,  _
                    ByVal FOLIO As Decimal,  _
                    ByVal PRIMER_NOMBRE_PAPELETA As String,  _
                    ByVal IMAGEN_FIRMA() As Byte,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Date,  _
                    ByVal CONSISTENTE As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal MAQUINA As String,  _
                    ByVal PAGINA As Decimal,  _
                    ByVal SEGUNDO_NOMBRE_PAPELETA As String,  _
                    ByVal PRIMER_APELLIDO_PAPELETA As String,  _
                    ByVal SEGUNDO_APELLIDO_PAPELETA As String) As IM_CIUDADANOS_RESPALDAN1Row
            Dim rowIM_CIUDADANOS_RESPALDAN1Row As IM_CIUDADANOS_RESPALDAN1Row = CType(Me.NewRow,IM_CIUDADANOS_RESPALDAN1Row)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CUIDADANOS_RESPALDAN, CODIGO_PARTIDO, CODIGO_MOVIMIENTO, CODIGO_DEPARTAMENTO, CODIGO_MUNICIPIO, FIRMA, HUELLA, DIRECCION, IDENTIDAD, NOMBRE_IGUAL, FOLIO, PRIMER_NOMBRE_PAPELETA, IMAGEN_FIRMA, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, CONSISTENTE, OBSERVACION, MAQUINA, PAGINA, SEGUNDO_NOMBRE_PAPELETA, PRIMER_APELLIDO_PAPELETA, SEGUNDO_APELLIDO_PAPELETA}
            rowIM_CIUDADANOS_RESPALDAN1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_CIUDADANOS_RESPALDAN1Row)
            Return rowIM_CIUDADANOS_RESPALDAN1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_CUIDADANOS_RESPALDANCODIGO_PARTIDOCODIGO_MOVIMIENTO(ByVal CODIGO_CUIDADANOS_RESPALDAN As Decimal, ByVal CODIGO_PARTIDO As Decimal, ByVal CODIGO_MOVIMIENTO As Decimal) As IM_CIUDADANOS_RESPALDAN1Row
            Return CType(Me.Rows.Find(New Object() {CODIGO_CUIDADANOS_RESPALDAN, CODIGO_PARTIDO, CODIGO_MOVIMIENTO}),IM_CIUDADANOS_RESPALDAN1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_CIUDADANOS_RESPALDAN1DataTable = CType(MyBase.Clone,IM_CIUDADANOS_RESPALDAN1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_CIUDADANOS_RESPALDAN1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CUIDADANOS_RESPALDAN = MyBase.Columns("CODIGO_CUIDADANOS_RESPALDAN")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnFIRMA = MyBase.Columns("FIRMA")
            Me.columnHUELLA = MyBase.Columns("HUELLA")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnNOMBRE_IGUAL = MyBase.Columns("NOMBRE_IGUAL")
            Me.columnFOLIO = MyBase.Columns("FOLIO")
            Me.columnPRIMER_NOMBRE_PAPELETA = MyBase.Columns("PRIMER_NOMBRE_PAPELETA")
            Me.columnIMAGEN_FIRMA = MyBase.Columns("IMAGEN_FIRMA")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
            Me.columnCONSISTENTE = MyBase.Columns("CONSISTENTE")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnMAQUINA = MyBase.Columns("MAQUINA")
            Me.columnPAGINA = MyBase.Columns("PAGINA")
            Me.columnSEGUNDO_NOMBRE_PAPELETA = MyBase.Columns("SEGUNDO_NOMBRE_PAPELETA")
            Me.columnPRIMER_APELLIDO_PAPELETA = MyBase.Columns("PRIMER_APELLIDO_PAPELETA")
            Me.columnSEGUNDO_APELLIDO_PAPELETA = MyBase.Columns("SEGUNDO_APELLIDO_PAPELETA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CUIDADANOS_RESPALDAN = New Global.System.Data.DataColumn("CODIGO_CUIDADANOS_RESPALDAN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CUIDADANOS_RESPALDAN)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnFIRMA = New Global.System.Data.DataColumn("FIRMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMA)
            Me.columnHUELLA = New Global.System.Data.DataColumn("HUELLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHUELLA)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnNOMBRE_IGUAL = New Global.System.Data.DataColumn("NOMBRE_IGUAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_IGUAL)
            Me.columnFOLIO = New Global.System.Data.DataColumn("FOLIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOLIO)
            Me.columnPRIMER_NOMBRE_PAPELETA = New Global.System.Data.DataColumn("PRIMER_NOMBRE_PAPELETA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_NOMBRE_PAPELETA)
            Me.columnIMAGEN_FIRMA = New Global.System.Data.DataColumn("IMAGEN_FIRMA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN_FIRMA)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.columnCONSISTENTE = New Global.System.Data.DataColumn("CONSISTENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSISTENTE)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnMAQUINA = New Global.System.Data.DataColumn("MAQUINA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAQUINA)
            Me.columnPAGINA = New Global.System.Data.DataColumn("PAGINA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAGINA)
            Me.columnSEGUNDO_NOMBRE_PAPELETA = New Global.System.Data.DataColumn("SEGUNDO_NOMBRE_PAPELETA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_NOMBRE_PAPELETA)
            Me.columnPRIMER_APELLIDO_PAPELETA = New Global.System.Data.DataColumn("PRIMER_APELLIDO_PAPELETA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_APELLIDO_PAPELETA)
            Me.columnSEGUNDO_APELLIDO_PAPELETA = New Global.System.Data.DataColumn("SEGUNDO_APELLIDO_PAPELETA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_APELLIDO_PAPELETA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_CUIDADANOS_RESPALDAN, Me.columnCODIGO_PARTIDO, Me.columnCODIGO_MOVIMIENTO}, true))
            Me.columnCODIGO_CUIDADANOS_RESPALDAN.AllowDBNull = false
            Me.columnCODIGO_PARTIDO.AllowDBNull = false
            Me.columnCODIGO_MOVIMIENTO.AllowDBNull = false
            Me.columnCODIGO_DEPARTAMENTO.AllowDBNull = false
            Me.columnCODIGO_MUNICIPIO.AllowDBNull = false
            Me.columnFIRMA.MaxLength = 1
            Me.columnHUELLA.MaxLength = 1
            Me.columnDIRECCION.MaxLength = 300
            Me.columnIDENTIDAD.AllowDBNull = false
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnNOMBRE_IGUAL.MaxLength = 2
            Me.columnPRIMER_NOMBRE_PAPELETA.AllowDBNull = false
            Me.columnPRIMER_NOMBRE_PAPELETA.MaxLength = 50
            Me.columnADICIONADO_POR.AllowDBNull = false
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnFECHA_ADICION.AllowDBNull = false
            Me.columnMODIFICADO_POR.MaxLength = 10
            Me.columnCONSISTENTE.MaxLength = 1
            Me.columnOBSERVACION.MaxLength = 200
            Me.columnMAQUINA.MaxLength = 50
            Me.columnSEGUNDO_NOMBRE_PAPELETA.MaxLength = 50
            Me.columnPRIMER_APELLIDO_PAPELETA.AllowDBNull = false
            Me.columnPRIMER_APELLIDO_PAPELETA.MaxLength = 50
            Me.columnSEGUNDO_APELLIDO_PAPELETA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_CIUDADANOS_RESPALDAN1Row() As IM_CIUDADANOS_RESPALDAN1Row
            Return CType(Me.NewRow,IM_CIUDADANOS_RESPALDAN1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_CIUDADANOS_RESPALDAN1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_CIUDADANOS_RESPALDAN1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDAN1RowChangedEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDAN1RowChanged(Me, New IM_CIUDADANOS_RESPALDAN1RowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDAN1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDAN1RowChangingEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDAN1RowChanging(Me, New IM_CIUDADANOS_RESPALDAN1RowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDAN1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDAN1RowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDAN1RowDeleted(Me, New IM_CIUDADANOS_RESPALDAN1RowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDAN1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_CIUDADANOS_RESPALDAN1RowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_CIUDADANOS_RESPALDAN1RowDeleting(Me, New IM_CIUDADANOS_RESPALDAN1RowChangeEvent(CType(e.Row,IM_CIUDADANOS_RESPALDAN1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_CIUDADANOS_RESPALDAN1Row(ByVal row As IM_CIUDADANOS_RESPALDAN1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCiudadanos = New DSCiudadanos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_CIUDADANOS_RESPALDAN1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_CIUDADANOS_RESPALDANRow
        Inherits Global.System.Data.DataRow
        
        Private tableIM_CIUDADANOS_RESPALDAN As IM_CIUDADANOS_RESPALDANDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_CIUDADANOS_RESPALDAN = CType(Me.Table,IM_CIUDADANOS_RESPALDANDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CUIDADANOS_RESPALDAN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_CUIDADANOS_RESPALDANColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_CUIDADANOS_RESPALDAN' in table 'IM_CIUDADANOS_RESPAL"& _ 
                            "DAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_CUIDADANOS_RESPALDANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_PARTIDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_PARTIDO' in table 'IM_CIUDADANOS_RESPALDAN' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MOVIMIENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MOVIMIENTO' in table 'IM_CIUDADANOS_RESPALDAN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MUNICIPIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MUNICIPIO' in table 'IM_CIUDADANOS_RESPALDAN' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FIRMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.FIRMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRMA' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.FIRMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HUELLA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.HUELLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HUELLA' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.HUELLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIRECCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.DIRECCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.DIRECCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.IDENTIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDENTIDAD' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_IGUAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_IGUALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_IGUAL' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_IGUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMAGEN_FIRMA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.IMAGEN_FIRMAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN_FIRMA' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.IMAGEN_FIRMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FOLIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.FOLIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FOLIO' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.FOLIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_PAPELETA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_PAPELETAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_PAPELETA' in table 'IM_CIUDADANOS_RESPALDAN' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_PAPELETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.ADICIONADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADICIONADO_POR' in table 'IM_CIUDADANOS_RESPALDAN' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_ADICIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_ADICION' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_CIUDADANOS_RESPALDAN' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_CIUDADANOS_RESPALDAN' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_DEPARTAMENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_DEPARTAMENTO' in table 'IM_CIUDADANOS_RESPALDAN' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Estado() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.EstadoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Estado' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.EstadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrimerNombre() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerNombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrimerNombre' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerNombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrimerApellido() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerApellidoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrimerApellido' in table 'IM_CIUDADANOS_RESPALDAN' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerApellidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SegundoNombre() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoNombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SegundoNombre' in table 'IM_CIUDADANOS_RESPALDAN' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoNombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SegundoApellido() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoApellidoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SegundoApellido' in table 'IM_CIUDADANOS_RESPALDAN' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoApellidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_CUIDADANOS_RESPALDANNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_CUIDADANOS_RESPALDANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_CUIDADANOS_RESPALDANNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_CUIDADANOS_RESPALDANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_PARTIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_PARTIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_PARTIDONull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_PARTIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MOVIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MOVIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MOVIMIENTONull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MOVIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MUNICIPIONull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFIRMANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.FIRMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFIRMANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.FIRMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHUELLANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.HUELLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHUELLANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.HUELLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIRECCIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.DIRECCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIRECCIONNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.DIRECCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDENTIDADNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.IDENTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDENTIDADNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.IDENTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMBRE_IGUALNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_IGUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMBRE_IGUALNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_IGUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMAGEN_FIRMANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.IMAGEN_FIRMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMAGEN_FIRMANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.IMAGEN_FIRMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFOLIONull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.FOLIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFOLIONull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.FOLIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMBRE_PAPELETANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_PAPELETAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMBRE_PAPELETANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.NOMBRE_PAPELETAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADICIONADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.ADICIONADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADICIONADO_PORNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.ADICIONADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_ADICIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_ADICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_ADICIONNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_ADICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_DEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_DEPARTAMENTONull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.CODIGO_DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEstadoNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.EstadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEstadoNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.EstadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrimerNombreNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerNombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrimerNombreNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerNombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrimerApellidoNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerApellidoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrimerApellidoNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.PrimerApellidoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSegundoNombreNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoNombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSegundoNombreNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoNombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSegundoApellidoNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoApellidoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSegundoApellidoNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN.SegundoApellidoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_CIUDADANOS_RESPALDAN1Row
        Inherits Global.System.Data.DataRow
        
        Private tableIM_CIUDADANOS_RESPALDAN1 As IM_CIUDADANOS_RESPALDAN1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_CIUDADANOS_RESPALDAN1 = CType(Me.Table,IM_CIUDADANOS_RESPALDAN1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CUIDADANOS_RESPALDAN() As Decimal
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_CUIDADANOS_RESPALDANColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_CUIDADANOS_RESPALDANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_PARTIDOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_MOVIMIENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_DEPARTAMENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_MUNICIPIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FIRMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FIRMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRMA' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FIRMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HUELLA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.HUELLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HUELLA' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.HUELLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIRECCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.DIRECCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.DIRECCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.IDENTIDADColumn),String)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_IGUAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.NOMBRE_IGUALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_IGUAL' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.NOMBRE_IGUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FOLIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FOLIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FOLIO' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FOLIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_NOMBRE_PAPELETA() As String
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.PRIMER_NOMBRE_PAPELETAColumn),String)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.PRIMER_NOMBRE_PAPELETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMAGEN_FIRMA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.IMAGEN_FIRMAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN_FIRMA' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.IMAGEN_FIRMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.ADICIONADO_PORColumn),String)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FECHA_ADICIONColumn),Date)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_CIUDADANOS_RESPALDAN1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONSISTENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CONSISTENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONSISTENTE' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CONSISTENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MAQUINA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.MAQUINAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAQUINA' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.MAQUINAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAGINA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.PAGINAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAGINA' in table 'IM_CIUDADANOS_RESPALDAN1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.PAGINAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_NOMBRE_PAPELETA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_NOMBRE_PAPELETAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_NOMBRE_PAPELETA' in table 'IM_CIUDADANOS_RESPALDAN1"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_NOMBRE_PAPELETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_APELLIDO_PAPELETA() As String
            Get
                Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.PRIMER_APELLIDO_PAPELETAColumn),String)
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.PRIMER_APELLIDO_PAPELETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_APELLIDO_PAPELETA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_APELLIDO_PAPELETAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_APELLIDO_PAPELETA' in table 'IM_CIUDADANOS_RESPALDA"& _ 
                            "N1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_APELLIDO_PAPELETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFIRMANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.FIRMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFIRMANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FIRMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHUELLANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.HUELLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHUELLANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.HUELLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIRECCIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.DIRECCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIRECCIONNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.DIRECCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMBRE_IGUALNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.NOMBRE_IGUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMBRE_IGUALNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.NOMBRE_IGUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFOLIONull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.FOLIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFOLIONull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FOLIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMAGEN_FIRMANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.IMAGEN_FIRMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMAGEN_FIRMANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.IMAGEN_FIRMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONSISTENTENull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.CONSISTENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONSISTENTENull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.CONSISTENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMAQUINANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.MAQUINAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMAQUINANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.MAQUINAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPAGINANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.PAGINAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPAGINANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.PAGINAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_NOMBRE_PAPELETANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_NOMBRE_PAPELETAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_NOMBRE_PAPELETANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_NOMBRE_PAPELETAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_APELLIDO_PAPELETANull() As Boolean
            Return Me.IsNull(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_APELLIDO_PAPELETAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_APELLIDO_PAPELETANull()
            Me(Me.tableIM_CIUDADANOS_RESPALDAN1.SEGUNDO_APELLIDO_PAPELETAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_CIUDADANOS_RESPALDANRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_CIUDADANOS_RESPALDANRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_CIUDADANOS_RESPALDANRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_CIUDADANOS_RESPALDANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_CIUDADANOS_RESPALDAN1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_CIUDADANOS_RESPALDAN1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_CIUDADANOS_RESPALDAN1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_CIUDADANOS_RESPALDAN1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSCiudadanosTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_CIUDADANOS_RESPALDANTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_CIUDADANOS_RESPALDAN"
            tableMapping.ColumnMappings.Add("CODIGO_CUIDADANOS_RESPALDAN", "CODIGO_CUIDADANOS_RESPALDAN")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("FIRMA", "FIRMA")
            tableMapping.ColumnMappings.Add("HUELLA", "HUELLA")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("NOMBRE_IGUAL", "NOMBRE_IGUAL")
            tableMapping.ColumnMappings.Add("IMAGEN_FIRMA", "IMAGEN_FIRMA")
            tableMapping.ColumnMappings.Add("FOLIO", "FOLIO")
            tableMapping.ColumnMappings.Add("NOMBRE_PAPELETA", "NOMBRE_PAPELETA")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_CIUDADANOS_RESPALDAN"" WHERE ((""CODIGO_CUIDADANOS_RESPALDAN"" = :p2"& _ 
                ") AND (""CODIGO_PARTIDO"" = :Original_CODIGO_PARTIDO) AND (""CODIGO_MOVIMIENTO"" = :"& _ 
                "Original_CODIGO_MOVIMIENTO) AND (""CODIGO_MUNICIPIO"" = :Original_CODIGO_MUNICIPIO"& _ 
                ") AND ((:IsNull_FIRMA = 1 AND ""FIRMA"" IS NULL) OR (""FIRMA"" = :Original_FIRMA)) A"& _ 
                "ND ((:IsNull_HUELLA = 1 AND ""HUELLA"" IS NULL) OR (""HUELLA"" = :Original_HUELLA)) "& _ 
                "AND ((:IsNull_DIRECCION = 1 AND ""DIRECCION"" IS NULL) OR (""DIRECCION"" = :Original"& _ 
                "_DIRECCION)) AND (""IDENTIDAD"" = :Original_IDENTIDAD) AND ((:IsNull_NOMBRE = 1 AN"& _ 
                "D ""NOMBRE"" IS NULL) OR (""NOMBRE"" = :Original_NOMBRE)) AND ((:IsNull_NOMBRE_IGUAL"& _ 
                " = 1 AND ""NOMBRE_IGUAL"" IS NULL) OR (""NOMBRE_IGUAL"" = :Original_NOMBRE_IGUAL)) A"& _ 
                "ND ((:IsNull_FOLIO = 1 AND ""FOLIO"" IS NULL) OR (""FOLIO"" = :Original_FOLIO)) AND "& _ 
                "((:IsNull_NOMBRE_PAPELETA = 1 AND ""NOMBRE_PAPELETA"" IS NULL) OR (""NOMBRE_PAPELET"& _ 
                "A"" = :Original_NOMBRE_PAPELETA)) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_PO"& _ 
                "R) AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNull_MODIFICADO_POR "& _ 
                "= 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Original_MODIFICADO_PO"& _ 
                "R)) AND ((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR ("""& _ 
                "FECHA_MODIFICACION"" = :Original_FECHA_MODIFICACION)) AND (""CODIGO_DEPARTAMENTO"" "& _ 
                "= :Original_CODIGO_DEPARTAMENTO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FIRMA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_HUELLA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DIRECCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FOLIO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE_PAPELETA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE_PAPELETA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_CIUDADANOS_RESPALDAN"" (""CODIGO_CUIDADANOS_RESPALDAN"", ""CODIGO_PAR"& _ 
                "TIDO"", ""CODIGO_MOVIMIENTO"", ""CODIGO_MUNICIPIO"", ""FIRMA"", ""HUELLA"", ""DIRECCION"", "& _ 
                """IDENTIDAD"", ""NOMBRE"", ""NOMBRE_IGUAL"", ""IMAGEN_FIRMA"", ""FOLIO"", ""NOMBRE_PAPELETA"& _ 
                """, ""ADICIONADO_POR"", ""FECHA_ADICION"", ""MODIFICADO_POR"", ""FECHA_MODIFICACION"", ""C"& _ 
                "ODIGO_DEPARTAMENTO"") VALUES (:p1, :CODIGO_PARTIDO, :CODIGO_MOVIMIENTO, :CODIGO_M"& _ 
                "UNICIPIO, :FIRMA, :HUELLA, :DIRECCION, :IDENTIDAD, :NOMBRE, :NOMBRE_IGUAL, :IMAG"& _ 
                "EN_FIRMA, :FOLIO, :NOMBRE_PAPELETA, :ADICIONADO_POR, :FECHA_ADICION, :MODIFICADO"& _ 
                "_POR, :FECHA_MODIFICACION, :CODIGO_DEPARTAMENTO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN_FIRMA", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN_FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE_PAPELETA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_CIUDADANOS_RESPALDAN"" SET ""CODIGO_CUIDADANOS_RESPALDAN"" = :p1, ""CODIGO"& _ 
                "_PARTIDO"" = :CODIGO_PARTIDO, ""CODIGO_MOVIMIENTO"" = :CODIGO_MOVIMIENTO, ""CODIGO_M"& _ 
                "UNICIPIO"" = :CODIGO_MUNICIPIO, ""FIRMA"" = :FIRMA, ""HUELLA"" = :HUELLA, ""DIRECCION"""& _ 
                " = :DIRECCION, ""IDENTIDAD"" = :IDENTIDAD, ""NOMBRE"" = :NOMBRE, ""NOMBRE_IGUAL"" = :N"& _ 
                "OMBRE_IGUAL, ""IMAGEN_FIRMA"" = :IMAGEN_FIRMA, ""FOLIO"" = :FOLIO, ""NOMBRE_PAPELETA"""& _ 
                " = :NOMBRE_PAPELETA, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""FECHA_ADICION"" = :FECH"& _ 
                "A_ADICION, ""MODIFICADO_POR"" = :MODIFICADO_POR, ""FECHA_MODIFICACION"" = :FECHA_MOD"& _ 
                "IFICACION, ""CODIGO_DEPARTAMENTO"" = :CODIGO_DEPARTAMENTO WHERE ((""CODIGO_CUIDADAN"& _ 
                "OS_RESPALDAN"" = :p2) AND (""CODIGO_PARTIDO"" = :Original_CODIGO_PARTIDO) AND (""COD"& _ 
                "IGO_MOVIMIENTO"" = :Original_CODIGO_MOVIMIENTO) AND (""CODIGO_MUNICIPIO"" = :Origin"& _ 
                "al_CODIGO_MUNICIPIO) AND ((:IsNull_FIRMA = 1 AND ""FIRMA"" IS NULL) OR (""FIRMA"" = "& _ 
                ":Original_FIRMA)) AND ((:IsNull_HUELLA = 1 AND ""HUELLA"" IS NULL) OR (""HUELLA"" = "& _ 
                ":Original_HUELLA)) AND ((:IsNull_DIRECCION = 1 AND ""DIRECCION"" IS NULL) OR (""DIR"& _ 
                "ECCION"" = :Original_DIRECCION)) AND (""IDENTIDAD"" = :Original_IDENTIDAD) AND ((:I"& _ 
                "sNull_NOMBRE = 1 AND ""NOMBRE"" IS NULL) OR (""NOMBRE"" = :Original_NOMBRE)) AND ((:"& _ 
                "IsNull_NOMBRE_IGUAL = 1 AND ""NOMBRE_IGUAL"" IS NULL) OR (""NOMBRE_IGUAL"" = :Origin"& _ 
                "al_NOMBRE_IGUAL)) AND ((:IsNull_FOLIO = 1 AND ""FOLIO"" IS NULL) OR (""FOLIO"" = :Or"& _ 
                "iginal_FOLIO)) AND ((:IsNull_NOMBRE_PAPELETA = 1 AND ""NOMBRE_PAPELETA"" IS NULL) "& _ 
                "OR (""NOMBRE_PAPELETA"" = :Original_NOMBRE_PAPELETA)) AND (""ADICIONADO_POR"" = :Ori"& _ 
                "ginal_ADICIONADO_POR) AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsN"& _ 
                "ull_MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Ori"& _ 
                "ginal_MODIFICADO_POR)) AND ((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICAC"& _ 
                "ION"" IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FECHA_MODIFICACION)) AND (""CO"& _ 
                "DIGO_DEPARTAMENTO"" = :Original_CODIGO_DEPARTAMENTO))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN_FIRMA", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN_FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE_PAPELETA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FIRMA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_HUELLA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DIRECCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FOLIO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE_PAPELETA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE_PAPELETA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGO_CUIDADANOS_RESPALDAN, CODIGO_PARTIDO, CODIGO_MOVIMIENTO, COD"& _ 
                "IGO_MUNICIPIO, FIRMA, HUELLA, DIRECCION, IDENTIDAD, NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       NOMBRE_IGUAL, IMAGEN_FIRMA, FOLIO, NOMBRE_PAPELETA, ADICIONADO_POR, FECHA"& _ 
                "_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGO_"& _ 
                "DEPARTAMENTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_CIUDADANOS_RESPALDAN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCiudadanos.IM_CIUDADANOS_RESPALDANDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCiudadanos.IM_CIUDADANOS_RESPALDANDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCiudadanos.IM_CIUDADANOS_RESPALDANDataTable = New DSCiudadanos.IM_CIUDADANOS_RESPALDANDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCiudadanos.IM_CIUDADANOS_RESPALDANDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCiudadanos) As Integer
            Return Me.Adapter.Update(dataSet, "IM_CIUDADANOS_RESPALDAN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal p2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_PARTIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_MOVIMIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_MUNICIPIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FIRMA As String,  _
                    ByVal Original_HUELLA As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_NOMBRE As String,  _
                    ByVal Original_NOMBRE_IGUAL As String,  _
                    ByVal Original_FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NOMBRE_PAPELETA As String,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date),  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Global.System.Nullable(Of Decimal)) As Integer
            If (p2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(p2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_PARTIDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODIGO_PARTIDO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_MOVIMIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO_MOVIMIENTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_MUNICIPIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CODIGO_MUNICIPIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_FIRMA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_FIRMA,String)
            End If
            If (Original_HUELLA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_HUELLA,String)
            End If
            If (Original_DIRECCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_DIRECCION,String)
            End If
            If (Original_IDENTIDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_IDENTIDAD,String)
            End If
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_NOMBRE,String)
            End If
            If (Original_NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_NOMBRE_IGUAL,String)
            End If
            If (Original_FOLIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_FOLIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_NOMBRE_PAPELETA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_NOMBRE_PAPELETA,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_FECHA_ADICION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_DEPARTAMENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_CODIGO_DEPARTAMENTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal p1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_PARTIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_MOVIMIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_MUNICIPIO As Global.System.Nullable(Of Decimal),  _
                    ByVal FIRMA As String,  _
                    ByVal HUELLA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal NOMBRE_IGUAL As String,  _
                    ByVal IMAGEN_FIRMA() As Byte,  _
                    ByVal FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal NOMBRE_PAPELETA As String,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Global.System.Nullable(Of Date),  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal CODIGO_DEPARTAMENTO As Global.System.Nullable(Of Decimal)) As Integer
            If (p1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(p1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_PARTIDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_PARTIDO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_MOVIMIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO_MOVIMIENTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_MUNICIPIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODIGO_MUNICIPIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FIRMA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FIRMA,String)
            End If
            If (HUELLA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(HUELLA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DIRECCION,String)
            End If
            If (IDENTIDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IDENTIDAD,String)
            End If
            If (NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(NOMBRE,String)
            End If
            If (NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(NOMBRE_IGUAL,String)
            End If
            If (IMAGEN_FIRMA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(IMAGEN_FIRMA,Byte())
            End If
            If (FOLIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FOLIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NOMBRE_PAPELETA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NOMBRE_PAPELETA,String)
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ADICIONADO_POR,String)
            End If
            If (FECHA_ADICION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_DEPARTAMENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CODIGO_DEPARTAMENTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal p1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_PARTIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_MOVIMIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_MUNICIPIO As Global.System.Nullable(Of Decimal),  _
                    ByVal FIRMA As String,  _
                    ByVal HUELLA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal NOMBRE_IGUAL As String,  _
                    ByVal IMAGEN_FIRMA() As Byte,  _
                    ByVal FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal NOMBRE_PAPELETA As String,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Global.System.Nullable(Of Date),  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal CODIGO_DEPARTAMENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal p2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_PARTIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_MOVIMIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_MUNICIPIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FIRMA As String,  _
                    ByVal Original_HUELLA As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_NOMBRE As String,  _
                    ByVal Original_NOMBRE_IGUAL As String,  _
                    ByVal Original_FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NOMBRE_PAPELETA As String,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date),  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Global.System.Nullable(Of Decimal)) As Integer
            If (p1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(p1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_PARTIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_PARTIDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_MOVIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO_MOVIMIENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_MUNICIPIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODIGO_MUNICIPIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FIRMA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FIRMA,String)
            End If
            If (HUELLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(HUELLA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DIRECCION,String)
            End If
            If (IDENTIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IDENTIDAD,String)
            End If
            If (NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(NOMBRE,String)
            End If
            If (NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(NOMBRE_IGUAL,String)
            End If
            If (IMAGEN_FIRMA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(IMAGEN_FIRMA,Byte())
            End If
            If (FOLIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(FOLIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NOMBRE_PAPELETA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NOMBRE_PAPELETA,String)
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ADICIONADO_POR,String)
            End If
            If (FECHA_ADICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CODIGO_DEPARTAMENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CODIGO_DEPARTAMENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_PARTIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_CODIGO_PARTIDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_MOVIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_CODIGO_MOVIMIENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_MUNICIPIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_CODIGO_MUNICIPIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_FIRMA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_FIRMA,String)
            End If
            If (Original_HUELLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_HUELLA,String)
            End If
            If (Original_DIRECCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_DIRECCION,String)
            End If
            If (Original_IDENTIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_IDENTIDAD,String)
            End If
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_NOMBRE,String)
            End If
            If (Original_NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_NOMBRE_IGUAL,String)
            End If
            If (Original_FOLIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_FOLIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_NOMBRE_PAPELETA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_NOMBRE_PAPELETA,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_FECHA_ADICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO_DEPARTAMENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_CODIGO_DEPARTAMENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_CIUDADANOS_RESPALDAN1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_CIUDADANOS_RESPALDAN1"
            tableMapping.ColumnMappings.Add("CODIGO_CUIDADANOS_RESPALDAN", "CODIGO_CUIDADANOS_RESPALDAN")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("FIRMA", "FIRMA")
            tableMapping.ColumnMappings.Add("HUELLA", "HUELLA")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("NOMBRE_IGUAL", "NOMBRE_IGUAL")
            tableMapping.ColumnMappings.Add("FOLIO", "FOLIO")
            tableMapping.ColumnMappings.Add("PRIMER_NOMBRE_PAPELETA", "PRIMER_NOMBRE_PAPELETA")
            tableMapping.ColumnMappings.Add("IMAGEN_FIRMA", "IMAGEN_FIRMA")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            tableMapping.ColumnMappings.Add("CONSISTENTE", "CONSISTENTE")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("MAQUINA", "MAQUINA")
            tableMapping.ColumnMappings.Add("PAGINA", "PAGINA")
            tableMapping.ColumnMappings.Add("SEGUNDO_NOMBRE_PAPELETA", "SEGUNDO_NOMBRE_PAPELETA")
            tableMapping.ColumnMappings.Add("PRIMER_APELLIDO_PAPELETA", "PRIMER_APELLIDO_PAPELETA")
            tableMapping.ColumnMappings.Add("SEGUNDO_APELLIDO_PAPELETA", "SEGUNDO_APELLIDO_PAPELETA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_CIUDADANOS_RESPALDAN"" WHERE ((""CODIGO_CUIDADANOS_RESPALDAN"" = :p2"& _ 
                ") AND (""CODIGO_PARTIDO"" = :Original_CODIGO_PARTIDO) AND (""CODIGO_MOVIMIENTO"" = :"& _ 
                "Original_CODIGO_MOVIMIENTO) AND (""CODIGO_DEPARTAMENTO"" = :Original_CODIGO_DEPART"& _ 
                "AMENTO) AND (""CODIGO_MUNICIPIO"" = :Original_CODIGO_MUNICIPIO) AND ((:IsNull_FIRM"& _ 
                "A = 1 AND ""FIRMA"" IS NULL) OR (""FIRMA"" = :Original_FIRMA)) AND ((:IsNull_HUELLA "& _ 
                "= 1 AND ""HUELLA"" IS NULL) OR (""HUELLA"" = :Original_HUELLA)) AND ((:IsNull_DIRECC"& _ 
                "ION = 1 AND ""DIRECCION"" IS NULL) OR (""DIRECCION"" = :Original_DIRECCION)) AND (""I"& _ 
                "DENTIDAD"" = :Original_IDENTIDAD) AND ((:IsNull_NOMBRE_IGUAL = 1 AND ""NOMBRE_IGUA"& _ 
                "L"" IS NULL) OR (""NOMBRE_IGUAL"" = :Original_NOMBRE_IGUAL)) AND ((:IsNull_FOLIO = "& _ 
                "1 AND ""FOLIO"" IS NULL) OR (""FOLIO"" = :Original_FOLIO)) AND (""PRIMER_NOMBRE_PAPEL"& _ 
                "ETA"" = :p4) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND (""FECHA_ADICIO"& _ 
                "N"" = :Original_FECHA_ADICION) AND ((:IsNull_MODIFICADO_POR = 1 AND ""MODIFICADO_P"& _ 
                "OR"" IS NULL) OR (""MODIFICADO_POR"" = :Original_MODIFICADO_POR)) AND ((:IsNull_FEC"& _ 
                "HA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFICACION"" ="& _ 
                " :Original_FECHA_MODIFICACION)) AND ((:IsNull_CONSISTENTE = 1 AND ""CONSISTENTE"" "& _ 
                "IS NULL) OR (""CONSISTENTE"" = :Original_CONSISTENTE)) AND ((:IsNull_OBSERVACION ="& _ 
                " 1 AND ""OBSERVACION"" IS NULL) OR (""OBSERVACION"" = :Original_OBSERVACION)) AND (("& _ 
                ":IsNull_MAQUINA = 1 AND ""MAQUINA"" IS NULL) OR (""MAQUINA"" = :Original_MAQUINA)) A"& _ 
                "ND ((:IsNull_PAGINA = 1 AND ""PAGINA"" IS NULL) OR (""PAGINA"" = :Original_PAGINA)) "& _ 
                "AND ((:p7 = 1 AND ""SEGUNDO_NOMBRE_PAPELETA"" IS NULL) OR (""SEGUNDO_NOMBRE_PAPELET"& _ 
                "A"" = :p6)) AND (""PRIMER_APELLIDO_PAPELETA"" = :p9) AND ((:p12 = 1 AND ""SEGUNDO_AP"& _ 
                "ELLIDO_PAPELETA"" IS NULL) OR (""SEGUNDO_APELLIDO_PAPELETA"" = :p11)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FIRMA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_HUELLA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DIRECCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FOLIO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p4", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_CONSISTENTE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CONSISTENTE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CONSISTENTE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CONSISTENTE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_OBSERVACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_OBSERVACION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MAQUINA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MAQUINA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MAQUINA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MAQUINA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PAGINA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PAGINA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PAGINA", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PAGINA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p7", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p6", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p9", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p12", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p11", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_CIUDADANOS_RESPALDAN"" (""CODIGO_CUIDADANOS_RESPALDAN"", ""CODIGO_PAR"& _ 
                "TIDO"", ""CODIGO_MOVIMIENTO"", ""CODIGO_DEPARTAMENTO"", ""CODIGO_MUNICIPIO"", ""FIRMA"", "& _ 
                """HUELLA"", ""DIRECCION"", ""IDENTIDAD"", ""NOMBRE_IGUAL"", ""FOLIO"", ""PRIMER_NOMBRE_PAPE"& _ 
                "LETA"", ""IMAGEN_FIRMA"", ""ADICIONADO_POR"", ""FECHA_ADICION"", ""MODIFICADO_POR"", ""FEC"& _ 
                "HA_MODIFICACION"", ""CONSISTENTE"", ""OBSERVACION"", ""MAQUINA"", ""PAGINA"", ""SEGUNDO_NO"& _ 
                "MBRE_PAPELETA"", ""PRIMER_APELLIDO_PAPELETA"", ""SEGUNDO_APELLIDO_PAPELETA"") VALUES "& _ 
                "(:p1, :CODIGO_PARTIDO, :CODIGO_MOVIMIENTO, :CODIGO_DEPARTAMENTO, :CODIGO_MUNICIP"& _ 
                "IO, :FIRMA, :HUELLA, :DIRECCION, :IDENTIDAD, :NOMBRE_IGUAL, :FOLIO, :p3, :IMAGEN"& _ 
                "_FIRMA, :ADICIONADO_POR, :FECHA_ADICION, :MODIFICADO_POR, :FECHA_MODIFICACION, :"& _ 
                "CONSISTENTE, :OBSERVACION, :MAQUINA, :PAGINA, :p5, :p8, :p10)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p3", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN_FIRMA", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN_FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CONSISTENTE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CONSISTENTE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("OBSERVACION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MAQUINA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MAQUINA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PAGINA", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PAGINA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p5", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p8", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p10", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_CIUDADANOS_RESPALDAN"" SET ""CODIGO_CUIDADANOS_RESPALDAN"" = :p1, ""CODIGO"& _ 
                "_PARTIDO"" = :CODIGO_PARTIDO, ""CODIGO_MOVIMIENTO"" = :CODIGO_MOVIMIENTO, ""CODIGO_D"& _ 
                "EPARTAMENTO"" = :CODIGO_DEPARTAMENTO, ""CODIGO_MUNICIPIO"" = :CODIGO_MUNICIPIO, ""FI"& _ 
                "RMA"" = :FIRMA, ""HUELLA"" = :HUELLA, ""DIRECCION"" = :DIRECCION, ""IDENTIDAD"" = :IDEN"& _ 
                "TIDAD, ""NOMBRE_IGUAL"" = :NOMBRE_IGUAL, ""FOLIO"" = :FOLIO, ""PRIMER_NOMBRE_PAPELETA"& _ 
                """ = :p3, ""IMAGEN_FIRMA"" = :IMAGEN_FIRMA, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""FE"& _ 
                "CHA_ADICION"" = :FECHA_ADICION, ""MODIFICADO_POR"" = :MODIFICADO_POR, ""FECHA_MODIFI"& _ 
                "CACION"" = :FECHA_MODIFICACION, ""CONSISTENTE"" = :CONSISTENTE, ""OBSERVACION"" = :OB"& _ 
                "SERVACION, ""MAQUINA"" = :MAQUINA, ""PAGINA"" = :PAGINA, ""SEGUNDO_NOMBRE_PAPELETA"" ="& _ 
                " :p5, ""PRIMER_APELLIDO_PAPELETA"" = :p8, ""SEGUNDO_APELLIDO_PAPELETA"" = :p10 WHERE"& _ 
                " ((""CODIGO_CUIDADANOS_RESPALDAN"" = :p2) AND (""CODIGO_PARTIDO"" = :Original_CODIGO"& _ 
                "_PARTIDO) AND (""CODIGO_MOVIMIENTO"" = :Original_CODIGO_MOVIMIENTO) AND (""CODIGO_D"& _ 
                "EPARTAMENTO"" = :Original_CODIGO_DEPARTAMENTO) AND (""CODIGO_MUNICIPIO"" = :Origina"& _ 
                "l_CODIGO_MUNICIPIO) AND ((:IsNull_FIRMA = 1 AND ""FIRMA"" IS NULL) OR (""FIRMA"" = :"& _ 
                "Original_FIRMA)) AND ((:IsNull_HUELLA = 1 AND ""HUELLA"" IS NULL) OR (""HUELLA"" = :"& _ 
                "Original_HUELLA)) AND ((:IsNull_DIRECCION = 1 AND ""DIRECCION"" IS NULL) OR (""DIRE"& _ 
                "CCION"" = :Original_DIRECCION)) AND (""IDENTIDAD"" = :Original_IDENTIDAD) AND ((:Is"& _ 
                "Null_NOMBRE_IGUAL = 1 AND ""NOMBRE_IGUAL"" IS NULL) OR (""NOMBRE_IGUAL"" = :Original"& _ 
                "_NOMBRE_IGUAL)) AND ((:IsNull_FOLIO = 1 AND ""FOLIO"" IS NULL) OR (""FOLIO"" = :Orig"& _ 
                "inal_FOLIO)) AND (""PRIMER_NOMBRE_PAPELETA"" = :p4) AND (""ADICIONADO_POR"" = :Origi"& _ 
                "nal_ADICIONADO_POR) AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNul"& _ 
                "l_MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Origi"& _ 
                "nal_MODIFICADO_POR)) AND ((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACIO"& _ 
                "N"" IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FECHA_MODIFICACION)) AND ((:IsN"& _ 
                "ull_CONSISTENTE = 1 AND ""CONSISTENTE"" IS NULL) OR (""CONSISTENTE"" = :Original_CON"& _ 
                "SISTENTE)) AND ((:IsNull_OBSERVACION = 1 AND ""OBSERVACION"" IS NULL) OR (""OBSERVA"& _ 
                "CION"" = :Original_OBSERVACION)) AND ((:IsNull_MAQUINA = 1 AND ""MAQUINA"" IS NULL)"& _ 
                " OR (""MAQUINA"" = :Original_MAQUINA)) AND ((:IsNull_PAGINA = 1 AND ""PAGINA"" IS NU"& _ 
                "LL) OR (""PAGINA"" = :Original_PAGINA)) AND ((:p7 = 1 AND ""SEGUNDO_NOMBRE_PAPELETA"& _ 
                """ IS NULL) OR (""SEGUNDO_NOMBRE_PAPELETA"" = :p6)) AND (""PRIMER_APELLIDO_PAPELETA"""& _ 
                " = :p9) AND ((:p12 = 1 AND ""SEGUNDO_APELLIDO_PAPELETA"" IS NULL) OR (""SEGUNDO_APE"& _ 
                "LLIDO_PAPELETA"" = :p11)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p3", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN_FIRMA", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN_FIRMA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CONSISTENTE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CONSISTENTE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("OBSERVACION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MAQUINA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MAQUINA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PAGINA", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PAGINA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p5", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p8", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p10", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CUIDADANOS_RESPALDAN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FIRMA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FIRMA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FIRMA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_HUELLA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_HUELLA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "HUELLA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DIRECCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DIRECCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DIRECCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMBRE_IGUAL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMBRE_IGUAL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FOLIO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FOLIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FOLIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p4", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_CONSISTENTE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CONSISTENTE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CONSISTENTE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CONSISTENTE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_OBSERVACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_OBSERVACION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MAQUINA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MAQUINA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MAQUINA", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MAQUINA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PAGINA", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PAGINA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PAGINA", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PAGINA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p7", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p6", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p9", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p12", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p11", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO_PAPELETA", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGO_CUIDADANOS_RESPALDAN, CODIGO_PARTIDO, CODIGO_MOVIMIENTO, COD"& _ 
                "IGO_DEPARTAMENTO, CODIGO_MUNICIPIO, FIRMA, HUELLA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DI"& _ 
                "RECCION, IDENTIDAD, NOMBRE_IGUAL, FOLIO, PRIMER_NOMBRE_PAPELETA, IMAGEN_FIRMA, A"& _ 
                "DICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FECHA_M"& _ 
                "ODIFICACION, CONSISTENTE, OBSERVACION, MAQUINA, PAGINA, SEGUNDO_NOMBRE_PAPELETA,"& _ 
                " PRIMER_APELLIDO_PAPELETA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SEGUNDO_APELLIDO_PAPELETA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_CIUDADANOS_RESPALDAN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCiudadanos.IM_CIUDADANOS_RESPALDAN1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCiudadanos.IM_CIUDADANOS_RESPALDAN1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCiudadanos.IM_CIUDADANOS_RESPALDAN1DataTable = New DSCiudadanos.IM_CIUDADANOS_RESPALDAN1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCiudadanos.IM_CIUDADANOS_RESPALDAN1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCiudadanos) As Integer
            Return Me.Adapter.Update(dataSet, "IM_CIUDADANOS_RESPALDAN1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal p2 As Decimal,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_FIRMA As String,  _
                    ByVal Original_HUELLA As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_NOMBRE_IGUAL As String,  _
                    ByVal Original_FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal p4 As String,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_CONSISTENTE As String,  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_MAQUINA As String,  _
                    ByVal Original_PAGINA As Global.System.Nullable(Of Decimal),  _
                    ByVal p6 As String,  _
                    ByVal p9 As String,  _
                    ByVal p11 As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(p2,Decimal)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODIGO_PARTIDO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO_MOVIMIENTO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODIGO_MUNICIPIO,Decimal)
            If (Original_FIRMA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_FIRMA,String)
            End If
            If (Original_HUELLA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_HUELLA,String)
            End If
            If (Original_DIRECCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DIRECCION,String)
            End If
            If (Original_IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDENTIDAD")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_IDENTIDAD,String)
            End If
            If (Original_NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_NOMBRE_IGUAL,String)
            End If
            If (Original_FOLIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_FOLIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p4")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(p4,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CONSISTENTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CONSISTENTE,String)
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_MAQUINA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_MAQUINA,String)
            End If
            If (Original_PAGINA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PAGINA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(p6,String)
            End If
            If (p9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p9")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(p9,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(p11,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal p1 As Decimal,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal FIRMA As String,  _
                    ByVal HUELLA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE_IGUAL As String,  _
                    ByVal FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal p3 As String,  _
                    ByVal IMAGEN_FIRMA() As Byte,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal CONSISTENTE As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal MAQUINA As String,  _
                    ByVal PAGINA As Global.System.Nullable(Of Decimal),  _
                    ByVal p5 As String,  _
                    ByVal p8 As String,  _
                    ByVal p10 As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(p1,Decimal)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_PARTIDO,Decimal)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO_MOVIMIENTO,Decimal)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODIGO_MUNICIPIO,Decimal)
            If (FIRMA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FIRMA,String)
            End If
            If (HUELLA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(HUELLA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DIRECCION,String)
            End If
            If (IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDENTIDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(IDENTIDAD,String)
            End If
            If (NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(NOMBRE_IGUAL,String)
            End If
            If (FOLIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(FOLIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p3")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p3,String)
            End If
            If (IMAGEN_FIRMA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(IMAGEN_FIRMA,Byte())
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(FECHA_ADICION,Date)
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CONSISTENTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CONSISTENTE,String)
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(OBSERVACION,String)
            End If
            If (MAQUINA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MAQUINA,String)
            End If
            If (PAGINA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(PAGINA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(p5,String)
            End If
            If (p8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p8")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(p8,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(p10,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal p1 As Decimal,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal FIRMA As String,  _
                    ByVal HUELLA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE_IGUAL As String,  _
                    ByVal FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal p3 As String,  _
                    ByVal IMAGEN_FIRMA() As Byte,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal CONSISTENTE As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal MAQUINA As String,  _
                    ByVal PAGINA As Global.System.Nullable(Of Decimal),  _
                    ByVal p5 As String,  _
                    ByVal p8 As String,  _
                    ByVal p10 As String,  _
                    ByVal p2 As Decimal,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_FIRMA As String,  _
                    ByVal Original_HUELLA As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_NOMBRE_IGUAL As String,  _
                    ByVal Original_FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal p4 As String,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_CONSISTENTE As String,  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_MAQUINA As String,  _
                    ByVal Original_PAGINA As Global.System.Nullable(Of Decimal),  _
                    ByVal p6 As String,  _
                    ByVal p9 As String,  _
                    ByVal p11 As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(p1,Decimal)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_PARTIDO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO_MOVIMIENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODIGO_MUNICIPIO,Decimal)
            If (FIRMA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FIRMA,String)
            End If
            If (HUELLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(HUELLA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DIRECCION,String)
            End If
            If (IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDENTIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(IDENTIDAD,String)
            End If
            If (NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(NOMBRE_IGUAL,String)
            End If
            If (FOLIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(FOLIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p3")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p3,String)
            End If
            If (IMAGEN_FIRMA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(IMAGEN_FIRMA,Byte())
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(FECHA_ADICION,Date)
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CONSISTENTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CONSISTENTE,String)
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(OBSERVACION,String)
            End If
            If (MAQUINA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(MAQUINA,String)
            End If
            If (PAGINA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(PAGINA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(p5,String)
            End If
            If (p8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p8")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(p8,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(p10,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(p2,Decimal)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_CODIGO_PARTIDO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_CODIGO_MOVIMIENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CODIGO_MUNICIPIO,Decimal)
            If (Original_FIRMA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_FIRMA,String)
            End If
            If (Original_HUELLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_HUELLA,String)
            End If
            If (Original_DIRECCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_DIRECCION,String)
            End If
            If (Original_IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDENTIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_IDENTIDAD,String)
            End If
            If (Original_NOMBRE_IGUAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_NOMBRE_IGUAL,String)
            End If
            If (Original_FOLIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_FOLIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (p4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p4")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(p4,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_CONSISTENTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_CONSISTENTE,String)
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_MAQUINA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_MAQUINA,String)
            End If
            If (Original_PAGINA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_PAGINA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(p6,String)
            End If
            If (p9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p9")
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(p9,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(p11,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal FIRMA As String,  _
                    ByVal HUELLA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE_IGUAL As String,  _
                    ByVal FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal p3 As String,  _
                    ByVal IMAGEN_FIRMA() As Byte,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal CONSISTENTE As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal MAQUINA As String,  _
                    ByVal PAGINA As Global.System.Nullable(Of Decimal),  _
                    ByVal p5 As String,  _
                    ByVal p8 As String,  _
                    ByVal p10 As String,  _
                    ByVal p2 As Decimal,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_FIRMA As String,  _
                    ByVal Original_HUELLA As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_NOMBRE_IGUAL As String,  _
                    ByVal Original_FOLIO As Global.System.Nullable(Of Decimal),  _
                    ByVal p4 As String,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_CONSISTENTE As String,  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_MAQUINA As String,  _
                    ByVal Original_PAGINA As Global.System.Nullable(Of Decimal),  _
                    ByVal p6 As String,  _
                    ByVal p9 As String,  _
                    ByVal p11 As String) As Integer
            Return Me.Update(p2, Original_CODIGO_PARTIDO, Original_CODIGO_MOVIMIENTO, CODIGO_DEPARTAMENTO, CODIGO_MUNICIPIO, FIRMA, HUELLA, DIRECCION, IDENTIDAD, NOMBRE_IGUAL, FOLIO, p3, IMAGEN_FIRMA, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, CONSISTENTE, OBSERVACION, MAQUINA, PAGINA, p5, p8, p10, p2, Original_CODIGO_PARTIDO, Original_CODIGO_MOVIMIENTO, Original_CODIGO_DEPARTAMENTO, Original_CODIGO_MUNICIPIO, Original_FIRMA, Original_HUELLA, Original_DIRECCION, Original_IDENTIDAD, Original_NOMBRE_IGUAL, Original_FOLIO, p4, Original_ADICIONADO_POR, Original_FECHA_ADICION, Original_MODIFICADO_POR, Original_FECHA_MODIFICACION, Original_CONSISTENTE, Original_OBSERVACION, Original_MAQUINA, Original_PAGINA, p6, p9, p11)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _iM_CIUDADANOS_RESPALDANTableAdapter As IM_CIUDADANOS_RESPALDANTableAdapter
        
        Private _iM_CIUDADANOS_RESPALDAN1TableAdapter As IM_CIUDADANOS_RESPALDAN1TableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_CIUDADANOS_RESPALDANTableAdapter() As IM_CIUDADANOS_RESPALDANTableAdapter
            Get
                Return Me._iM_CIUDADANOS_RESPALDANTableAdapter
            End Get
            Set
                Me._iM_CIUDADANOS_RESPALDANTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_CIUDADANOS_RESPALDAN1TableAdapter() As IM_CIUDADANOS_RESPALDAN1TableAdapter
            Get
                Return Me._iM_CIUDADANOS_RESPALDAN1TableAdapter
            End Get
            Set
                Me._iM_CIUDADANOS_RESPALDAN1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_CIUDADANOS_RESPALDANTableAdapter.Connection
                End If
                If ((Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSCiudadanos, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_CIUDADANOS_RESPALDAN1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_CIUDADANOS_RESPALDAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_CIUDADANOS_RESPALDANTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSCiudadanos, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_CIUDADANOS_RESPALDAN1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_CIUDADANOS_RESPALDAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_CIUDADANOS_RESPALDANTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSCiudadanos, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_CIUDADANOS_RESPALDAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_CIUDADANOS_RESPALDANTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_CIUDADANOS_RESPALDAN1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSCiudadanos) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_CIUDADANOS_RESPALDANTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_CIUDADANOS_RESPALDANTableAdapter, Me._iM_CIUDADANOS_RESPALDANTableAdapter.Connection)
                    Me._iM_CIUDADANOS_RESPALDANTableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_CIUDADANOS_RESPALDANTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_CIUDADANOS_RESPALDANTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_CIUDADANOS_RESPALDANTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_CIUDADANOS_RESPALDANTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_CIUDADANOS_RESPALDAN1TableAdapter, Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Connection)
                    Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._iM_CIUDADANOS_RESPALDANTableAdapter) Is Nothing) Then
                    Me._iM_CIUDADANOS_RESPALDANTableAdapter.Connection = CType(revertConnections(Me._iM_CIUDADANOS_RESPALDANTableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_CIUDADANOS_RESPALDANTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iM_CIUDADANOS_RESPALDAN1TableAdapter) Is Nothing) Then
                    Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Connection = CType(revertConnections(Me._iM_CIUDADANOS_RESPALDAN1TableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_CIUDADANOS_RESPALDAN1TableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
