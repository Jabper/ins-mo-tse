'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4927
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DT_Renuncia"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DT_Renuncia
    Inherits Global.System.Data.DataSet
    
    Private tableIM_V_CANDIDATO_RENUNCIA As IM_V_CANDIDATO_RENUNCIADataTable
    
    Private tableIM_MOTIVOS_RENUNCIA As IM_MOTIVOS_RENUNCIADataTable
    
    Private tableIM_RENUNCIAS As IM_RENUNCIASDataTable
    
    Private tableRENUNCIAS As RENUNCIASDataTable
    
    Private tableIM_MOTIVOS_RENUNCIA1 As IM_MOTIVOS_RENUNCIA1DataTable
    
    Private tableIM_SUSTITUCIONES As IM_SUSTITUCIONESDataTable
    
    Private tableIM_MOTIVO_SUSTITUCION As IM_MOTIVO_SUSTITUCIONDataTable
    
    Private tableIM_MOTIVO_SUSTITUCION1 As IM_MOTIVO_SUSTITUCION1DataTable
    
    Private tableIM_V_REPORTE_SUSTITUCIONES As IM_V_REPORTE_SUSTITUCIONESDataTable
    
    Private tableSUSTITUCIONES As SUSTITUCIONESDataTable
    
    Private relationIM_FK1_RENUNCIAS As Global.System.Data.DataRelation
    
    Private relationIM_FK1_RENUNCIAS1 As Global.System.Data.DataRelation
    
    Private relationIM_FK1_RENUNCIAS2 As Global.System.Data.DataRelation
    
    Private relationIM_FK1_MOTIVO As Global.System.Data.DataRelation
    
    Private relationIM_FK1_MOTIVO1 As Global.System.Data.DataRelation
    
    Private relationIM_FK1_MOTIVO2 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IM_V_CANDIDATO_RENUNCIA")) Is Nothing) Then
                MyBase.Tables.Add(New IM_V_CANDIDATO_RENUNCIADataTable(ds.Tables("IM_V_CANDIDATO_RENUNCIA")))
            End If
            If (Not (ds.Tables("IM_MOTIVOS_RENUNCIA")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVOS_RENUNCIADataTable(ds.Tables("IM_MOTIVOS_RENUNCIA")))
            End If
            If (Not (ds.Tables("IM_RENUNCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New IM_RENUNCIASDataTable(ds.Tables("IM_RENUNCIAS")))
            End If
            If (Not (ds.Tables("RENUNCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New RENUNCIASDataTable(ds.Tables("RENUNCIAS")))
            End If
            If (Not (ds.Tables("IM_MOTIVOS_RENUNCIA1")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVOS_RENUNCIA1DataTable(ds.Tables("IM_MOTIVOS_RENUNCIA1")))
            End If
            If (Not (ds.Tables("IM_SUSTITUCIONES")) Is Nothing) Then
                MyBase.Tables.Add(New IM_SUSTITUCIONESDataTable(ds.Tables("IM_SUSTITUCIONES")))
            End If
            If (Not (ds.Tables("IM_MOTIVO_SUSTITUCION")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVO_SUSTITUCIONDataTable(ds.Tables("IM_MOTIVO_SUSTITUCION")))
            End If
            If (Not (ds.Tables("IM_MOTIVO_SUSTITUCION1")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVO_SUSTITUCION1DataTable(ds.Tables("IM_MOTIVO_SUSTITUCION1")))
            End If
            If (Not (ds.Tables("IM_V_REPORTE_SUSTITUCIONES")) Is Nothing) Then
                MyBase.Tables.Add(New IM_V_REPORTE_SUSTITUCIONESDataTable(ds.Tables("IM_V_REPORTE_SUSTITUCIONES")))
            End If
            If (Not (ds.Tables("SUSTITUCIONES")) Is Nothing) Then
                MyBase.Tables.Add(New SUSTITUCIONESDataTable(ds.Tables("SUSTITUCIONES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_V_CANDIDATO_RENUNCIA() As IM_V_CANDIDATO_RENUNCIADataTable
        Get
            Return Me.tableIM_V_CANDIDATO_RENUNCIA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_MOTIVOS_RENUNCIA() As IM_MOTIVOS_RENUNCIADataTable
        Get
            Return Me.tableIM_MOTIVOS_RENUNCIA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_RENUNCIAS() As IM_RENUNCIASDataTable
        Get
            Return Me.tableIM_RENUNCIAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RENUNCIAS() As RENUNCIASDataTable
        Get
            Return Me.tableRENUNCIAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_MOTIVOS_RENUNCIA1() As IM_MOTIVOS_RENUNCIA1DataTable
        Get
            Return Me.tableIM_MOTIVOS_RENUNCIA1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_SUSTITUCIONES() As IM_SUSTITUCIONESDataTable
        Get
            Return Me.tableIM_SUSTITUCIONES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_MOTIVO_SUSTITUCION() As IM_MOTIVO_SUSTITUCIONDataTable
        Get
            Return Me.tableIM_MOTIVO_SUSTITUCION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_MOTIVO_SUSTITUCION1() As IM_MOTIVO_SUSTITUCION1DataTable
        Get
            Return Me.tableIM_MOTIVO_SUSTITUCION1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IM_V_REPORTE_SUSTITUCIONES() As IM_V_REPORTE_SUSTITUCIONESDataTable
        Get
            Return Me.tableIM_V_REPORTE_SUSTITUCIONES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SUSTITUCIONES() As SUSTITUCIONESDataTable
        Get
            Return Me.tableSUSTITUCIONES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DT_Renuncia = CType(MyBase.Clone,DT_Renuncia)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("IM_V_CANDIDATO_RENUNCIA")) Is Nothing) Then
                MyBase.Tables.Add(New IM_V_CANDIDATO_RENUNCIADataTable(ds.Tables("IM_V_CANDIDATO_RENUNCIA")))
            End If
            If (Not (ds.Tables("IM_MOTIVOS_RENUNCIA")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVOS_RENUNCIADataTable(ds.Tables("IM_MOTIVOS_RENUNCIA")))
            End If
            If (Not (ds.Tables("IM_RENUNCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New IM_RENUNCIASDataTable(ds.Tables("IM_RENUNCIAS")))
            End If
            If (Not (ds.Tables("RENUNCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New RENUNCIASDataTable(ds.Tables("RENUNCIAS")))
            End If
            If (Not (ds.Tables("IM_MOTIVOS_RENUNCIA1")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVOS_RENUNCIA1DataTable(ds.Tables("IM_MOTIVOS_RENUNCIA1")))
            End If
            If (Not (ds.Tables("IM_SUSTITUCIONES")) Is Nothing) Then
                MyBase.Tables.Add(New IM_SUSTITUCIONESDataTable(ds.Tables("IM_SUSTITUCIONES")))
            End If
            If (Not (ds.Tables("IM_MOTIVO_SUSTITUCION")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVO_SUSTITUCIONDataTable(ds.Tables("IM_MOTIVO_SUSTITUCION")))
            End If
            If (Not (ds.Tables("IM_MOTIVO_SUSTITUCION1")) Is Nothing) Then
                MyBase.Tables.Add(New IM_MOTIVO_SUSTITUCION1DataTable(ds.Tables("IM_MOTIVO_SUSTITUCION1")))
            End If
            If (Not (ds.Tables("IM_V_REPORTE_SUSTITUCIONES")) Is Nothing) Then
                MyBase.Tables.Add(New IM_V_REPORTE_SUSTITUCIONESDataTable(ds.Tables("IM_V_REPORTE_SUSTITUCIONES")))
            End If
            If (Not (ds.Tables("SUSTITUCIONES")) Is Nothing) Then
                MyBase.Tables.Add(New SUSTITUCIONESDataTable(ds.Tables("SUSTITUCIONES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIM_V_CANDIDATO_RENUNCIA = CType(MyBase.Tables("IM_V_CANDIDATO_RENUNCIA"),IM_V_CANDIDATO_RENUNCIADataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_V_CANDIDATO_RENUNCIA) Is Nothing) Then
                Me.tableIM_V_CANDIDATO_RENUNCIA.InitVars
            End If
        End If
        Me.tableIM_MOTIVOS_RENUNCIA = CType(MyBase.Tables("IM_MOTIVOS_RENUNCIA"),IM_MOTIVOS_RENUNCIADataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_MOTIVOS_RENUNCIA) Is Nothing) Then
                Me.tableIM_MOTIVOS_RENUNCIA.InitVars
            End If
        End If
        Me.tableIM_RENUNCIAS = CType(MyBase.Tables("IM_RENUNCIAS"),IM_RENUNCIASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_RENUNCIAS) Is Nothing) Then
                Me.tableIM_RENUNCIAS.InitVars
            End If
        End If
        Me.tableRENUNCIAS = CType(MyBase.Tables("RENUNCIAS"),RENUNCIASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRENUNCIAS) Is Nothing) Then
                Me.tableRENUNCIAS.InitVars
            End If
        End If
        Me.tableIM_MOTIVOS_RENUNCIA1 = CType(MyBase.Tables("IM_MOTIVOS_RENUNCIA1"),IM_MOTIVOS_RENUNCIA1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_MOTIVOS_RENUNCIA1) Is Nothing) Then
                Me.tableIM_MOTIVOS_RENUNCIA1.InitVars
            End If
        End If
        Me.tableIM_SUSTITUCIONES = CType(MyBase.Tables("IM_SUSTITUCIONES"),IM_SUSTITUCIONESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_SUSTITUCIONES) Is Nothing) Then
                Me.tableIM_SUSTITUCIONES.InitVars
            End If
        End If
        Me.tableIM_MOTIVO_SUSTITUCION = CType(MyBase.Tables("IM_MOTIVO_SUSTITUCION"),IM_MOTIVO_SUSTITUCIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_MOTIVO_SUSTITUCION) Is Nothing) Then
                Me.tableIM_MOTIVO_SUSTITUCION.InitVars
            End If
        End If
        Me.tableIM_MOTIVO_SUSTITUCION1 = CType(MyBase.Tables("IM_MOTIVO_SUSTITUCION1"),IM_MOTIVO_SUSTITUCION1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_MOTIVO_SUSTITUCION1) Is Nothing) Then
                Me.tableIM_MOTIVO_SUSTITUCION1.InitVars
            End If
        End If
        Me.tableIM_V_REPORTE_SUSTITUCIONES = CType(MyBase.Tables("IM_V_REPORTE_SUSTITUCIONES"),IM_V_REPORTE_SUSTITUCIONESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIM_V_REPORTE_SUSTITUCIONES) Is Nothing) Then
                Me.tableIM_V_REPORTE_SUSTITUCIONES.InitVars
            End If
        End If
        Me.tableSUSTITUCIONES = CType(MyBase.Tables("SUSTITUCIONES"),SUSTITUCIONESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSUSTITUCIONES) Is Nothing) Then
                Me.tableSUSTITUCIONES.InitVars
            End If
        End If
        Me.relationIM_FK1_RENUNCIAS = Me.Relations("IM_FK1_RENUNCIAS")
        Me.relationIM_FK1_RENUNCIAS1 = Me.Relations("IM_FK1_RENUNCIAS1")
        Me.relationIM_FK1_RENUNCIAS2 = Me.Relations("IM_FK1_RENUNCIAS2")
        Me.relationIM_FK1_MOTIVO = Me.Relations("IM_FK1_MOTIVO")
        Me.relationIM_FK1_MOTIVO1 = Me.Relations("IM_FK1_MOTIVO1")
        Me.relationIM_FK1_MOTIVO2 = Me.Relations("IM_FK1_MOTIVO2")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DT_Renuncia"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DT_Renuncia.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIM_V_CANDIDATO_RENUNCIA = New IM_V_CANDIDATO_RENUNCIADataTable
        MyBase.Tables.Add(Me.tableIM_V_CANDIDATO_RENUNCIA)
        Me.tableIM_MOTIVOS_RENUNCIA = New IM_MOTIVOS_RENUNCIADataTable
        MyBase.Tables.Add(Me.tableIM_MOTIVOS_RENUNCIA)
        Me.tableIM_RENUNCIAS = New IM_RENUNCIASDataTable
        MyBase.Tables.Add(Me.tableIM_RENUNCIAS)
        Me.tableRENUNCIAS = New RENUNCIASDataTable
        MyBase.Tables.Add(Me.tableRENUNCIAS)
        Me.tableIM_MOTIVOS_RENUNCIA1 = New IM_MOTIVOS_RENUNCIA1DataTable
        MyBase.Tables.Add(Me.tableIM_MOTIVOS_RENUNCIA1)
        Me.tableIM_SUSTITUCIONES = New IM_SUSTITUCIONESDataTable
        MyBase.Tables.Add(Me.tableIM_SUSTITUCIONES)
        Me.tableIM_MOTIVO_SUSTITUCION = New IM_MOTIVO_SUSTITUCIONDataTable
        MyBase.Tables.Add(Me.tableIM_MOTIVO_SUSTITUCION)
        Me.tableIM_MOTIVO_SUSTITUCION1 = New IM_MOTIVO_SUSTITUCION1DataTable
        MyBase.Tables.Add(Me.tableIM_MOTIVO_SUSTITUCION1)
        Me.tableIM_V_REPORTE_SUSTITUCIONES = New IM_V_REPORTE_SUSTITUCIONESDataTable
        MyBase.Tables.Add(Me.tableIM_V_REPORTE_SUSTITUCIONES)
        Me.tableSUSTITUCIONES = New SUSTITUCIONESDataTable
        MyBase.Tables.Add(Me.tableSUSTITUCIONES)
        Me.relationIM_FK1_RENUNCIAS = New Global.System.Data.DataRelation("IM_FK1_RENUNCIAS", New Global.System.Data.DataColumn() {Me.tableIM_MOTIVOS_RENUNCIA.CODIGO_MOTIVOColumn}, New Global.System.Data.DataColumn() {Me.tableIM_RENUNCIAS.CODIGO_MOTIVOColumn}, false)
        Me.Relations.Add(Me.relationIM_FK1_RENUNCIAS)
        Me.relationIM_FK1_RENUNCIAS1 = New Global.System.Data.DataRelation("IM_FK1_RENUNCIAS1", New Global.System.Data.DataColumn() {Me.tableIM_MOTIVOS_RENUNCIA.CODIGO_MOTIVOColumn}, New Global.System.Data.DataColumn() {Me.tableRENUNCIAS.CODIGO_MOTIVOColumn}, false)
        Me.Relations.Add(Me.relationIM_FK1_RENUNCIAS1)
        Me.relationIM_FK1_RENUNCIAS2 = New Global.System.Data.DataRelation("IM_FK1_RENUNCIAS2", New Global.System.Data.DataColumn() {Me.tableIM_MOTIVOS_RENUNCIA1.CODIGO_MOTIVOColumn}, New Global.System.Data.DataColumn() {Me.tableIM_RENUNCIAS.CODIGO_MOTIVOColumn}, false)
        Me.Relations.Add(Me.relationIM_FK1_RENUNCIAS2)
        Me.relationIM_FK1_MOTIVO = New Global.System.Data.DataRelation("IM_FK1_MOTIVO", New Global.System.Data.DataColumn() {Me.tableIM_MOTIVO_SUSTITUCION1.CODIGO_MOTIVOColumn}, New Global.System.Data.DataColumn() {Me.tableIM_SUSTITUCIONES.CODIGO_MOTIVOColumn}, false)
        Me.Relations.Add(Me.relationIM_FK1_MOTIVO)
        Me.relationIM_FK1_MOTIVO1 = New Global.System.Data.DataRelation("IM_FK1_MOTIVO1", New Global.System.Data.DataColumn() {Me.tableIM_MOTIVO_SUSTITUCION.CODIGO_MOTIVOColumn}, New Global.System.Data.DataColumn() {Me.tableSUSTITUCIONES.CODIGO_MOTIVOColumn}, false)
        Me.Relations.Add(Me.relationIM_FK1_MOTIVO1)
        Me.relationIM_FK1_MOTIVO2 = New Global.System.Data.DataRelation("IM_FK1_MOTIVO2", New Global.System.Data.DataColumn() {Me.tableIM_MOTIVO_SUSTITUCION1.CODIGO_MOTIVOColumn}, New Global.System.Data.DataColumn() {Me.tableSUSTITUCIONES.CODIGO_MOTIVOColumn}, false)
        Me.Relations.Add(Me.relationIM_FK1_MOTIVO2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_V_CANDIDATO_RENUNCIA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_MOTIVOS_RENUNCIA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_RENUNCIAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRENUNCIAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_MOTIVOS_RENUNCIA1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_SUSTITUCIONES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_MOTIVO_SUSTITUCION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_MOTIVO_SUSTITUCION1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIM_V_REPORTE_SUSTITUCIONES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSUSTITUCIONES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DT_Renuncia = New DT_Renuncia
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub IM_V_CANDIDATO_RENUNCIARowChangeEventHandler(ByVal sender As Object, ByVal e As IM_V_CANDIDATO_RENUNCIARowChangeEvent)
    
    Public Delegate Sub IM_MOTIVOS_RENUNCIARowChangeEventHandler(ByVal sender As Object, ByVal e As IM_MOTIVOS_RENUNCIARowChangeEvent)
    
    Public Delegate Sub IM_RENUNCIASRowChangeEventHandler(ByVal sender As Object, ByVal e As IM_RENUNCIASRowChangeEvent)
    
    Public Delegate Sub RENUNCIASRowChangeEventHandler(ByVal sender As Object, ByVal e As RENUNCIASRowChangeEvent)
    
    Public Delegate Sub IM_MOTIVOS_RENUNCIA1RowChangeEventHandler(ByVal sender As Object, ByVal e As IM_MOTIVOS_RENUNCIA1RowChangeEvent)
    
    Public Delegate Sub IM_SUSTITUCIONESRowChangeEventHandler(ByVal sender As Object, ByVal e As IM_SUSTITUCIONESRowChangeEvent)
    
    Public Delegate Sub IM_MOTIVO_SUSTITUCIONRowChangeEventHandler(ByVal sender As Object, ByVal e As IM_MOTIVO_SUSTITUCIONRowChangeEvent)
    
    Public Delegate Sub IM_MOTIVO_SUSTITUCION1RowChangeEventHandler(ByVal sender As Object, ByVal e As IM_MOTIVO_SUSTITUCION1RowChangeEvent)
    
    Public Delegate Sub IM_V_REPORTE_SUSTITUCIONESRowChangeEventHandler(ByVal sender As Object, ByVal e As IM_V_REPORTE_SUSTITUCIONESRowChangeEvent)
    
    Public Delegate Sub SUSTITUCIONESRowChangeEventHandler(ByVal sender As Object, ByVal e As SUSTITUCIONESRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_V_CANDIDATO_RENUNCIADataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_V_CANDIDATO_RENUNCIARow)
        
        Private columnCODIGO_CANDIDATOS As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnAPELLIDO As Global.System.Data.DataColumn
        
        Private columnPOSICION As Global.System.Data.DataColumn
        
        Private columnCARGO As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnPARTIDO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnMOTIVO As Global.System.Data.DataColumn
        
        Private columnRENUNCIA As Global.System.Data.DataColumn
        
        Private columnCODIGO_CARGO_ELECTIVO As Global.System.Data.DataColumn
        
        Private columnImagen_firma As Global.System.Data.DataColumn
        
        Private columnSustituido As Global.System.Data.DataColumn
        
        Private columnREC1 As Global.System.Data.DataColumn
        
        Private columnREC2 As Global.System.Data.DataColumn
        
        Private columnREC3 As Global.System.Data.DataColumn
        
        Private columnREC4 As Global.System.Data.DataColumn
        
        Private columnREC5 As Global.System.Data.DataColumn
        
        Private columnREC6 As Global.System.Data.DataColumn
        
        Private columnREC7 As Global.System.Data.DataColumn
        
        Private columnREC8 As Global.System.Data.DataColumn
        
        Private columnREC9 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_V_CANDIDATO_RENUNCIA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CANDIDATOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CANDIDATOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RENUNCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENUNCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CARGO_ELECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CARGO_ELECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Imagen_firmaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImagen_firma
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SustituidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSustituido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REC9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnREC9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_V_CANDIDATO_RENUNCIARow
            Get
                Return CType(Me.Rows(index),IM_V_CANDIDATO_RENUNCIARow)
            End Get
        End Property
        
        Public Event IM_V_CANDIDATO_RENUNCIARowChanging As IM_V_CANDIDATO_RENUNCIARowChangeEventHandler
        
        Public Event IM_V_CANDIDATO_RENUNCIARowChanged As IM_V_CANDIDATO_RENUNCIARowChangeEventHandler
        
        Public Event IM_V_CANDIDATO_RENUNCIARowDeleting As IM_V_CANDIDATO_RENUNCIARowChangeEventHandler
        
        Public Event IM_V_CANDIDATO_RENUNCIARowDeleted As IM_V_CANDIDATO_RENUNCIARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_V_CANDIDATO_RENUNCIARow(ByVal row As IM_V_CANDIDATO_RENUNCIARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_V_CANDIDATO_RENUNCIARow( _
                    ByVal CODIGO_CANDIDATOS As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal NOMBRE As String,  _
                    ByVal APELLIDO As String,  _
                    ByVal POSICION As Decimal,  _
                    ByVal CARGO As String,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal PARTIDO As String,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal NOMBRE_MOVIMIENTO As String,  _
                    ByVal MOTIVO As String,  _
                    ByVal RENUNCIA As String,  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal Imagen_firma() As Byte,  _
                    ByVal Sustituido As String,  _
                    ByVal REC1 As String,  _
                    ByVal REC2 As String,  _
                    ByVal REC3 As String,  _
                    ByVal REC4 As String,  _
                    ByVal REC5 As String,  _
                    ByVal REC6 As String,  _
                    ByVal REC7 As String,  _
                    ByVal REC8 As String,  _
                    ByVal REC9 As String) As IM_V_CANDIDATO_RENUNCIARow
            Dim rowIM_V_CANDIDATO_RENUNCIARow As IM_V_CANDIDATO_RENUNCIARow = CType(Me.NewRow,IM_V_CANDIDATO_RENUNCIARow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CANDIDATOS, IDENTIDAD, NOMBRE, APELLIDO, POSICION, CARGO, CODIGO_DEPARTAMENTO, DEPARTAMENTO, CODIGO_MUNICIPIO, MUNICIPIO, CODIGO_PARTIDO, PARTIDO, CODIGO_MOVIMIENTO, NOMBRE_MOVIMIENTO, MOTIVO, RENUNCIA, CODIGO_CARGO_ELECTIVO, Imagen_firma, Sustituido, REC1, REC2, REC3, REC4, REC5, REC6, REC7, REC8, REC9}
            rowIM_V_CANDIDATO_RENUNCIARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_V_CANDIDATO_RENUNCIARow)
            Return rowIM_V_CANDIDATO_RENUNCIARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_V_CANDIDATO_RENUNCIADataTable = CType(MyBase.Clone,IM_V_CANDIDATO_RENUNCIADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_V_CANDIDATO_RENUNCIADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CANDIDATOS = MyBase.Columns("CODIGO_CANDIDATOS")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnAPELLIDO = MyBase.Columns("APELLIDO")
            Me.columnPOSICION = MyBase.Columns("POSICION")
            Me.columnCARGO = MyBase.Columns("CARGO")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnPARTIDO = MyBase.Columns("PARTIDO")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnNOMBRE_MOVIMIENTO = MyBase.Columns("NOMBRE_MOVIMIENTO")
            Me.columnMOTIVO = MyBase.Columns("MOTIVO")
            Me.columnRENUNCIA = MyBase.Columns("RENUNCIA")
            Me.columnCODIGO_CARGO_ELECTIVO = MyBase.Columns("CODIGO_CARGO_ELECTIVO")
            Me.columnImagen_firma = MyBase.Columns("Imagen_firma")
            Me.columnSustituido = MyBase.Columns("Sustituido")
            Me.columnREC1 = MyBase.Columns("REC1")
            Me.columnREC2 = MyBase.Columns("REC2")
            Me.columnREC3 = MyBase.Columns("REC3")
            Me.columnREC4 = MyBase.Columns("REC4")
            Me.columnREC5 = MyBase.Columns("REC5")
            Me.columnREC6 = MyBase.Columns("REC6")
            Me.columnREC7 = MyBase.Columns("REC7")
            Me.columnREC8 = MyBase.Columns("REC8")
            Me.columnREC9 = MyBase.Columns("REC9")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CANDIDATOS = New Global.System.Data.DataColumn("CODIGO_CANDIDATOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CANDIDATOS)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnAPELLIDO = New Global.System.Data.DataColumn("APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO)
            Me.columnPOSICION = New Global.System.Data.DataColumn("POSICION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSICION)
            Me.columnCARGO = New Global.System.Data.DataColumn("CARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARGO)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnPARTIDO = New Global.System.Data.DataColumn("PARTIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARTIDO)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnNOMBRE_MOVIMIENTO = New Global.System.Data.DataColumn("NOMBRE_MOVIMIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MOVIMIENTO)
            Me.columnMOTIVO = New Global.System.Data.DataColumn("MOTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTIVO)
            Me.columnRENUNCIA = New Global.System.Data.DataColumn("RENUNCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENUNCIA)
            Me.columnCODIGO_CARGO_ELECTIVO = New Global.System.Data.DataColumn("CODIGO_CARGO_ELECTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CARGO_ELECTIVO)
            Me.columnImagen_firma = New Global.System.Data.DataColumn("Imagen_firma", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImagen_firma)
            Me.columnSustituido = New Global.System.Data.DataColumn("Sustituido", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSustituido)
            Me.columnREC1 = New Global.System.Data.DataColumn("REC1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC1)
            Me.columnREC2 = New Global.System.Data.DataColumn("REC2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC2)
            Me.columnREC3 = New Global.System.Data.DataColumn("REC3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC3)
            Me.columnREC4 = New Global.System.Data.DataColumn("REC4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC4)
            Me.columnREC5 = New Global.System.Data.DataColumn("REC5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC5)
            Me.columnREC6 = New Global.System.Data.DataColumn("REC6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC6)
            Me.columnREC7 = New Global.System.Data.DataColumn("REC7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC7)
            Me.columnREC8 = New Global.System.Data.DataColumn("REC8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC8)
            Me.columnREC9 = New Global.System.Data.DataColumn("REC9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREC9)
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnNOMBRE.MaxLength = 100
            Me.columnAPELLIDO.MaxLength = 100
            Me.columnCARGO.MaxLength = 88
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnPARTIDO.MaxLength = 100
            Me.columnNOMBRE_MOVIMIENTO.MaxLength = 200
            Me.columnREC1.MaxLength = 1
            Me.columnREC2.MaxLength = 1
            Me.columnREC3.MaxLength = 1
            Me.columnREC4.MaxLength = 1
            Me.columnREC5.MaxLength = 1
            Me.columnREC6.MaxLength = 1
            Me.columnREC7.MaxLength = 1
            Me.columnREC8.MaxLength = 1
            Me.columnREC9.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_V_CANDIDATO_RENUNCIARow() As IM_V_CANDIDATO_RENUNCIARow
            Return CType(Me.NewRow,IM_V_CANDIDATO_RENUNCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_V_CANDIDATO_RENUNCIARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_V_CANDIDATO_RENUNCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_V_CANDIDATO_RENUNCIARowChangedEvent) Is Nothing) Then
                RaiseEvent IM_V_CANDIDATO_RENUNCIARowChanged(Me, New IM_V_CANDIDATO_RENUNCIARowChangeEvent(CType(e.Row,IM_V_CANDIDATO_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_V_CANDIDATO_RENUNCIARowChangingEvent) Is Nothing) Then
                RaiseEvent IM_V_CANDIDATO_RENUNCIARowChanging(Me, New IM_V_CANDIDATO_RENUNCIARowChangeEvent(CType(e.Row,IM_V_CANDIDATO_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_V_CANDIDATO_RENUNCIARowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_V_CANDIDATO_RENUNCIARowDeleted(Me, New IM_V_CANDIDATO_RENUNCIARowChangeEvent(CType(e.Row,IM_V_CANDIDATO_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_V_CANDIDATO_RENUNCIARowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_V_CANDIDATO_RENUNCIARowDeleting(Me, New IM_V_CANDIDATO_RENUNCIARowChangeEvent(CType(e.Row,IM_V_CANDIDATO_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_V_CANDIDATO_RENUNCIARow(ByVal row As IM_V_CANDIDATO_RENUNCIARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_V_CANDIDATO_RENUNCIADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_MOTIVOS_RENUNCIADataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_MOTIVOS_RENUNCIARow)
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_MOTIVOS_RENUNCIA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_MOTIVOS_RENUNCIARow
            Get
                Return CType(Me.Rows(index),IM_MOTIVOS_RENUNCIARow)
            End Get
        End Property
        
        Public Event IM_MOTIVOS_RENUNCIARowChanging As IM_MOTIVOS_RENUNCIARowChangeEventHandler
        
        Public Event IM_MOTIVOS_RENUNCIARowChanged As IM_MOTIVOS_RENUNCIARowChangeEventHandler
        
        Public Event IM_MOTIVOS_RENUNCIARowDeleting As IM_MOTIVOS_RENUNCIARowChangeEventHandler
        
        Public Event IM_MOTIVOS_RENUNCIARowDeleted As IM_MOTIVOS_RENUNCIARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_MOTIVOS_RENUNCIARow(ByVal row As IM_MOTIVOS_RENUNCIARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_MOTIVOS_RENUNCIARow(ByVal DESCRIPCION As String, ByVal CODIGO_MOTIVO As Decimal, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Date) As IM_MOTIVOS_RENUNCIARow
            Dim rowIM_MOTIVOS_RENUNCIARow As IM_MOTIVOS_RENUNCIARow = CType(Me.NewRow,IM_MOTIVOS_RENUNCIARow)
            Dim columnValuesArray() As Object = New Object() {DESCRIPCION, CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_ADICION, FECHA_MODIFICACION}
            rowIM_MOTIVOS_RENUNCIARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_MOTIVOS_RENUNCIARow)
            Return rowIM_MOTIVOS_RENUNCIARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_MOTIVO(ByVal CODIGO_MOTIVO As Decimal) As IM_MOTIVOS_RENUNCIARow
            Return CType(Me.Rows.Find(New Object() {CODIGO_MOTIVO}),IM_MOTIVOS_RENUNCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_MOTIVOS_RENUNCIADataTable = CType(MyBase.Clone,IM_MOTIVOS_RENUNCIADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_MOTIVOS_RENUNCIADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_MOTIVO}, true))
            Me.columnDESCRIPCION.MaxLength = 300
            Me.columnCODIGO_MOTIVO.AllowDBNull = false
            Me.columnCODIGO_MOTIVO.Unique = true
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnMODIFICADO_POR.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_MOTIVOS_RENUNCIARow() As IM_MOTIVOS_RENUNCIARow
            Return CType(Me.NewRow,IM_MOTIVOS_RENUNCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_MOTIVOS_RENUNCIARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_MOTIVOS_RENUNCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIARowChangedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIARowChanged(Me, New IM_MOTIVOS_RENUNCIARowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIARowChangingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIARowChanging(Me, New IM_MOTIVOS_RENUNCIARowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIARowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIARowDeleted(Me, New IM_MOTIVOS_RENUNCIARowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIARowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIARowDeleting(Me, New IM_MOTIVOS_RENUNCIARowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_MOTIVOS_RENUNCIARow(ByVal row As IM_MOTIVOS_RENUNCIARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_MOTIVOS_RENUNCIADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_RENUNCIASDataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_RENUNCIASRow)
        
        Private columnCODIGO_CANDIDATO As Global.System.Data.DataColumn
        
        Private columnPOSICION As Global.System.Data.DataColumn
        
        Private columnCODIGO_CARGO_ELECTIVO As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        Private columnPRIMER_NOMBRE As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_NOMBRE As Global.System.Data.DataColumn
        
        Private columnPRIMER_APELLIDO As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_APELLIDO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnIMAGEN_RENUNCIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_RENUNCIAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CANDIDATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CANDIDATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CARGO_ELECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CARGO_ELECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMAGEN_RENUNCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN_RENUNCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_RENUNCIASRow
            Get
                Return CType(Me.Rows(index),IM_RENUNCIASRow)
            End Get
        End Property
        
        Public Event IM_RENUNCIASRowChanging As IM_RENUNCIASRowChangeEventHandler
        
        Public Event IM_RENUNCIASRowChanged As IM_RENUNCIASRowChangeEventHandler
        
        Public Event IM_RENUNCIASRowDeleting As IM_RENUNCIASRowChangeEventHandler
        
        Public Event IM_RENUNCIASRowDeleted As IM_RENUNCIASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_RENUNCIASRow(ByVal row As IM_RENUNCIASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_RENUNCIASRow( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Decimal,  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Date,  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal parentIM_MOTIVOS_RENUNCIARowByIM_FK1_RENUNCIAS As IM_MOTIVOS_RENUNCIARow,  _
                    ByVal IMAGEN_RENUNCIA() As Byte) As IM_RENUNCIASRow
            Dim rowIM_RENUNCIASRow As IM_RENUNCIASRow = CType(Me.NewRow,IM_RENUNCIASRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_DEPARTAMENTO, CODIGO_MUNICIPIO, CODIGO_MOVIMIENTO, IDENTIDAD, CODIGO_PARTIDO, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, PRIMER_NOMBRE, SEGUNDO_NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, Nothing, IMAGEN_RENUNCIA}
            If (Not (parentIM_MOTIVOS_RENUNCIARowByIM_FK1_RENUNCIAS) Is Nothing) Then
                columnValuesArray(16) = parentIM_MOTIVOS_RENUNCIARowByIM_FK1_RENUNCIAS(1)
            End If
            rowIM_RENUNCIASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_RENUNCIASRow)
            Return rowIM_RENUNCIASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_CANDIDATOCODIGO_MOVIMIENTOCODIGO_PARTIDO(ByVal CODIGO_CANDIDATO As Decimal, ByVal CODIGO_MOVIMIENTO As Decimal, ByVal CODIGO_PARTIDO As Decimal) As IM_RENUNCIASRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_CANDIDATO, CODIGO_MOVIMIENTO, CODIGO_PARTIDO}),IM_RENUNCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_RENUNCIASDataTable = CType(MyBase.Clone,IM_RENUNCIASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_RENUNCIASDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CANDIDATO = MyBase.Columns("CODIGO_CANDIDATO")
            Me.columnPOSICION = MyBase.Columns("POSICION")
            Me.columnCODIGO_CARGO_ELECTIVO = MyBase.Columns("CODIGO_CARGO_ELECTIVO")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
            Me.columnPRIMER_NOMBRE = MyBase.Columns("PRIMER_NOMBRE")
            Me.columnSEGUNDO_NOMBRE = MyBase.Columns("SEGUNDO_NOMBRE")
            Me.columnPRIMER_APELLIDO = MyBase.Columns("PRIMER_APELLIDO")
            Me.columnSEGUNDO_APELLIDO = MyBase.Columns("SEGUNDO_APELLIDO")
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnIMAGEN_RENUNCIA = MyBase.Columns("IMAGEN_RENUNCIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CANDIDATO = New Global.System.Data.DataColumn("CODIGO_CANDIDATO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CANDIDATO)
            Me.columnPOSICION = New Global.System.Data.DataColumn("POSICION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSICION)
            Me.columnCODIGO_CARGO_ELECTIVO = New Global.System.Data.DataColumn("CODIGO_CARGO_ELECTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CARGO_ELECTIVO)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.columnPRIMER_NOMBRE = New Global.System.Data.DataColumn("PRIMER_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_NOMBRE)
            Me.columnSEGUNDO_NOMBRE = New Global.System.Data.DataColumn("SEGUNDO_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_NOMBRE)
            Me.columnPRIMER_APELLIDO = New Global.System.Data.DataColumn("PRIMER_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_APELLIDO)
            Me.columnSEGUNDO_APELLIDO = New Global.System.Data.DataColumn("SEGUNDO_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_APELLIDO)
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnIMAGEN_RENUNCIA = New Global.System.Data.DataColumn("IMAGEN_RENUNCIA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN_RENUNCIA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_CANDIDATO, Me.columnCODIGO_MOVIMIENTO, Me.columnCODIGO_PARTIDO}, true))
            Me.columnCODIGO_CANDIDATO.AllowDBNull = false
            Me.columnCODIGO_CARGO_ELECTIVO.AllowDBNull = false
            Me.columnCODIGO_DEPARTAMENTO.AllowDBNull = false
            Me.columnCODIGO_MUNICIPIO.AllowDBNull = false
            Me.columnCODIGO_MOVIMIENTO.AllowDBNull = false
            Me.columnIDENTIDAD.AllowDBNull = false
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnCODIGO_PARTIDO.AllowDBNull = false
            Me.columnADICIONADO_POR.AllowDBNull = false
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnFECHA_ADICION.AllowDBNull = false
            Me.columnMODIFICADO_POR.MaxLength = 10
            Me.columnPRIMER_NOMBRE.MaxLength = 100
            Me.columnSEGUNDO_NOMBRE.MaxLength = 100
            Me.columnPRIMER_APELLIDO.MaxLength = 100
            Me.columnSEGUNDO_APELLIDO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_RENUNCIASRow() As IM_RENUNCIASRow
            Return CType(Me.NewRow,IM_RENUNCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_RENUNCIASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_RENUNCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_RENUNCIASRowChangedEvent) Is Nothing) Then
                RaiseEvent IM_RENUNCIASRowChanged(Me, New IM_RENUNCIASRowChangeEvent(CType(e.Row,IM_RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_RENUNCIASRowChangingEvent) Is Nothing) Then
                RaiseEvent IM_RENUNCIASRowChanging(Me, New IM_RENUNCIASRowChangeEvent(CType(e.Row,IM_RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_RENUNCIASRowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_RENUNCIASRowDeleted(Me, New IM_RENUNCIASRowChangeEvent(CType(e.Row,IM_RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_RENUNCIASRowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_RENUNCIASRowDeleting(Me, New IM_RENUNCIASRowChangeEvent(CType(e.Row,IM_RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_RENUNCIASRow(ByVal row As IM_RENUNCIASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_RENUNCIASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RENUNCIASDataTable
        Inherits Global.System.Data.TypedTableBase(Of RENUNCIASRow)
        
        Private columnCODIGO_CANDIDATO As Global.System.Data.DataColumn
        
        Private columnPOSICION As Global.System.Data.DataColumn
        
        Private columnCODIGO_CARGO_ELECTIVO As Global.System.Data.DataColumn
        
        Private columnCARGO As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnMOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnPARTIDO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnIMAGEN_RENUNCIA As Global.System.Data.DataColumn
        
        Private columnREESTABLECER As Global.System.Data.DataColumn
        
        Private columnPRIMER_NOMBRE As Global.System.Data.DataColumn
        
        Private columnPRIMER_APELLIDO As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_NOMBRE As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_APELLIDO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RENUNCIAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CANDIDATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CANDIDATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CARGO_ELECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CARGO_ELECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMAGEN_RENUNCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN_RENUNCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REESTABLECERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREESTABLECER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RENUNCIASRow
            Get
                Return CType(Me.Rows(index),RENUNCIASRow)
            End Get
        End Property
        
        Public Event RENUNCIASRowChanging As RENUNCIASRowChangeEventHandler
        
        Public Event RENUNCIASRowChanged As RENUNCIASRowChangeEventHandler
        
        Public Event RENUNCIASRowDeleting As RENUNCIASRowChangeEventHandler
        
        Public Event RENUNCIASRowDeleted As RENUNCIASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRENUNCIASRow(ByVal row As RENUNCIASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRENUNCIASRow( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Decimal,  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CARGO As String,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal MOVIMIENTO As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal PARTIDO As String,  _
                    ByVal parentIM_MOTIVOS_RENUNCIARowByIM_FK1_RENUNCIAS1 As IM_MOTIVOS_RENUNCIARow,  _
                    ByVal IMAGEN_RENUNCIA() As Byte,  _
                    ByVal REESTABLECER As String,  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal SEGUNDO_APELLIDO As String) As RENUNCIASRow
            Dim rowRENUNCIASRow As RENUNCIASRow = CType(Me.NewRow,RENUNCIASRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CARGO, CODIGO_DEPARTAMENTO, DEPARTAMENTO, CODIGO_MUNICIPIO, MUNICIPIO, IDENTIDAD, CODIGO_MOVIMIENTO, MOVIMIENTO, CODIGO_PARTIDO, PARTIDO, Nothing, IMAGEN_RENUNCIA, REESTABLECER, PRIMER_NOMBRE, PRIMER_APELLIDO, SEGUNDO_NOMBRE, SEGUNDO_APELLIDO}
            If (Not (parentIM_MOTIVOS_RENUNCIARowByIM_FK1_RENUNCIAS1) Is Nothing) Then
                columnValuesArray(13) = parentIM_MOTIVOS_RENUNCIARowByIM_FK1_RENUNCIAS1(1)
            End If
            rowRENUNCIASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRENUNCIASRow)
            Return rowRENUNCIASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_CANDIDATOCODIGO_MOVIMIENTOMOVIMIENTOCODIGO_PARTIDO(ByVal CODIGO_CANDIDATO As Decimal, ByVal CODIGO_MOVIMIENTO As Decimal, ByVal MOVIMIENTO As String, ByVal CODIGO_PARTIDO As Decimal) As RENUNCIASRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_CANDIDATO, CODIGO_MOVIMIENTO, MOVIMIENTO, CODIGO_PARTIDO}),RENUNCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RENUNCIASDataTable = CType(MyBase.Clone,RENUNCIASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RENUNCIASDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CANDIDATO = MyBase.Columns("CODIGO_CANDIDATO")
            Me.columnPOSICION = MyBase.Columns("POSICION")
            Me.columnCODIGO_CARGO_ELECTIVO = MyBase.Columns("CODIGO_CARGO_ELECTIVO")
            Me.columnCARGO = MyBase.Columns("CARGO")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnMOVIMIENTO = MyBase.Columns("MOVIMIENTO")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnPARTIDO = MyBase.Columns("PARTIDO")
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnIMAGEN_RENUNCIA = MyBase.Columns("IMAGEN_RENUNCIA")
            Me.columnREESTABLECER = MyBase.Columns("REESTABLECER")
            Me.columnPRIMER_NOMBRE = MyBase.Columns("PRIMER_NOMBRE")
            Me.columnPRIMER_APELLIDO = MyBase.Columns("PRIMER_APELLIDO")
            Me.columnSEGUNDO_NOMBRE = MyBase.Columns("SEGUNDO_NOMBRE")
            Me.columnSEGUNDO_APELLIDO = MyBase.Columns("SEGUNDO_APELLIDO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CANDIDATO = New Global.System.Data.DataColumn("CODIGO_CANDIDATO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CANDIDATO)
            Me.columnPOSICION = New Global.System.Data.DataColumn("POSICION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSICION)
            Me.columnCODIGO_CARGO_ELECTIVO = New Global.System.Data.DataColumn("CODIGO_CARGO_ELECTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CARGO_ELECTIVO)
            Me.columnCARGO = New Global.System.Data.DataColumn("CARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARGO)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnMOVIMIENTO = New Global.System.Data.DataColumn("MOVIMIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIMIENTO)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnPARTIDO = New Global.System.Data.DataColumn("PARTIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARTIDO)
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnIMAGEN_RENUNCIA = New Global.System.Data.DataColumn("IMAGEN_RENUNCIA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN_RENUNCIA)
            Me.columnREESTABLECER = New Global.System.Data.DataColumn("REESTABLECER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREESTABLECER)
            Me.columnPRIMER_NOMBRE = New Global.System.Data.DataColumn("PRIMER_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_NOMBRE)
            Me.columnPRIMER_APELLIDO = New Global.System.Data.DataColumn("PRIMER_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_APELLIDO)
            Me.columnSEGUNDO_NOMBRE = New Global.System.Data.DataColumn("SEGUNDO_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_NOMBRE)
            Me.columnSEGUNDO_APELLIDO = New Global.System.Data.DataColumn("SEGUNDO_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_APELLIDO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_CANDIDATO, Me.columnCODIGO_MOVIMIENTO, Me.columnMOVIMIENTO, Me.columnCODIGO_PARTIDO}, true))
            Me.columnCODIGO_CANDIDATO.AllowDBNull = false
            Me.columnCODIGO_CARGO_ELECTIVO.AllowDBNull = false
            Me.columnCARGO.AllowDBNull = false
            Me.columnCARGO.MaxLength = 100
            Me.columnCODIGO_DEPARTAMENTO.AllowDBNull = false
            Me.columnDEPARTAMENTO.AllowDBNull = false
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnCODIGO_MUNICIPIO.AllowDBNull = false
            Me.columnMUNICIPIO.AllowDBNull = false
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnIDENTIDAD.AllowDBNull = false
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnCODIGO_MOVIMIENTO.AllowDBNull = false
            Me.columnMOVIMIENTO.AllowDBNull = false
            Me.columnMOVIMIENTO.MaxLength = 200
            Me.columnCODIGO_PARTIDO.AllowDBNull = false
            Me.columnPARTIDO.AllowDBNull = false
            Me.columnPARTIDO.MaxLength = 100
            Me.columnPRIMER_NOMBRE.MaxLength = 100
            Me.columnPRIMER_APELLIDO.MaxLength = 100
            Me.columnSEGUNDO_NOMBRE.MaxLength = 100
            Me.columnSEGUNDO_APELLIDO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRENUNCIASRow() As RENUNCIASRow
            Return CType(Me.NewRow,RENUNCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RENUNCIASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RENUNCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RENUNCIASRowChangedEvent) Is Nothing) Then
                RaiseEvent RENUNCIASRowChanged(Me, New RENUNCIASRowChangeEvent(CType(e.Row,RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RENUNCIASRowChangingEvent) Is Nothing) Then
                RaiseEvent RENUNCIASRowChanging(Me, New RENUNCIASRowChangeEvent(CType(e.Row,RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RENUNCIASRowDeletedEvent) Is Nothing) Then
                RaiseEvent RENUNCIASRowDeleted(Me, New RENUNCIASRowChangeEvent(CType(e.Row,RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RENUNCIASRowDeletingEvent) Is Nothing) Then
                RaiseEvent RENUNCIASRowDeleting(Me, New RENUNCIASRowChangeEvent(CType(e.Row,RENUNCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRENUNCIASRow(ByVal row As RENUNCIASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RENUNCIASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_MOTIVOS_RENUNCIA1DataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_MOTIVOS_RENUNCIA1Row)
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_MOTIVOS_RENUNCIA1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_MOTIVOS_RENUNCIA1Row
            Get
                Return CType(Me.Rows(index),IM_MOTIVOS_RENUNCIA1Row)
            End Get
        End Property
        
        Public Event IM_MOTIVOS_RENUNCIA1RowChanging As IM_MOTIVOS_RENUNCIA1RowChangeEventHandler
        
        Public Event IM_MOTIVOS_RENUNCIA1RowChanged As IM_MOTIVOS_RENUNCIA1RowChangeEventHandler
        
        Public Event IM_MOTIVOS_RENUNCIA1RowDeleting As IM_MOTIVOS_RENUNCIA1RowChangeEventHandler
        
        Public Event IM_MOTIVOS_RENUNCIA1RowDeleted As IM_MOTIVOS_RENUNCIA1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_MOTIVOS_RENUNCIA1Row(ByVal row As IM_MOTIVOS_RENUNCIA1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_MOTIVOS_RENUNCIA1Row(ByVal DESCRIPCION As String, ByVal CODIGO_MOTIVO As Decimal, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Date) As IM_MOTIVOS_RENUNCIA1Row
            Dim rowIM_MOTIVOS_RENUNCIA1Row As IM_MOTIVOS_RENUNCIA1Row = CType(Me.NewRow,IM_MOTIVOS_RENUNCIA1Row)
            Dim columnValuesArray() As Object = New Object() {DESCRIPCION, CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_ADICION, FECHA_MODIFICACION}
            rowIM_MOTIVOS_RENUNCIA1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_MOTIVOS_RENUNCIA1Row)
            Return rowIM_MOTIVOS_RENUNCIA1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_MOTIVO(ByVal CODIGO_MOTIVO As Decimal) As IM_MOTIVOS_RENUNCIA1Row
            Return CType(Me.Rows.Find(New Object() {CODIGO_MOTIVO}),IM_MOTIVOS_RENUNCIA1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_MOTIVOS_RENUNCIA1DataTable = CType(MyBase.Clone,IM_MOTIVOS_RENUNCIA1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_MOTIVOS_RENUNCIA1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_MOTIVO}, true))
            Me.columnDESCRIPCION.MaxLength = 300
            Me.columnCODIGO_MOTIVO.AllowDBNull = false
            Me.columnCODIGO_MOTIVO.Unique = true
            Me.columnADICIONADO_POR.AllowDBNull = false
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnMODIFICADO_POR.MaxLength = 10
            Me.columnFECHA_ADICION.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_MOTIVOS_RENUNCIA1Row() As IM_MOTIVOS_RENUNCIA1Row
            Return CType(Me.NewRow,IM_MOTIVOS_RENUNCIA1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_MOTIVOS_RENUNCIA1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_MOTIVOS_RENUNCIA1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIA1RowChangedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIA1RowChanged(Me, New IM_MOTIVOS_RENUNCIA1RowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIA1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIA1RowChangingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIA1RowChanging(Me, New IM_MOTIVOS_RENUNCIA1RowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIA1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIA1RowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIA1RowDeleted(Me, New IM_MOTIVOS_RENUNCIA1RowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIA1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_MOTIVOS_RENUNCIA1RowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVOS_RENUNCIA1RowDeleting(Me, New IM_MOTIVOS_RENUNCIA1RowChangeEvent(CType(e.Row,IM_MOTIVOS_RENUNCIA1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_MOTIVOS_RENUNCIA1Row(ByVal row As IM_MOTIVOS_RENUNCIA1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_MOTIVOS_RENUNCIA1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_SUSTITUCIONESDataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_SUSTITUCIONESRow)
        
        Private columnCODIGO_CANDIDATO As Global.System.Data.DataColumn
        
        Private columnPOSICION As Global.System.Data.DataColumn
        
        Private columnCODIGO_CARGO_ELECTIVO As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        Private columnPRIMER_NOMBRE As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_NOMBRE As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_APELLIDO As Global.System.Data.DataColumn
        
        Private columnPRIMER_APELLIDO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnIMAGEN As Global.System.Data.DataColumn
        
        Private columnCODIGO_CANDIDATO_SUSTITUIDO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_SUSTITUCIONES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CANDIDATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CANDIDATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CARGO_ELECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CARGO_ELECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMAGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CANDIDATO_SUSTITUIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CANDIDATO_SUSTITUIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_SUSTITUCIONESRow
            Get
                Return CType(Me.Rows(index),IM_SUSTITUCIONESRow)
            End Get
        End Property
        
        Public Event IM_SUSTITUCIONESRowChanging As IM_SUSTITUCIONESRowChangeEventHandler
        
        Public Event IM_SUSTITUCIONESRowChanged As IM_SUSTITUCIONESRowChangeEventHandler
        
        Public Event IM_SUSTITUCIONESRowDeleting As IM_SUSTITUCIONESRowChangeEventHandler
        
        Public Event IM_SUSTITUCIONESRowDeleted As IM_SUSTITUCIONESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_SUSTITUCIONESRow(ByVal row As IM_SUSTITUCIONESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_SUSTITUCIONESRow( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Decimal,  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Date,  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal parentIM_MOTIVO_SUSTITUCION1RowByIM_FK1_MOTIVO As IM_MOTIVO_SUSTITUCION1Row,  _
                    ByVal IMAGEN() As Byte,  _
                    ByVal CODIGO_CANDIDATO_SUSTITUIDO As Decimal) As IM_SUSTITUCIONESRow
            Dim rowIM_SUSTITUCIONESRow As IM_SUSTITUCIONESRow = CType(Me.NewRow,IM_SUSTITUCIONESRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_DEPARTAMENTO, CODIGO_MUNICIPIO, CODIGO_MOVIMIENTO, IDENTIDAD, CODIGO_PARTIDO, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, PRIMER_NOMBRE, SEGUNDO_NOMBRE, SEGUNDO_APELLIDO, PRIMER_APELLIDO, Nothing, IMAGEN, CODIGO_CANDIDATO_SUSTITUIDO}
            If (Not (parentIM_MOTIVO_SUSTITUCION1RowByIM_FK1_MOTIVO) Is Nothing) Then
                columnValuesArray(16) = parentIM_MOTIVO_SUSTITUCION1RowByIM_FK1_MOTIVO(0)
            End If
            rowIM_SUSTITUCIONESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_SUSTITUCIONESRow)
            Return rowIM_SUSTITUCIONESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_CANDIDATOCODIGO_MOVIMIENTOCODIGO_PARTIDO(ByVal CODIGO_CANDIDATO As Decimal, ByVal CODIGO_MOVIMIENTO As Decimal, ByVal CODIGO_PARTIDO As Decimal) As IM_SUSTITUCIONESRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_CANDIDATO, CODIGO_MOVIMIENTO, CODIGO_PARTIDO}),IM_SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_SUSTITUCIONESDataTable = CType(MyBase.Clone,IM_SUSTITUCIONESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_SUSTITUCIONESDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CANDIDATO = MyBase.Columns("CODIGO_CANDIDATO")
            Me.columnPOSICION = MyBase.Columns("POSICION")
            Me.columnCODIGO_CARGO_ELECTIVO = MyBase.Columns("CODIGO_CARGO_ELECTIVO")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
            Me.columnPRIMER_NOMBRE = MyBase.Columns("PRIMER_NOMBRE")
            Me.columnSEGUNDO_NOMBRE = MyBase.Columns("SEGUNDO_NOMBRE")
            Me.columnSEGUNDO_APELLIDO = MyBase.Columns("SEGUNDO_APELLIDO")
            Me.columnPRIMER_APELLIDO = MyBase.Columns("PRIMER_APELLIDO")
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnIMAGEN = MyBase.Columns("IMAGEN")
            Me.columnCODIGO_CANDIDATO_SUSTITUIDO = MyBase.Columns("CODIGO_CANDIDATO_SUSTITUIDO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CANDIDATO = New Global.System.Data.DataColumn("CODIGO_CANDIDATO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CANDIDATO)
            Me.columnPOSICION = New Global.System.Data.DataColumn("POSICION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSICION)
            Me.columnCODIGO_CARGO_ELECTIVO = New Global.System.Data.DataColumn("CODIGO_CARGO_ELECTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CARGO_ELECTIVO)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.columnPRIMER_NOMBRE = New Global.System.Data.DataColumn("PRIMER_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_NOMBRE)
            Me.columnSEGUNDO_NOMBRE = New Global.System.Data.DataColumn("SEGUNDO_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_NOMBRE)
            Me.columnSEGUNDO_APELLIDO = New Global.System.Data.DataColumn("SEGUNDO_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_APELLIDO)
            Me.columnPRIMER_APELLIDO = New Global.System.Data.DataColumn("PRIMER_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_APELLIDO)
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnIMAGEN = New Global.System.Data.DataColumn("IMAGEN", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN)
            Me.columnCODIGO_CANDIDATO_SUSTITUIDO = New Global.System.Data.DataColumn("CODIGO_CANDIDATO_SUSTITUIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CANDIDATO_SUSTITUIDO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_CANDIDATO, Me.columnCODIGO_MOVIMIENTO, Me.columnCODIGO_PARTIDO}, true))
            Me.columnCODIGO_CANDIDATO.AllowDBNull = false
            Me.columnCODIGO_CARGO_ELECTIVO.AllowDBNull = false
            Me.columnCODIGO_DEPARTAMENTO.AllowDBNull = false
            Me.columnCODIGO_MUNICIPIO.AllowDBNull = false
            Me.columnCODIGO_MOVIMIENTO.AllowDBNull = false
            Me.columnIDENTIDAD.AllowDBNull = false
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnCODIGO_PARTIDO.AllowDBNull = false
            Me.columnADICIONADO_POR.AllowDBNull = false
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnFECHA_ADICION.AllowDBNull = false
            Me.columnMODIFICADO_POR.MaxLength = 10
            Me.columnPRIMER_NOMBRE.MaxLength = 100
            Me.columnSEGUNDO_NOMBRE.MaxLength = 100
            Me.columnSEGUNDO_APELLIDO.MaxLength = 100
            Me.columnPRIMER_APELLIDO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_SUSTITUCIONESRow() As IM_SUSTITUCIONESRow
            Return CType(Me.NewRow,IM_SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_SUSTITUCIONESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_SUSTITUCIONESRowChangedEvent) Is Nothing) Then
                RaiseEvent IM_SUSTITUCIONESRowChanged(Me, New IM_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_SUSTITUCIONESRowChangingEvent) Is Nothing) Then
                RaiseEvent IM_SUSTITUCIONESRowChanging(Me, New IM_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_SUSTITUCIONESRowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_SUSTITUCIONESRowDeleted(Me, New IM_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_SUSTITUCIONESRowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_SUSTITUCIONESRowDeleting(Me, New IM_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_SUSTITUCIONESRow(ByVal row As IM_SUSTITUCIONESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_SUSTITUCIONESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_MOTIVO_SUSTITUCIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_MOTIVO_SUSTITUCIONRow)
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_MOTIVO_SUSTITUCION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_MOTIVO_SUSTITUCIONRow
            Get
                Return CType(Me.Rows(index),IM_MOTIVO_SUSTITUCIONRow)
            End Get
        End Property
        
        Public Event IM_MOTIVO_SUSTITUCIONRowChanging As IM_MOTIVO_SUSTITUCIONRowChangeEventHandler
        
        Public Event IM_MOTIVO_SUSTITUCIONRowChanged As IM_MOTIVO_SUSTITUCIONRowChangeEventHandler
        
        Public Event IM_MOTIVO_SUSTITUCIONRowDeleting As IM_MOTIVO_SUSTITUCIONRowChangeEventHandler
        
        Public Event IM_MOTIVO_SUSTITUCIONRowDeleted As IM_MOTIVO_SUSTITUCIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_MOTIVO_SUSTITUCIONRow(ByVal row As IM_MOTIVO_SUSTITUCIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_MOTIVO_SUSTITUCIONRow(ByVal CODIGO_MOTIVO As Decimal, ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Date, ByVal MODIFICADO_POR As String, ByVal FECHA_MODIFICACION As Date) As IM_MOTIVO_SUSTITUCIONRow
            Dim rowIM_MOTIVO_SUSTITUCIONRow As IM_MOTIVO_SUSTITUCIONRow = CType(Me.NewRow,IM_MOTIVO_SUSTITUCIONRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_MOTIVO, DESCRIPCION, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION}
            rowIM_MOTIVO_SUSTITUCIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_MOTIVO_SUSTITUCIONRow)
            Return rowIM_MOTIVO_SUSTITUCIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_MOTIVO(ByVal CODIGO_MOTIVO As Decimal) As IM_MOTIVO_SUSTITUCIONRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_MOTIVO}),IM_MOTIVO_SUSTITUCIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_MOTIVO_SUSTITUCIONDataTable = CType(MyBase.Clone,IM_MOTIVO_SUSTITUCIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_MOTIVO_SUSTITUCIONDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_MOTIVO}, true))
            Me.columnCODIGO_MOTIVO.AllowDBNull = false
            Me.columnCODIGO_MOTIVO.Unique = true
            Me.columnDESCRIPCION.MaxLength = 100
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnMODIFICADO_POR.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_MOTIVO_SUSTITUCIONRow() As IM_MOTIVO_SUSTITUCIONRow
            Return CType(Me.NewRow,IM_MOTIVO_SUSTITUCIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_MOTIVO_SUSTITUCIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_MOTIVO_SUSTITUCIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCIONRowChangedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCIONRowChanged(Me, New IM_MOTIVO_SUSTITUCIONRowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCIONRowChangingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCIONRowChanging(Me, New IM_MOTIVO_SUSTITUCIONRowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCIONRowDeleted(Me, New IM_MOTIVO_SUSTITUCIONRowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCIONRowDeleting(Me, New IM_MOTIVO_SUSTITUCIONRowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_MOTIVO_SUSTITUCIONRow(ByVal row As IM_MOTIVO_SUSTITUCIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_MOTIVO_SUSTITUCIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_MOTIVO_SUSTITUCION1DataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_MOTIVO_SUSTITUCION1Row)
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnADICIONADO_POR As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICACION As Global.System.Data.DataColumn
        
        Private columnMODIFICADO_POR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_MOTIVO_SUSTITUCION1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADICIONADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADICIONADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODIFICADO_PORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFICADO_POR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_MOTIVO_SUSTITUCION1Row
            Get
                Return CType(Me.Rows(index),IM_MOTIVO_SUSTITUCION1Row)
            End Get
        End Property
        
        Public Event IM_MOTIVO_SUSTITUCION1RowChanging As IM_MOTIVO_SUSTITUCION1RowChangeEventHandler
        
        Public Event IM_MOTIVO_SUSTITUCION1RowChanged As IM_MOTIVO_SUSTITUCION1RowChangeEventHandler
        
        Public Event IM_MOTIVO_SUSTITUCION1RowDeleting As IM_MOTIVO_SUSTITUCION1RowChangeEventHandler
        
        Public Event IM_MOTIVO_SUSTITUCION1RowDeleted As IM_MOTIVO_SUSTITUCION1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_MOTIVO_SUSTITUCION1Row(ByVal row As IM_MOTIVO_SUSTITUCION1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_MOTIVO_SUSTITUCION1Row(ByVal CODIGO_MOTIVO As Decimal, ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Date, ByVal MODIFICADO_POR As String) As IM_MOTIVO_SUSTITUCION1Row
            Dim rowIM_MOTIVO_SUSTITUCION1Row As IM_MOTIVO_SUSTITUCION1Row = CType(Me.NewRow,IM_MOTIVO_SUSTITUCION1Row)
            Dim columnValuesArray() As Object = New Object() {CODIGO_MOTIVO, DESCRIPCION, ADICIONADO_POR, FECHA_ADICION, FECHA_MODIFICACION, MODIFICADO_POR}
            rowIM_MOTIVO_SUSTITUCION1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_MOTIVO_SUSTITUCION1Row)
            Return rowIM_MOTIVO_SUSTITUCION1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_MOTIVO(ByVal CODIGO_MOTIVO As Decimal) As IM_MOTIVO_SUSTITUCION1Row
            Return CType(Me.Rows.Find(New Object() {CODIGO_MOTIVO}),IM_MOTIVO_SUSTITUCION1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_MOTIVO_SUSTITUCION1DataTable = CType(MyBase.Clone,IM_MOTIVO_SUSTITUCION1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_MOTIVO_SUSTITUCION1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnADICIONADO_POR = MyBase.Columns("ADICIONADO_POR")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnFECHA_MODIFICACION = MyBase.Columns("FECHA_MODIFICACION")
            Me.columnMODIFICADO_POR = MyBase.Columns("MODIFICADO_POR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnADICIONADO_POR = New Global.System.Data.DataColumn("ADICIONADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADICIONADO_POR)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnFECHA_MODIFICACION = New Global.System.Data.DataColumn("FECHA_MODIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICACION)
            Me.columnMODIFICADO_POR = New Global.System.Data.DataColumn("MODIFICADO_POR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFICADO_POR)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_MOTIVO}, true))
            Me.columnCODIGO_MOTIVO.AllowDBNull = false
            Me.columnCODIGO_MOTIVO.Unique = true
            Me.columnDESCRIPCION.MaxLength = 100
            Me.columnADICIONADO_POR.AllowDBNull = false
            Me.columnADICIONADO_POR.MaxLength = 10
            Me.columnFECHA_ADICION.AllowDBNull = false
            Me.columnMODIFICADO_POR.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_MOTIVO_SUSTITUCION1Row() As IM_MOTIVO_SUSTITUCION1Row
            Return CType(Me.NewRow,IM_MOTIVO_SUSTITUCION1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_MOTIVO_SUSTITUCION1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_MOTIVO_SUSTITUCION1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCION1RowChangedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCION1RowChanged(Me, New IM_MOTIVO_SUSTITUCION1RowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCION1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCION1RowChangingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCION1RowChanging(Me, New IM_MOTIVO_SUSTITUCION1RowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCION1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCION1RowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCION1RowDeleted(Me, New IM_MOTIVO_SUSTITUCION1RowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCION1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_MOTIVO_SUSTITUCION1RowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_MOTIVO_SUSTITUCION1RowDeleting(Me, New IM_MOTIVO_SUSTITUCION1RowChangeEvent(CType(e.Row,IM_MOTIVO_SUSTITUCION1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_MOTIVO_SUSTITUCION1Row(ByVal row As IM_MOTIVO_SUSTITUCION1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_MOTIVO_SUSTITUCION1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IM_V_REPORTE_SUSTITUCIONESDataTable
        Inherits Global.System.Data.TypedTableBase(Of IM_V_REPORTE_SUSTITUCIONESRow)
        
        Private columnCODIGO_CANDIDATO As Global.System.Data.DataColumn
        
        Private columnPOSICION As Global.System.Data.DataColumn
        
        Private columnCODIGO_CARGO_ELECTIVO As Global.System.Data.DataColumn
        
        Private columnCODIGO_CARGO As Global.System.Data.DataColumn
        
        Private columnCARGO As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnMOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnSALIENTE As Global.System.Data.DataColumn
        
        Private columnFECHA_ADICION As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD_ENTRANTE As Global.System.Data.DataColumn
        
        Private columnENTRANTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IM_V_REPORTE_SUSTITUCIONES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CANDIDATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CANDIDATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CARGO_ELECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CARGO_ELECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ADICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDAD_ENTRANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD_ENTRANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ENTRANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IM_V_REPORTE_SUSTITUCIONESRow
            Get
                Return CType(Me.Rows(index),IM_V_REPORTE_SUSTITUCIONESRow)
            End Get
        End Property
        
        Public Event IM_V_REPORTE_SUSTITUCIONESRowChanging As IM_V_REPORTE_SUSTITUCIONESRowChangeEventHandler
        
        Public Event IM_V_REPORTE_SUSTITUCIONESRowChanged As IM_V_REPORTE_SUSTITUCIONESRowChangeEventHandler
        
        Public Event IM_V_REPORTE_SUSTITUCIONESRowDeleting As IM_V_REPORTE_SUSTITUCIONESRowChangeEventHandler
        
        Public Event IM_V_REPORTE_SUSTITUCIONESRowDeleted As IM_V_REPORTE_SUSTITUCIONESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIM_V_REPORTE_SUSTITUCIONESRow(ByVal row As IM_V_REPORTE_SUSTITUCIONESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIM_V_REPORTE_SUSTITUCIONESRow( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Decimal,  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_CARGO As Decimal,  _
                    ByVal CARGO As String,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal MOVIMIENTO As String,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal SALIENTE As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal CODIGO_MOTIVO As Decimal,  _
                    ByVal IDENTIDAD_ENTRANTE As String,  _
                    ByVal ENTRANTE As String) As IM_V_REPORTE_SUSTITUCIONESRow
            Dim rowIM_V_REPORTE_SUSTITUCIONESRow As IM_V_REPORTE_SUSTITUCIONESRow = CType(Me.NewRow,IM_V_REPORTE_SUSTITUCIONESRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_CARGO, CARGO, CODIGO_DEPARTAMENTO, DEPARTAMENTO, CODIGO_MUNICIPIO, MUNICIPIO, MOVIMIENTO, CODIGO_MOVIMIENTO, IDENTIDAD, CODIGO_PARTIDO, SALIENTE, FECHA_ADICION, CODIGO_MOTIVO, IDENTIDAD_ENTRANTE, ENTRANTE}
            rowIM_V_REPORTE_SUSTITUCIONESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIM_V_REPORTE_SUSTITUCIONESRow)
            Return rowIM_V_REPORTE_SUSTITUCIONESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IM_V_REPORTE_SUSTITUCIONESDataTable = CType(MyBase.Clone,IM_V_REPORTE_SUSTITUCIONESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IM_V_REPORTE_SUSTITUCIONESDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CANDIDATO = MyBase.Columns("CODIGO_CANDIDATO")
            Me.columnPOSICION = MyBase.Columns("POSICION")
            Me.columnCODIGO_CARGO_ELECTIVO = MyBase.Columns("CODIGO_CARGO_ELECTIVO")
            Me.columnCODIGO_CARGO = MyBase.Columns("CODIGO_CARGO")
            Me.columnCARGO = MyBase.Columns("CARGO")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnMOVIMIENTO = MyBase.Columns("MOVIMIENTO")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnSALIENTE = MyBase.Columns("SALIENTE")
            Me.columnFECHA_ADICION = MyBase.Columns("FECHA_ADICION")
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnIDENTIDAD_ENTRANTE = MyBase.Columns("IDENTIDAD_ENTRANTE")
            Me.columnENTRANTE = MyBase.Columns("ENTRANTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CANDIDATO = New Global.System.Data.DataColumn("CODIGO_CANDIDATO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CANDIDATO)
            Me.columnPOSICION = New Global.System.Data.DataColumn("POSICION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSICION)
            Me.columnCODIGO_CARGO_ELECTIVO = New Global.System.Data.DataColumn("CODIGO_CARGO_ELECTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CARGO_ELECTIVO)
            Me.columnCODIGO_CARGO = New Global.System.Data.DataColumn("CODIGO_CARGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CARGO)
            Me.columnCARGO = New Global.System.Data.DataColumn("CARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARGO)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnMOVIMIENTO = New Global.System.Data.DataColumn("MOVIMIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIMIENTO)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnSALIENTE = New Global.System.Data.DataColumn("SALIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALIENTE)
            Me.columnFECHA_ADICION = New Global.System.Data.DataColumn("FECHA_ADICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADICION)
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnIDENTIDAD_ENTRANTE = New Global.System.Data.DataColumn("IDENTIDAD_ENTRANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD_ENTRANTE)
            Me.columnENTRANTE = New Global.System.Data.DataColumn("ENTRANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRANTE)
            Me.columnCODIGO_CANDIDATO.AllowDBNull = false
            Me.columnCODIGO_CARGO_ELECTIVO.AllowDBNull = false
            Me.columnCARGO.MaxLength = 88
            Me.columnCODIGO_DEPARTAMENTO.AllowDBNull = false
            Me.columnDEPARTAMENTO.AllowDBNull = false
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnCODIGO_MUNICIPIO.AllowDBNull = false
            Me.columnMUNICIPIO.AllowDBNull = false
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnMOVIMIENTO.AllowDBNull = false
            Me.columnMOVIMIENTO.MaxLength = 200
            Me.columnCODIGO_MOVIMIENTO.AllowDBNull = false
            Me.columnIDENTIDAD.AllowDBNull = false
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnCODIGO_PARTIDO.AllowDBNull = false
            Me.columnSALIENTE.MaxLength = 403
            Me.columnFECHA_ADICION.AllowDBNull = false
            Me.columnIDENTIDAD_ENTRANTE.AllowDBNull = false
            Me.columnIDENTIDAD_ENTRANTE.MaxLength = 15
            Me.columnENTRANTE.MaxLength = 403
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIM_V_REPORTE_SUSTITUCIONESRow() As IM_V_REPORTE_SUSTITUCIONESRow
            Return CType(Me.NewRow,IM_V_REPORTE_SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IM_V_REPORTE_SUSTITUCIONESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IM_V_REPORTE_SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IM_V_REPORTE_SUSTITUCIONESRowChangedEvent) Is Nothing) Then
                RaiseEvent IM_V_REPORTE_SUSTITUCIONESRowChanged(Me, New IM_V_REPORTE_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_V_REPORTE_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IM_V_REPORTE_SUSTITUCIONESRowChangingEvent) Is Nothing) Then
                RaiseEvent IM_V_REPORTE_SUSTITUCIONESRowChanging(Me, New IM_V_REPORTE_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_V_REPORTE_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IM_V_REPORTE_SUSTITUCIONESRowDeletedEvent) Is Nothing) Then
                RaiseEvent IM_V_REPORTE_SUSTITUCIONESRowDeleted(Me, New IM_V_REPORTE_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_V_REPORTE_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IM_V_REPORTE_SUSTITUCIONESRowDeletingEvent) Is Nothing) Then
                RaiseEvent IM_V_REPORTE_SUSTITUCIONESRowDeleting(Me, New IM_V_REPORTE_SUSTITUCIONESRowChangeEvent(CType(e.Row,IM_V_REPORTE_SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIM_V_REPORTE_SUSTITUCIONESRow(ByVal row As IM_V_REPORTE_SUSTITUCIONESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IM_V_REPORTE_SUSTITUCIONESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SUSTITUCIONESDataTable
        Inherits Global.System.Data.TypedTableBase(Of SUSTITUCIONESRow)
        
        Private columnCODIGO_CANDIDATO As Global.System.Data.DataColumn
        
        Private columnPOSICION As Global.System.Data.DataColumn
        
        Private columnCODIGO_CARGO_ELECTIVO As Global.System.Data.DataColumn
        
        Private columnCARGO As Global.System.Data.DataColumn
        
        Private columnCODIGO_DEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnPRIMER_NOMBRE As Global.System.Data.DataColumn
        
        Private columnPRIMER_APELLIDO As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_NOMBRE As Global.System.Data.DataColumn
        
        Private columnSEGUNDO_APELLIDO As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MUNICIPIO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnMOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_PARTIDO As Global.System.Data.DataColumn
        
        Private columnPARTIDO As Global.System.Data.DataColumn
        
        Private columnCODIGO_MOTIVO As Global.System.Data.DataColumn
        
        Private columnIMAGEN As Global.System.Data.DataColumn
        
        Private columnREESTABLECER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SUSTITUCIONES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CANDIDATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CANDIDATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_CARGO_ELECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CARGO_ELECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIMER_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMER_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUNDO_APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDO_APELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDENTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PARTIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARTIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_MOTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MOTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMAGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REESTABLECERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREESTABLECER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SUSTITUCIONESRow
            Get
                Return CType(Me.Rows(index),SUSTITUCIONESRow)
            End Get
        End Property
        
        Public Event SUSTITUCIONESRowChanging As SUSTITUCIONESRowChangeEventHandler
        
        Public Event SUSTITUCIONESRowChanged As SUSTITUCIONESRowChangeEventHandler
        
        Public Event SUSTITUCIONESRowDeleting As SUSTITUCIONESRowChangeEventHandler
        
        Public Event SUSTITUCIONESRowDeleted As SUSTITUCIONESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSUSTITUCIONESRow(ByVal row As SUSTITUCIONESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSUSTITUCIONESRow( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Decimal,  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CARGO As String,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal MOVIMIENTO As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal PARTIDO As String,  _
                    ByVal parentIM_MOTIVO_SUSTITUCIONRowByIM_FK1_MOTIVO1 As IM_MOTIVO_SUSTITUCIONRow,  _
                    ByVal IMAGEN() As Byte,  _
                    ByVal REESTABLECER As String) As SUSTITUCIONESRow
            Dim rowSUSTITUCIONESRow As SUSTITUCIONESRow = CType(Me.NewRow,SUSTITUCIONESRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CARGO, CODIGO_DEPARTAMENTO, PRIMER_NOMBRE, PRIMER_APELLIDO, SEGUNDO_NOMBRE, SEGUNDO_APELLIDO, DEPARTAMENTO, CODIGO_MUNICIPIO, MUNICIPIO, IDENTIDAD, CODIGO_MOVIMIENTO, MOVIMIENTO, CODIGO_PARTIDO, PARTIDO, Nothing, IMAGEN, REESTABLECER}
            If (Not (parentIM_MOTIVO_SUSTITUCIONRowByIM_FK1_MOTIVO1) Is Nothing) Then
                columnValuesArray(17) = parentIM_MOTIVO_SUSTITUCIONRowByIM_FK1_MOTIVO1(0)
            End If
            rowSUSTITUCIONESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSUSTITUCIONESRow)
            Return rowSUSTITUCIONESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCODIGO_CANDIDATOCODIGO_MOVIMIENTOCODIGO_PARTIDO(ByVal CODIGO_CANDIDATO As Decimal, ByVal CODIGO_MOVIMIENTO As Decimal, ByVal CODIGO_PARTIDO As Decimal) As SUSTITUCIONESRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_CANDIDATO, CODIGO_MOVIMIENTO, CODIGO_PARTIDO}),SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SUSTITUCIONESDataTable = CType(MyBase.Clone,SUSTITUCIONESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SUSTITUCIONESDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO_CANDIDATO = MyBase.Columns("CODIGO_CANDIDATO")
            Me.columnPOSICION = MyBase.Columns("POSICION")
            Me.columnCODIGO_CARGO_ELECTIVO = MyBase.Columns("CODIGO_CARGO_ELECTIVO")
            Me.columnCARGO = MyBase.Columns("CARGO")
            Me.columnCODIGO_DEPARTAMENTO = MyBase.Columns("CODIGO_DEPARTAMENTO")
            Me.columnPRIMER_NOMBRE = MyBase.Columns("PRIMER_NOMBRE")
            Me.columnPRIMER_APELLIDO = MyBase.Columns("PRIMER_APELLIDO")
            Me.columnSEGUNDO_NOMBRE = MyBase.Columns("SEGUNDO_NOMBRE")
            Me.columnSEGUNDO_APELLIDO = MyBase.Columns("SEGUNDO_APELLIDO")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnCODIGO_MUNICIPIO = MyBase.Columns("CODIGO_MUNICIPIO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnIDENTIDAD = MyBase.Columns("IDENTIDAD")
            Me.columnCODIGO_MOVIMIENTO = MyBase.Columns("CODIGO_MOVIMIENTO")
            Me.columnMOVIMIENTO = MyBase.Columns("MOVIMIENTO")
            Me.columnCODIGO_PARTIDO = MyBase.Columns("CODIGO_PARTIDO")
            Me.columnPARTIDO = MyBase.Columns("PARTIDO")
            Me.columnCODIGO_MOTIVO = MyBase.Columns("CODIGO_MOTIVO")
            Me.columnIMAGEN = MyBase.Columns("IMAGEN")
            Me.columnREESTABLECER = MyBase.Columns("REESTABLECER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO_CANDIDATO = New Global.System.Data.DataColumn("CODIGO_CANDIDATO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CANDIDATO)
            Me.columnPOSICION = New Global.System.Data.DataColumn("POSICION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSICION)
            Me.columnCODIGO_CARGO_ELECTIVO = New Global.System.Data.DataColumn("CODIGO_CARGO_ELECTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CARGO_ELECTIVO)
            Me.columnCARGO = New Global.System.Data.DataColumn("CARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARGO)
            Me.columnCODIGO_DEPARTAMENTO = New Global.System.Data.DataColumn("CODIGO_DEPARTAMENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DEPARTAMENTO)
            Me.columnPRIMER_NOMBRE = New Global.System.Data.DataColumn("PRIMER_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_NOMBRE)
            Me.columnPRIMER_APELLIDO = New Global.System.Data.DataColumn("PRIMER_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMER_APELLIDO)
            Me.columnSEGUNDO_NOMBRE = New Global.System.Data.DataColumn("SEGUNDO_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_NOMBRE)
            Me.columnSEGUNDO_APELLIDO = New Global.System.Data.DataColumn("SEGUNDO_APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDO_APELLIDO)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnCODIGO_MUNICIPIO = New Global.System.Data.DataColumn("CODIGO_MUNICIPIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MUNICIPIO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnIDENTIDAD = New Global.System.Data.DataColumn("IDENTIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD)
            Me.columnCODIGO_MOVIMIENTO = New Global.System.Data.DataColumn("CODIGO_MOVIMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOVIMIENTO)
            Me.columnMOVIMIENTO = New Global.System.Data.DataColumn("MOVIMIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIMIENTO)
            Me.columnCODIGO_PARTIDO = New Global.System.Data.DataColumn("CODIGO_PARTIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PARTIDO)
            Me.columnPARTIDO = New Global.System.Data.DataColumn("PARTIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARTIDO)
            Me.columnCODIGO_MOTIVO = New Global.System.Data.DataColumn("CODIGO_MOTIVO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MOTIVO)
            Me.columnIMAGEN = New Global.System.Data.DataColumn("IMAGEN", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN)
            Me.columnREESTABLECER = New Global.System.Data.DataColumn("REESTABLECER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREESTABLECER)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_CANDIDATO, Me.columnCODIGO_MOVIMIENTO, Me.columnCODIGO_PARTIDO}, true))
            Me.columnCODIGO_CANDIDATO.AllowDBNull = false
            Me.columnCODIGO_CARGO_ELECTIVO.AllowDBNull = false
            Me.columnCARGO.AllowDBNull = false
            Me.columnCARGO.MaxLength = 100
            Me.columnCODIGO_DEPARTAMENTO.AllowDBNull = false
            Me.columnPRIMER_NOMBRE.MaxLength = 100
            Me.columnPRIMER_APELLIDO.MaxLength = 100
            Me.columnSEGUNDO_NOMBRE.MaxLength = 100
            Me.columnSEGUNDO_APELLIDO.MaxLength = 100
            Me.columnDEPARTAMENTO.AllowDBNull = false
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnCODIGO_MUNICIPIO.AllowDBNull = false
            Me.columnMUNICIPIO.AllowDBNull = false
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnIDENTIDAD.AllowDBNull = false
            Me.columnIDENTIDAD.MaxLength = 15
            Me.columnCODIGO_MOVIMIENTO.AllowDBNull = false
            Me.columnMOVIMIENTO.AllowDBNull = false
            Me.columnMOVIMIENTO.MaxLength = 200
            Me.columnCODIGO_PARTIDO.AllowDBNull = false
            Me.columnPARTIDO.AllowDBNull = false
            Me.columnPARTIDO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSUSTITUCIONESRow() As SUSTITUCIONESRow
            Return CType(Me.NewRow,SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SUSTITUCIONESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SUSTITUCIONESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SUSTITUCIONESRowChangedEvent) Is Nothing) Then
                RaiseEvent SUSTITUCIONESRowChanged(Me, New SUSTITUCIONESRowChangeEvent(CType(e.Row,SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SUSTITUCIONESRowChangingEvent) Is Nothing) Then
                RaiseEvent SUSTITUCIONESRowChanging(Me, New SUSTITUCIONESRowChangeEvent(CType(e.Row,SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SUSTITUCIONESRowDeletedEvent) Is Nothing) Then
                RaiseEvent SUSTITUCIONESRowDeleted(Me, New SUSTITUCIONESRowChangeEvent(CType(e.Row,SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SUSTITUCIONESRowDeletingEvent) Is Nothing) Then
                RaiseEvent SUSTITUCIONESRowDeleting(Me, New SUSTITUCIONESRowChangeEvent(CType(e.Row,SUSTITUCIONESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSUSTITUCIONESRow(ByVal row As SUSTITUCIONESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_Renuncia = New DT_Renuncia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SUSTITUCIONESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_V_CANDIDATO_RENUNCIARow
        Inherits Global.System.Data.DataRow
        
        Private tableIM_V_CANDIDATO_RENUNCIA As IM_V_CANDIDATO_RENUNCIADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_V_CANDIDATO_RENUNCIA = CType(Me.Table,IM_V_CANDIDATO_RENUNCIADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CANDIDATOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CANDIDATOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_CANDIDATOS' in table 'IM_V_CANDIDATO_RENUNCIA' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CANDIDATOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.IDENTIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDENTIDAD' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POSICION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.POSICIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSICION' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CARGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CARGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARGO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_DEPARTAMENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_DEPARTAMENTO' in table 'IM_V_CANDIDATO_RENUNCIA' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPARTAMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.DEPARTAMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPARTAMENTO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MUNICIPIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MUNICIPIO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MUNICIPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.MUNICIPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MUNICIPIO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_PARTIDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_PARTIDO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PARTIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.PARTIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARTIDO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MOVIMIENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MOVIMIENTO' in table 'IM_V_CANDIDATO_RENUNCIA' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_MOVIMIENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBRE_MOVIMIENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_MOVIMIENTO' in table 'IM_V_CANDIDATO_RENUNCIA' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBRE_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MOTIVO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.MOTIVOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOTIVO' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RENUNCIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.RENUNCIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RENUNCIA' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.RENUNCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CARGO_ELECTIVO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CARGO_ELECTIVOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_CARGO_ELECTIVO' in table 'IM_V_CANDIDATO_RENUNCIA' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CARGO_ELECTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Imagen_firma() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.Imagen_firmaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Imagen_firma' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.Imagen_firmaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sustituido() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.SustituidoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sustituido' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.SustituidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC1() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC1' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC2() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC2' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC3() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC3' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC4() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC4' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC5() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC5' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC6() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC6' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC7() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC7' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC8() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC8' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REC9() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REC9' in table 'IM_V_CANDIDATO_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_CANDIDATOSNull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CANDIDATOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_CANDIDATOSNull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CANDIDATOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDENTIDADNull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.IDENTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDENTIDADNull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.IDENTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAPELLIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAPELLIDONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOSICIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOSICIONNull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCARGONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.CARGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCARGONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CARGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_DEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_DEPARTAMENTONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEPARTAMENTONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MUNICIPIONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMUNICIPIONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_PARTIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_PARTIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_PARTIDONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_PARTIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPARTIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.PARTIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPARTIDONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.PARTIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MOVIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MOVIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MOVIMIENTONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_MOVIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMBRE_MOVIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBRE_MOVIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMBRE_MOVIMIENTONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.NOMBRE_MOVIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMOTIVONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.MOTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMOTIVONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.MOTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRENUNCIANull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.RENUNCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRENUNCIANull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.RENUNCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_CARGO_ELECTIVONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CARGO_ELECTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_CARGO_ELECTIVONull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.CODIGO_CARGO_ELECTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImagen_firmaNull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.Imagen_firmaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImagen_firmaNull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.Imagen_firmaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSustituidoNull() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.SustituidoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSustituidoNull()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.SustituidoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC1Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC1Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC2Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC2Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC3Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC3Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC4Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC4Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC5Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC5Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC6Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC6Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC7Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC7Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC8Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC8Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREC9Null() As Boolean
            Return Me.IsNull(Me.tableIM_V_CANDIDATO_RENUNCIA.REC9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREC9Null()
            Me(Me.tableIM_V_CANDIDATO_RENUNCIA.REC9Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_MOTIVOS_RENUNCIARow
        Inherits Global.System.Data.DataRow
        
        Private tableIM_MOTIVOS_RENUNCIA As IM_MOTIVOS_RENUNCIADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_MOTIVOS_RENUNCIA = CType(Me.Table,IM_MOTIVOS_RENUNCIADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPCION' in table 'IM_MOTIVOS_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA.CODIGO_MOTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA.ADICIONADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADICIONADO_POR' in table 'IM_MOTIVOS_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_MOTIVOS_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_ADICIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_ADICION' in table 'IM_MOTIVOS_RENUNCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_MOTIVOS_RENUNCIA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADICIONADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA.ADICIONADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADICIONADO_PORNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA.ADICIONADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_ADICIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_ADICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_ADICIONNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_ADICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetIM_RENUNCIASRows() As IM_RENUNCIASRow()
            If (Me.Table.ChildRelations("IM_FK1_RENUNCIAS") Is Nothing) Then
                Return New IM_RENUNCIASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("IM_FK1_RENUNCIAS")),IM_RENUNCIASRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetRENUNCIASRows() As RENUNCIASRow()
            If (Me.Table.ChildRelations("IM_FK1_RENUNCIAS1") Is Nothing) Then
                Return New RENUNCIASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("IM_FK1_RENUNCIAS1")),RENUNCIASRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_RENUNCIASRow
        Inherits Global.System.Data.DataRow
        
        Private tableIM_RENUNCIAS As IM_RENUNCIASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_RENUNCIAS = CType(Me.Table,IM_RENUNCIASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CANDIDATO() As Decimal
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.CODIGO_CANDIDATOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.CODIGO_CANDIDATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POSICION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.POSICIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSICION' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CARGO_ELECTIVO() As Decimal
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.CODIGO_CARGO_ELECTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.CODIGO_CARGO_ELECTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.CODIGO_DEPARTAMENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.CODIGO_MUNICIPIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.CODIGO_MOVIMIENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.IDENTIDADColumn),String)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.CODIGO_PARTIDOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.ADICIONADO_PORColumn),String)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Return CType(Me(Me.tableIM_RENUNCIAS.FECHA_ADICIONColumn),Date)
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.PRIMER_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_NOMBRE' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.PRIMER_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.SEGUNDO_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_NOMBRE' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.SEGUNDO_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.PRIMER_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_APELLIDO' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.PRIMER_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.SEGUNDO_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_APELLIDO' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.SEGUNDO_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.CODIGO_MOTIVOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MOTIVO' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMAGEN_RENUNCIA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableIM_RENUNCIAS.IMAGEN_RENUNCIAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN_RENUNCIA' in table 'IM_RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_RENUNCIAS.IMAGEN_RENUNCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_MOTIVOS_RENUNCIARow() As IM_MOTIVOS_RENUNCIARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("IM_FK1_RENUNCIAS")),IM_MOTIVOS_RENUNCIARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("IM_FK1_RENUNCIAS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_MOTIVOS_RENUNCIA1Row() As IM_MOTIVOS_RENUNCIA1Row
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("IM_FK1_RENUNCIAS2")),IM_MOTIVOS_RENUNCIA1Row)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("IM_FK1_RENUNCIAS2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOSICIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOSICIONNull()
            Me(Me.tableIM_RENUNCIAS.POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_RENUNCIAS.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_RENUNCIAS.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.PRIMER_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_NOMBRENull()
            Me(Me.tableIM_RENUNCIAS.PRIMER_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.SEGUNDO_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_NOMBRENull()
            Me(Me.tableIM_RENUNCIAS.SEGUNDO_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.PRIMER_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_APELLIDONull()
            Me(Me.tableIM_RENUNCIAS.PRIMER_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.SEGUNDO_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_APELLIDONull()
            Me(Me.tableIM_RENUNCIAS.SEGUNDO_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MOTIVONull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.CODIGO_MOTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MOTIVONull()
            Me(Me.tableIM_RENUNCIAS.CODIGO_MOTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMAGEN_RENUNCIANull() As Boolean
            Return Me.IsNull(Me.tableIM_RENUNCIAS.IMAGEN_RENUNCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMAGEN_RENUNCIANull()
            Me(Me.tableIM_RENUNCIAS.IMAGEN_RENUNCIAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class RENUNCIASRow
        Inherits Global.System.Data.DataRow
        
        Private tableRENUNCIAS As RENUNCIASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRENUNCIAS = CType(Me.Table,RENUNCIASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CANDIDATO() As Decimal
            Get
                Return CType(Me(Me.tableRENUNCIAS.CODIGO_CANDIDATOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRENUNCIAS.CODIGO_CANDIDATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POSICION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.POSICIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSICION' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CARGO_ELECTIVO() As Decimal
            Get
                Return CType(Me(Me.tableRENUNCIAS.CODIGO_CARGO_ELECTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRENUNCIAS.CODIGO_CARGO_ELECTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CARGO() As String
            Get
                Return CType(Me(Me.tableRENUNCIAS.CARGOColumn),String)
            End Get
            Set
                Me(Me.tableRENUNCIAS.CARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Return CType(Me(Me.tableRENUNCIAS.CODIGO_DEPARTAMENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRENUNCIAS.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPARTAMENTO() As String
            Get
                Return CType(Me(Me.tableRENUNCIAS.DEPARTAMENTOColumn),String)
            End Get
            Set
                Me(Me.tableRENUNCIAS.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Return CType(Me(Me.tableRENUNCIAS.CODIGO_MUNICIPIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRENUNCIAS.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MUNICIPIO() As String
            Get
                Return CType(Me(Me.tableRENUNCIAS.MUNICIPIOColumn),String)
            End Get
            Set
                Me(Me.tableRENUNCIAS.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Return CType(Me(Me.tableRENUNCIAS.IDENTIDADColumn),String)
            End Get
            Set
                Me(Me.tableRENUNCIAS.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Return CType(Me(Me.tableRENUNCIAS.CODIGO_MOVIMIENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRENUNCIAS.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MOVIMIENTO() As String
            Get
                Return CType(Me(Me.tableRENUNCIAS.MOVIMIENTOColumn),String)
            End Get
            Set
                Me(Me.tableRENUNCIAS.MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Return CType(Me(Me.tableRENUNCIAS.CODIGO_PARTIDOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRENUNCIAS.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PARTIDO() As String
            Get
                Return CType(Me(Me.tableRENUNCIAS.PARTIDOColumn),String)
            End Get
            Set
                Me(Me.tableRENUNCIAS.PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.CODIGO_MOTIVOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MOTIVO' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMAGEN_RENUNCIA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.IMAGEN_RENUNCIAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN_RENUNCIA' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.IMAGEN_RENUNCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REESTABLECER() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.REESTABLECERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REESTABLECER' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.REESTABLECERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.PRIMER_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_NOMBRE' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.PRIMER_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.PRIMER_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_APELLIDO' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.PRIMER_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.SEGUNDO_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_NOMBRE' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.SEGUNDO_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENUNCIAS.SEGUNDO_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_APELLIDO' in table 'RENUNCIAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENUNCIAS.SEGUNDO_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_MOTIVOS_RENUNCIARow() As IM_MOTIVOS_RENUNCIARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("IM_FK1_RENUNCIAS1")),IM_MOTIVOS_RENUNCIARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("IM_FK1_RENUNCIAS1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOSICIONNull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOSICIONNull()
            Me(Me.tableRENUNCIAS.POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MOTIVONull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.CODIGO_MOTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MOTIVONull()
            Me(Me.tableRENUNCIAS.CODIGO_MOTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMAGEN_RENUNCIANull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.IMAGEN_RENUNCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMAGEN_RENUNCIANull()
            Me(Me.tableRENUNCIAS.IMAGEN_RENUNCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREESTABLECERNull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.REESTABLECERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREESTABLECERNull()
            Me(Me.tableRENUNCIAS.REESTABLECERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.PRIMER_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_NOMBRENull()
            Me(Me.tableRENUNCIAS.PRIMER_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.PRIMER_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_APELLIDONull()
            Me(Me.tableRENUNCIAS.PRIMER_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.SEGUNDO_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_NOMBRENull()
            Me(Me.tableRENUNCIAS.SEGUNDO_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableRENUNCIAS.SEGUNDO_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_APELLIDONull()
            Me(Me.tableRENUNCIAS.SEGUNDO_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_MOTIVOS_RENUNCIA1Row
        Inherits Global.System.Data.DataRow
        
        Private tableIM_MOTIVOS_RENUNCIA1 As IM_MOTIVOS_RENUNCIA1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_MOTIVOS_RENUNCIA1 = CType(Me.Table,IM_MOTIVOS_RENUNCIA1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA1.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPCION' in table 'IM_MOTIVOS_RENUNCIA1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA1.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA1.CODIGO_MOTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA1.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA1.ADICIONADO_PORColumn),String)
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA1.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA1.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_MOTIVOS_RENUNCIA1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA1.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA1.FECHA_ADICIONColumn),Date)
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA1.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVOS_RENUNCIA1.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_MOTIVOS_RENUNCIA1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVOS_RENUNCIA1.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA1.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA1.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA1.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA1.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVOS_RENUNCIA1.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_MOTIVOS_RENUNCIA1.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetIM_RENUNCIASRows() As IM_RENUNCIASRow()
            If (Me.Table.ChildRelations("IM_FK1_RENUNCIAS2") Is Nothing) Then
                Return New IM_RENUNCIASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("IM_FK1_RENUNCIAS2")),IM_RENUNCIASRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_SUSTITUCIONESRow
        Inherits Global.System.Data.DataRow
        
        Private tableIM_SUSTITUCIONES As IM_SUSTITUCIONESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_SUSTITUCIONES = CType(Me.Table,IM_SUSTITUCIONESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CANDIDATO() As Decimal
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_CANDIDATOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_CANDIDATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POSICION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.POSICIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSICION' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CARGO_ELECTIVO() As Decimal
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_CARGO_ELECTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_CARGO_ELECTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_DEPARTAMENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_MUNICIPIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_MOVIMIENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.IDENTIDADColumn),String)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_PARTIDOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.ADICIONADO_PORColumn),String)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Return CType(Me(Me.tableIM_SUSTITUCIONES.FECHA_ADICIONColumn),Date)
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.PRIMER_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_NOMBRE' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.PRIMER_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.SEGUNDO_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_NOMBRE' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.SEGUNDO_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.SEGUNDO_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_APELLIDO' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.SEGUNDO_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.PRIMER_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_APELLIDO' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.PRIMER_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_MOTIVOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MOTIVO' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMAGEN() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.IMAGENColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN' in table 'IM_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.IMAGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CANDIDATO_SUSTITUIDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_SUSTITUCIONES.CODIGO_CANDIDATO_SUSTITUIDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_CANDIDATO_SUSTITUIDO' in table 'IM_SUSTITUCIONES' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_SUSTITUCIONES.CODIGO_CANDIDATO_SUSTITUIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_MOTIVO_SUSTITUCION1Row() As IM_MOTIVO_SUSTITUCION1Row
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("IM_FK1_MOTIVO")),IM_MOTIVO_SUSTITUCION1Row)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("IM_FK1_MOTIVO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOSICIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOSICIONNull()
            Me(Me.tableIM_SUSTITUCIONES.POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_SUSTITUCIONES.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_SUSTITUCIONES.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.PRIMER_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_NOMBRENull()
            Me(Me.tableIM_SUSTITUCIONES.PRIMER_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.SEGUNDO_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_NOMBRENull()
            Me(Me.tableIM_SUSTITUCIONES.SEGUNDO_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.SEGUNDO_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_APELLIDONull()
            Me(Me.tableIM_SUSTITUCIONES.SEGUNDO_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.PRIMER_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_APELLIDONull()
            Me(Me.tableIM_SUSTITUCIONES.PRIMER_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MOTIVONull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.CODIGO_MOTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MOTIVONull()
            Me(Me.tableIM_SUSTITUCIONES.CODIGO_MOTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMAGENNull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.IMAGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMAGENNull()
            Me(Me.tableIM_SUSTITUCIONES.IMAGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_CANDIDATO_SUSTITUIDONull() As Boolean
            Return Me.IsNull(Me.tableIM_SUSTITUCIONES.CODIGO_CANDIDATO_SUSTITUIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_CANDIDATO_SUSTITUIDONull()
            Me(Me.tableIM_SUSTITUCIONES.CODIGO_CANDIDATO_SUSTITUIDOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_MOTIVO_SUSTITUCIONRow
        Inherits Global.System.Data.DataRow
        
        Private tableIM_MOTIVO_SUSTITUCION As IM_MOTIVO_SUSTITUCIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_MOTIVO_SUSTITUCION = CType(Me.Table,IM_MOTIVO_SUSTITUCIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION.CODIGO_MOTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPCION' in table 'IM_MOTIVO_SUSTITUCION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION.ADICIONADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADICIONADO_POR' in table 'IM_MOTIVO_SUSTITUCION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_ADICIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_ADICION' in table 'IM_MOTIVO_SUSTITUCION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_MOTIVO_SUSTITUCION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_MOTIVO_SUSTITUCION' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADICIONADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION.ADICIONADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADICIONADO_PORNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION.ADICIONADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_ADICIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_ADICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_ADICIONNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_ADICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetSUSTITUCIONESRows() As SUSTITUCIONESRow()
            If (Me.Table.ChildRelations("IM_FK1_MOTIVO1") Is Nothing) Then
                Return New SUSTITUCIONESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("IM_FK1_MOTIVO1")),SUSTITUCIONESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_MOTIVO_SUSTITUCION1Row
        Inherits Global.System.Data.DataRow
        
        Private tableIM_MOTIVO_SUSTITUCION1 As IM_MOTIVO_SUSTITUCION1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_MOTIVO_SUSTITUCION1 = CType(Me.Table,IM_MOTIVO_SUSTITUCION1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION1.CODIGO_MOTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION1.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION1.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPCION' in table 'IM_MOTIVO_SUSTITUCION1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION1.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADICIONADO_POR() As String
            Get
                Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION1.ADICIONADO_PORColumn),String)
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION1.ADICIONADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION1.FECHA_ADICIONColumn),Date)
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION1.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION1.FECHA_MODIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_MODIFICACION' in table 'IM_MOTIVO_SUSTITUCION1' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION1.FECHA_MODIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODIFICADO_POR() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_MOTIVO_SUSTITUCION1.MODIFICADO_PORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFICADO_POR' in table 'IM_MOTIVO_SUSTITUCION1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_MOTIVO_SUSTITUCION1.MODIFICADO_PORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION1.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION1.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION1.FECHA_MODIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICACIONNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION1.FECHA_MODIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODIFICADO_PORNull() As Boolean
            Return Me.IsNull(Me.tableIM_MOTIVO_SUSTITUCION1.MODIFICADO_PORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODIFICADO_PORNull()
            Me(Me.tableIM_MOTIVO_SUSTITUCION1.MODIFICADO_PORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetIM_SUSTITUCIONESRows() As IM_SUSTITUCIONESRow()
            If (Me.Table.ChildRelations("IM_FK1_MOTIVO") Is Nothing) Then
                Return New IM_SUSTITUCIONESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("IM_FK1_MOTIVO")),IM_SUSTITUCIONESRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetSUSTITUCIONESRows() As SUSTITUCIONESRow()
            If (Me.Table.ChildRelations("IM_FK1_MOTIVO2") Is Nothing) Then
                Return New SUSTITUCIONESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("IM_FK1_MOTIVO2")),SUSTITUCIONESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IM_V_REPORTE_SUSTITUCIONESRow
        Inherits Global.System.Data.DataRow
        
        Private tableIM_V_REPORTE_SUSTITUCIONES As IM_V_REPORTE_SUSTITUCIONESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIM_V_REPORTE_SUSTITUCIONES = CType(Me.Table,IM_V_REPORTE_SUSTITUCIONESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CANDIDATO() As Decimal
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CANDIDATOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CANDIDATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POSICION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.POSICIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSICION' in table 'IM_V_REPORTE_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CARGO_ELECTIVO() As Decimal
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CARGO_ELECTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CARGO_ELECTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CARGO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CARGOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_CARGO' in table 'IM_V_REPORTE_SUSTITUCIONES' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CARGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CARGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARGO' in table 'IM_V_REPORTE_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_DEPARTAMENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPARTAMENTO() As String
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.DEPARTAMENTOColumn),String)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MUNICIPIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MUNICIPIO() As String
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.MUNICIPIOColumn),String)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MOVIMIENTO() As String
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.MOVIMIENTOColumn),String)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MOVIMIENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.IDENTIDADColumn),String)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_PARTIDOColumn),Decimal)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.SALIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALIENTE' in table 'IM_V_REPORTE_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.SALIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ADICION() As Date
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.FECHA_ADICIONColumn),Date)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.FECHA_ADICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MOTIVOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MOTIVO' in table 'IM_V_REPORTE_SUSTITUCIONES' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD_ENTRANTE() As String
            Get
                Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.IDENTIDAD_ENTRANTEColumn),String)
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.IDENTIDAD_ENTRANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ENTRANTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.ENTRANTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENTRANTE' in table 'IM_V_REPORTE_SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.ENTRANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOSICIONNull() As Boolean
            Return Me.IsNull(Me.tableIM_V_REPORTE_SUSTITUCIONES.POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOSICIONNull()
            Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_CARGONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CARGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_CARGONull()
            Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_CARGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCARGONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_REPORTE_SUSTITUCIONES.CARGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCARGONull()
            Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CARGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALIENTENull() As Boolean
            Return Me.IsNull(Me.tableIM_V_REPORTE_SUSTITUCIONES.SALIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALIENTENull()
            Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.SALIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MOTIVONull() As Boolean
            Return Me.IsNull(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MOTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MOTIVONull()
            Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.CODIGO_MOTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsENTRANTENull() As Boolean
            Return Me.IsNull(Me.tableIM_V_REPORTE_SUSTITUCIONES.ENTRANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetENTRANTENull()
            Me(Me.tableIM_V_REPORTE_SUSTITUCIONES.ENTRANTEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SUSTITUCIONESRow
        Inherits Global.System.Data.DataRow
        
        Private tableSUSTITUCIONES As SUSTITUCIONESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSUSTITUCIONES = CType(Me.Table,SUSTITUCIONESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CANDIDATO() As Decimal
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.CODIGO_CANDIDATOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CODIGO_CANDIDATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POSICION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.POSICIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSICION' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_CARGO_ELECTIVO() As Decimal
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.CODIGO_CARGO_ELECTIVOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CODIGO_CARGO_ELECTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CARGO() As String
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.CARGOColumn),String)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DEPARTAMENTO() As Decimal
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.CODIGO_DEPARTAMENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CODIGO_DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.PRIMER_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_NOMBRE' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.PRIMER_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIMER_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.PRIMER_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMER_APELLIDO' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.PRIMER_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.SEGUNDO_NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_NOMBRE' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.SEGUNDO_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUNDO_APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.SEGUNDO_APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEGUNDO_APELLIDO' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.SEGUNDO_APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPARTAMENTO() As String
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.DEPARTAMENTOColumn),String)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MUNICIPIO() As Decimal
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.CODIGO_MUNICIPIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CODIGO_MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MUNICIPIO() As String
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.MUNICIPIOColumn),String)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDENTIDAD() As String
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.IDENTIDADColumn),String)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.IDENTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOVIMIENTO() As Decimal
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.CODIGO_MOVIMIENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CODIGO_MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MOVIMIENTO() As String
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.MOVIMIENTOColumn),String)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.MOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PARTIDO() As Decimal
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.CODIGO_PARTIDOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CODIGO_PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PARTIDO() As String
            Get
                Return CType(Me(Me.tableSUSTITUCIONES.PARTIDOColumn),String)
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.PARTIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_MOTIVO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.CODIGO_MOTIVOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO_MOTIVO' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.CODIGO_MOTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMAGEN() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.IMAGENColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.IMAGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REESTABLECER() As String
            Get
                Try 
                    Return CType(Me(Me.tableSUSTITUCIONES.REESTABLECERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REESTABLECER' in table 'SUSTITUCIONES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUSTITUCIONES.REESTABLECERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_MOTIVO_SUSTITUCIONRow() As IM_MOTIVO_SUSTITUCIONRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("IM_FK1_MOTIVO1")),IM_MOTIVO_SUSTITUCIONRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("IM_FK1_MOTIVO1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IM_MOTIVO_SUSTITUCION1Row() As IM_MOTIVO_SUSTITUCION1Row
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("IM_FK1_MOTIVO2")),IM_MOTIVO_SUSTITUCION1Row)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("IM_FK1_MOTIVO2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOSICIONNull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOSICIONNull()
            Me(Me.tableSUSTITUCIONES.POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.PRIMER_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_NOMBRENull()
            Me(Me.tableSUSTITUCIONES.PRIMER_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRIMER_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.PRIMER_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRIMER_APELLIDONull()
            Me(Me.tableSUSTITUCIONES.PRIMER_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_NOMBRENull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.SEGUNDO_NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_NOMBRENull()
            Me(Me.tableSUSTITUCIONES.SEGUNDO_NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEGUNDO_APELLIDONull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.SEGUNDO_APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEGUNDO_APELLIDONull()
            Me(Me.tableSUSTITUCIONES.SEGUNDO_APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGO_MOTIVONull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.CODIGO_MOTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGO_MOTIVONull()
            Me(Me.tableSUSTITUCIONES.CODIGO_MOTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMAGENNull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.IMAGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMAGENNull()
            Me(Me.tableSUSTITUCIONES.IMAGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREESTABLECERNull() As Boolean
            Return Me.IsNull(Me.tableSUSTITUCIONES.REESTABLECERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREESTABLECERNull()
            Me(Me.tableSUSTITUCIONES.REESTABLECERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_V_CANDIDATO_RENUNCIARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_V_CANDIDATO_RENUNCIARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_V_CANDIDATO_RENUNCIARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_V_CANDIDATO_RENUNCIARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_MOTIVOS_RENUNCIARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_MOTIVOS_RENUNCIARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_MOTIVOS_RENUNCIARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_MOTIVOS_RENUNCIARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_RENUNCIASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_RENUNCIASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_RENUNCIASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_RENUNCIASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class RENUNCIASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RENUNCIASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As RENUNCIASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As RENUNCIASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_MOTIVOS_RENUNCIA1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_MOTIVOS_RENUNCIA1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_MOTIVOS_RENUNCIA1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_MOTIVOS_RENUNCIA1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_SUSTITUCIONESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_SUSTITUCIONESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_SUSTITUCIONESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_SUSTITUCIONESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_MOTIVO_SUSTITUCIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_MOTIVO_SUSTITUCIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_MOTIVO_SUSTITUCIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_MOTIVO_SUSTITUCIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_MOTIVO_SUSTITUCION1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_MOTIVO_SUSTITUCION1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_MOTIVO_SUSTITUCION1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_MOTIVO_SUSTITUCION1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IM_V_REPORTE_SUSTITUCIONESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IM_V_REPORTE_SUSTITUCIONESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IM_V_REPORTE_SUSTITUCIONESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IM_V_REPORTE_SUSTITUCIONESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SUSTITUCIONESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SUSTITUCIONESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SUSTITUCIONESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SUSTITUCIONESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DT_RenunciaTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_V_CANDIDATO_RENUNCIATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_V_CANDIDATO_RENUNCIA"
            tableMapping.ColumnMappings.Add("CODIGO_CANDIDATOS", "CODIGO_CANDIDATOS")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("APELLIDO", "APELLIDO")
            tableMapping.ColumnMappings.Add("POSICION", "POSICION")
            tableMapping.ColumnMappings.Add("CARGO", "CARGO")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("PARTIDO", "PARTIDO")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("NOMBRE_MOVIMIENTO", "NOMBRE_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("MOTIVO", "MOTIVO")
            tableMapping.ColumnMappings.Add("RENUNCIA", "RENUNCIA")
            tableMapping.ColumnMappings.Add("CODIGO_CARGO_ELECTIVO", "CODIGO_CARGO_ELECTIVO")
            tableMapping.ColumnMappings.Add("REC1", "REC1")
            tableMapping.ColumnMappings.Add("REC2", "REC2")
            tableMapping.ColumnMappings.Add("REC3", "REC3")
            tableMapping.ColumnMappings.Add("REC4", "REC4")
            tableMapping.ColumnMappings.Add("REC5", "REC5")
            tableMapping.ColumnMappings.Add("REC6", "REC6")
            tableMapping.ColumnMappings.Add("REC7", "REC7")
            tableMapping.ColumnMappings.Add("REC8", "REC8")
            tableMapping.ColumnMappings.Add("REC9", "REC9")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        a.CODIGO_CANDIDATOS, a.IDENTIDAD, a.NOMBRE,a. APELLIDO, a.POSICION,"& _ 
                "a.CARGO, a.CODIGO_DEPARTAMENTO,a.DEPARTAMENTO, a.CODIGO_MUNICIPIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "             a. MUNICIPIO, a.CODIGO_PARTIDO, a.PARTIDO,a.CODIGO_MOVIMIENTO, a.NO"& _ 
                "MBRE_MOVIMIENTO, a.MOTIVO, a.RENUNCIA, a.CODIGO_CARGO_ELECTIVO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "         b.rec1,  b.rec2,  b.rec3,  b.rec4,  b.rec5,  b.rec6,  b.rec7,  b.rec8, "& _ 
                " b.rec9"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_V_CANDIDATO_RENUNCIA a, im_v_planilla_requisito b"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"w"& _ 
                "here a.identidad=b.identidad and a.codigo_partido=b.codigo_partido and a.codigo_"& _ 
                "movimiento=b.codigo_movimiento"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and a.codigo_departamento=b.codigo_departamento "& _ 
                "and a.codigo_municipio=b.codigo_municipio and a.codigo_cargo_electivo=b.codigo_c"& _ 
                "argo_electivo and a.codigo_candidatos=b.codigo_candidatos"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" and a.IDENTIDAD = :I"& _ 
                "dentidad"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Identidad", Global.System.Data.OracleClient.OracleType.VarChar, 15, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_V_CANDIDATO_RENUNCIADataTable, ByVal Identidad As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Identidad Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Identidad,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Identidad As String) As DT_Renuncia.IM_V_CANDIDATO_RENUNCIADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Identidad Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Identidad,String)
            End If
            Dim dataTable As DT_Renuncia.IM_V_CANDIDATO_RENUNCIADataTable = New DT_Renuncia.IM_V_CANDIDATO_RENUNCIADataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_MOTIVOS_RENUNCIATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_MOTIVOS_RENUNCIA"
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_MOTIVOS_RENUNCIA"" WHERE (((:IsNull_DESCRIPCION = 1 AND ""DESCRIPCI"& _ 
                "ON"" IS NULL) OR (""DESCRIPCION"" = :Original_DESCRIPCION)) AND (""CODIGO_MOTIVO"" = "& _ 
                ":Original_CODIGO_MOTIVO) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND ("& _ 
                "(:IsNull_MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" ="& _ 
                " :Original_MODIFICADO_POR)) AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND "& _ 
                "((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MO"& _ 
                "DIFICACION"" = :Original_FECHA_MODIFICACION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_MOTIVOS_RENUNCIA"" (""DESCRIPCION"", ""CODIGO_MOTIVO"", ""ADICIONADO_PO"& _ 
                "R"", ""MODIFICADO_POR"", ""FECHA_ADICION"", ""FECHA_MODIFICACION"") VALUES (:DESCRIPCIO"& _ 
                "N, :CODIGO_MOTIVO, :ADICIONADO_POR, :MODIFICADO_POR, :FECHA_ADICION, :FECHA_MODI"& _ 
                "FICACION)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_MOTIVOS_RENUNCIA"" SET ""DESCRIPCION"" = :DESCRIPCION, ""CODIGO_MOTIVO"" = "& _ 
                ":CODIGO_MOTIVO, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""MODIFICADO_POR"" = :MODIFICA"& _ 
                "DO_POR, ""FECHA_ADICION"" = :FECHA_ADICION, ""FECHA_MODIFICACION"" = :FECHA_MODIFICA"& _ 
                "CION WHERE (((:IsNull_DESCRIPCION = 1 AND ""DESCRIPCION"" IS NULL) OR (""DESCRIPCIO"& _ 
                "N"" = :Original_DESCRIPCION)) AND (""CODIGO_MOTIVO"" = :Original_CODIGO_MOTIVO) AND"& _ 
                " (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND ((:IsNull_MODIFICADO_POR = 1 "& _ 
                "AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Original_MODIFICADO_POR)) "& _ 
                "AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNull_FECHA_MODIFICACION"& _ 
                " = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FECH"& _ 
                "A_MODIFICACION)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        DESCRIPCION, CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_A"& _ 
                "DICION, FECHA_MODIFICACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVOS_RENUNCIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        DESCRIPCION, CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_A"& _ 
                "DICION, FECHA_MODIFICACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVOS_RENUNCIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where CODIGO_MO"& _ 
                "TIVO=:id"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("id", Global.System.Data.OracleClient.OracleType.Number, 22, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        DESCRIPCION, CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_A"& _ 
                "DICION, FECHA_MODIFICACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVOS_RENUNCIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where CODIGO_MO"& _ 
                "TIVO <> 99"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable = New DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable, ByVal id As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal id As Decimal) As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Decimal)
            Dim dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable = New DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1() As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable = New DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DT_Renuncia) As Integer
            Return Me.Adapter.Update(dataSet, "IM_MOTIVOS_RENUNCIA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DESCRIPCION As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_ADICIONADO_POR As String, ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date), ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DESCRIPCION,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_ADICION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DESCRIPCION As String, ByVal CODIGO_MOTIVO As Decimal, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Global.System.Nullable(Of Date), ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_MOTIVO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_ADICION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESCRIPCION As String, ByVal CODIGO_MOTIVO As Decimal, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Global.System.Nullable(Of Date), ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_DESCRIPCION As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_ADICIONADO_POR As String, ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date), ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_MOTIVO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_ADICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_DESCRIPCION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_ADICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Global.System.Nullable(Of Date), ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_DESCRIPCION As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_ADICIONADO_POR As String, ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date), ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(DESCRIPCION, Original_CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_ADICION, FECHA_MODIFICACION, Original_DESCRIPCION, Original_CODIGO_MOTIVO, Original_ADICIONADO_POR, Original_MODIFICADO_POR, Original_FECHA_ADICION, Original_FECHA_MODIFICACION)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_RENUNCIASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_RENUNCIAS"
            tableMapping.ColumnMappings.Add("CODIGO_CANDIDATO", "CODIGO_CANDIDATO")
            tableMapping.ColumnMappings.Add("POSICION", "POSICION")
            tableMapping.ColumnMappings.Add("CODIGO_CARGO_ELECTIVO", "CODIGO_CARGO_ELECTIVO")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            tableMapping.ColumnMappings.Add("PRIMER_NOMBRE", "PRIMER_NOMBRE")
            tableMapping.ColumnMappings.Add("SEGUNDO_NOMBRE", "SEGUNDO_NOMBRE")
            tableMapping.ColumnMappings.Add("PRIMER_APELLIDO", "PRIMER_APELLIDO")
            tableMapping.ColumnMappings.Add("SEGUNDO_APELLIDO", "SEGUNDO_APELLIDO")
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("IMAGEN_RENUNCIA", "IMAGEN_RENUNCIA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_RENUNCIAS"" WHERE ((""CODIGO_CANDIDATO"" = :Original_CODIGO_CANDIDAT"& _ 
                "O) AND ((:IsNull_POSICION = 1 AND ""POSICION"" IS NULL) OR (""POSICION"" = :Original"& _ 
                "_POSICION)) AND (""CODIGO_CARGO_ELECTIVO"" = :Original_CODIGO_CARGO_ELECTIVO) AND "& _ 
                "(""CODIGO_DEPARTAMENTO"" = :Original_CODIGO_DEPARTAMENTO) AND (""CODIGO_MUNICIPIO"" "& _ 
                "= :Original_CODIGO_MUNICIPIO) AND (""CODIGO_MOVIMIENTO"" = :Original_CODIGO_MOVIMI"& _ 
                "ENTO) AND (""IDENTIDAD"" = :Original_IDENTIDAD) AND (""CODIGO_PARTIDO"" = :Original_"& _ 
                "CODIGO_PARTIDO) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND (""FECHA_AD"& _ 
                "ICION"" = :Original_FECHA_ADICION) AND ((:IsNull_MODIFICADO_POR = 1 AND ""MODIFICA"& _ 
                "DO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Original_MODIFICADO_POR)) AND ((:IsNull"& _ 
                "_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFICACIO"& _ 
                "N"" = :Original_FECHA_MODIFICACION)) AND ((:IsNull_PRIMER_NOMBRE = 1 AND ""PRIMER_"& _ 
                "NOMBRE"" IS NULL) OR (""PRIMER_NOMBRE"" = :Original_PRIMER_NOMBRE)) AND ((:IsNull_S"& _ 
                "EGUNDO_NOMBRE = 1 AND ""SEGUNDO_NOMBRE"" IS NULL) OR (""SEGUNDO_NOMBRE"" = :Original"& _ 
                "_SEGUNDO_NOMBRE)) AND ((:IsNull_PRIMER_APELLIDO = 1 AND ""PRIMER_APELLIDO"" IS NUL"& _ 
                "L) OR (""PRIMER_APELLIDO"" = :Original_PRIMER_APELLIDO)) AND ((:IsNull_SEGUNDO_APE"& _ 
                "LLIDO = 1 AND ""SEGUNDO_APELLIDO"" IS NULL) OR (""SEGUNDO_APELLIDO"" = :Original_SEG"& _ 
                "UNDO_APELLIDO)) AND ((:IsNull_CODIGO_MOTIVO = 1 AND ""CODIGO_MOTIVO"" IS NULL) OR "& _ 
                "(""CODIGO_MOTIVO"" = :Original_CODIGO_MOTIVO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_POSICION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_RENUNCIAS"" (""CODIGO_CANDIDATO"", ""POSICION"", ""CODIGO_CARGO_ELECTIV"& _ 
                "O"", ""CODIGO_DEPARTAMENTO"", ""CODIGO_MUNICIPIO"", ""CODIGO_MOVIMIENTO"", ""IDENTIDAD"","& _ 
                " ""CODIGO_PARTIDO"", ""ADICIONADO_POR"", ""FECHA_ADICION"", ""MODIFICADO_POR"", ""FECHA_M"& _ 
                "ODIFICACION"", ""PRIMER_NOMBRE"", ""SEGUNDO_NOMBRE"", ""PRIMER_APELLIDO"", ""SEGUNDO_APE"& _ 
                "LLIDO"", ""CODIGO_MOTIVO"", ""IMAGEN_RENUNCIA"") VALUES (:CODIGO_CANDIDATO, :POSICION"& _ 
                ", :CODIGO_CARGO_ELECTIVO, :CODIGO_DEPARTAMENTO, :CODIGO_MUNICIPIO, :CODIGO_MOVIM"& _ 
                "IENTO, :IDENTIDAD, :CODIGO_PARTIDO, :ADICIONADO_POR, :FECHA_ADICION, :MODIFICADO"& _ 
                "_POR, :FECHA_MODIFICACION, :PRIMER_NOMBRE, :SEGUNDO_NOMBRE, :PRIMER_APELLIDO, :S"& _ 
                "EGUNDO_APELLIDO, :CODIGO_MOTIVO, :IMAGEN_RENUNCIA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN_RENUNCIA", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN_RENUNCIA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_RENUNCIAS"" SET ""CODIGO_CANDIDATO"" = :CODIGO_CANDIDATO, ""POSICION"" = :P"& _ 
                "OSICION, ""CODIGO_CARGO_ELECTIVO"" = :CODIGO_CARGO_ELECTIVO, ""CODIGO_DEPARTAMENTO"""& _ 
                " = :CODIGO_DEPARTAMENTO, ""CODIGO_MUNICIPIO"" = :CODIGO_MUNICIPIO, ""CODIGO_MOVIMIE"& _ 
                "NTO"" = :CODIGO_MOVIMIENTO, ""IDENTIDAD"" = :IDENTIDAD, ""CODIGO_PARTIDO"" = :CODIGO_"& _ 
                "PARTIDO, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""FECHA_ADICION"" = :FECHA_ADICION, """& _ 
                "MODIFICADO_POR"" = :MODIFICADO_POR, ""FECHA_MODIFICACION"" = :FECHA_MODIFICACION, """& _ 
                "PRIMER_NOMBRE"" = :PRIMER_NOMBRE, ""SEGUNDO_NOMBRE"" = :SEGUNDO_NOMBRE, ""PRIMER_APE"& _ 
                "LLIDO"" = :PRIMER_APELLIDO, ""SEGUNDO_APELLIDO"" = :SEGUNDO_APELLIDO, ""CODIGO_MOTIV"& _ 
                "O"" = :CODIGO_MOTIVO, ""IMAGEN_RENUNCIA"" = :IMAGEN_RENUNCIA WHERE ((""CODIGO_CANDID"& _ 
                "ATO"" = :Original_CODIGO_CANDIDATO) AND ((:IsNull_POSICION = 1 AND ""POSICION"" IS "& _ 
                "NULL) OR (""POSICION"" = :Original_POSICION)) AND (""CODIGO_CARGO_ELECTIVO"" = :Orig"& _ 
                "inal_CODIGO_CARGO_ELECTIVO) AND (""CODIGO_DEPARTAMENTO"" = :Original_CODIGO_DEPART"& _ 
                "AMENTO) AND (""CODIGO_MUNICIPIO"" = :Original_CODIGO_MUNICIPIO) AND (""CODIGO_MOVIM"& _ 
                "IENTO"" = :Original_CODIGO_MOVIMIENTO) AND (""IDENTIDAD"" = :Original_IDENTIDAD) AN"& _ 
                "D (""CODIGO_PARTIDO"" = :Original_CODIGO_PARTIDO) AND (""ADICIONADO_POR"" = :Origina"& _ 
                "l_ADICIONADO_POR) AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNull_"& _ 
                "MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Origina"& _ 
                "l_MODIFICADO_POR)) AND ((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"""& _ 
                " IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FECHA_MODIFICACION)) AND ((:IsNul"& _ 
                "l_PRIMER_NOMBRE = 1 AND ""PRIMER_NOMBRE"" IS NULL) OR (""PRIMER_NOMBRE"" = :Original"& _ 
                "_PRIMER_NOMBRE)) AND ((:IsNull_SEGUNDO_NOMBRE = 1 AND ""SEGUNDO_NOMBRE"" IS NULL) "& _ 
                "OR (""SEGUNDO_NOMBRE"" = :Original_SEGUNDO_NOMBRE)) AND ((:IsNull_PRIMER_APELLIDO "& _ 
                "= 1 AND ""PRIMER_APELLIDO"" IS NULL) OR (""PRIMER_APELLIDO"" = :Original_PRIMER_APEL"& _ 
                "LIDO)) AND ((:IsNull_SEGUNDO_APELLIDO = 1 AND ""SEGUNDO_APELLIDO"" IS NULL) OR (""S"& _ 
                "EGUNDO_APELLIDO"" = :Original_SEGUNDO_APELLIDO)) AND ((:IsNull_CODIGO_MOTIVO = 1 "& _ 
                "AND ""CODIGO_MOTIVO"" IS NULL) OR (""CODIGO_MOTIVO"" = :Original_CODIGO_MOTIVO)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN_RENUNCIA", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN_RENUNCIA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_POSICION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_DEPARTAME"& _ 
                "NTO, CODIGO_MUNICIPIO, CODIGO_MOVIMIENTO, IDENTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CODIGO_PARTIDO, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACIO"& _ 
                "N, PRIMER_NOMBRE, SEGUNDO_NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRIMER_APELLIDO, SE"& _ 
                "GUNDO_APELLIDO, CODIGO_MOTIVO, IMAGEN_RENUNCIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_RENUNCIAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_RENUNCIASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.IM_RENUNCIASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.IM_RENUNCIASDataTable = New DT_Renuncia.IM_RENUNCIASDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DT_Renuncia.IM_RENUNCIASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DT_Renuncia) As Integer
            Return Me.Adapter.Update(dataSet, "IM_RENUNCIAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODIGO_CANDIDATO As Decimal,  _
                    ByVal Original_POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIMER_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_NOMBRE As String,  _
                    ByVal Original_PRIMER_APELLIDO As String,  _
                    ByVal Original_SEGUNDO_APELLIDO As String,  _
                    ByVal Original_CODIGO_MOTIVO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODIGO_CANDIDATO,Decimal)
            If (Original_POSICION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_POSICION.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODIGO_MOVIMIENTO,Decimal)
            If (Original_IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDENTIDAD")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_IDENTIDAD,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODIGO_PARTIDO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_PRIMER_NOMBRE,String)
            End If
            If (Original_SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SEGUNDO_NOMBRE,String)
            End If
            If (Original_PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_PRIMER_APELLIDO,String)
            End If
            If (Original_SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_SEGUNDO_APELLIDO,String)
            End If
            If (Original_CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal IMAGEN_RENUNCIA() As Byte) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODIGO_CANDIDATO,Decimal)
            If (POSICION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(POSICION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(CODIGO_MOVIMIENTO,Decimal)
            If (IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDENTIDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(IDENTIDAD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODIGO_PARTIDO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(FECHA_ADICION,Date)
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PRIMER_NOMBRE,String)
            End If
            If (SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SEGUNDO_NOMBRE,String)
            End If
            If (PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PRIMER_APELLIDO,String)
            End If
            If (SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SEGUNDO_APELLIDO,String)
            End If
            If (CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (IMAGEN_RENUNCIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(IMAGEN_RENUNCIA,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal IMAGEN_RENUNCIA() As Byte,  _
                    ByVal Original_CODIGO_CANDIDATO As Decimal,  _
                    ByVal Original_POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIMER_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_NOMBRE As String,  _
                    ByVal Original_PRIMER_APELLIDO As String,  _
                    ByVal Original_SEGUNDO_APELLIDO As String,  _
                    ByVal Original_CODIGO_MOTIVO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODIGO_CANDIDATO,Decimal)
            If (POSICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(POSICION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CODIGO_MOVIMIENTO,Decimal)
            If (IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDENTIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(IDENTIDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODIGO_PARTIDO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(FECHA_ADICION,Date)
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PRIMER_NOMBRE,String)
            End If
            If (SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SEGUNDO_NOMBRE,String)
            End If
            If (PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PRIMER_APELLIDO,String)
            End If
            If (SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SEGUNDO_APELLIDO,String)
            End If
            If (CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (IMAGEN_RENUNCIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(IMAGEN_RENUNCIA,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_CODIGO_CANDIDATO,Decimal)
            If (Original_POSICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_POSICION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CODIGO_MOVIMIENTO,Decimal)
            If (Original_IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDENTIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_IDENTIDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_CODIGO_PARTIDO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_PRIMER_NOMBRE,String)
            End If
            If (Original_SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_SEGUNDO_NOMBRE,String)
            End If
            If (Original_PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_PRIMER_APELLIDO,String)
            End If
            If (Original_SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_SEGUNDO_APELLIDO,String)
            End If
            If (Original_CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal IMAGEN_RENUNCIA() As Byte,  _
                    ByVal Original_CODIGO_CANDIDATO As Decimal,  _
                    ByVal Original_POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIMER_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_NOMBRE As String,  _
                    ByVal Original_PRIMER_APELLIDO As String,  _
                    ByVal Original_SEGUNDO_APELLIDO As String,  _
                    ByVal Original_CODIGO_MOTIVO As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_DEPARTAMENTO, CODIGO_MUNICIPIO, Original_CODIGO_MOVIMIENTO, IDENTIDAD, Original_CODIGO_PARTIDO, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, PRIMER_NOMBRE, SEGUNDO_NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CODIGO_MOTIVO, IMAGEN_RENUNCIA, Original_CODIGO_CANDIDATO, Original_POSICION, Original_CODIGO_CARGO_ELECTIVO, Original_CODIGO_DEPARTAMENTO, Original_CODIGO_MUNICIPIO, Original_CODIGO_MOVIMIENTO, Original_IDENTIDAD, Original_CODIGO_PARTIDO, Original_ADICIONADO_POR, Original_FECHA_ADICION, Original_MODIFICADO_POR, Original_FECHA_MODIFICACION, Original_PRIMER_NOMBRE, Original_SEGUNDO_NOMBRE, Original_PRIMER_APELLIDO, Original_SEGUNDO_APELLIDO, Original_CODIGO_MOTIVO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RENUNCIASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RENUNCIAS"
            tableMapping.ColumnMappings.Add("CODIGO_CANDIDATO", "CODIGO_CANDIDATO")
            tableMapping.ColumnMappings.Add("POSICION", "POSICION")
            tableMapping.ColumnMappings.Add("CODIGO_CARGO_ELECTIVO", "CODIGO_CARGO_ELECTIVO")
            tableMapping.ColumnMappings.Add("CARGO", "CARGO")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("MOVIMIENTO", "MOVIMIENTO")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("PARTIDO", "PARTIDO")
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("IMAGEN_RENUNCIA", "IMAGEN_RENUNCIA")
            tableMapping.ColumnMappings.Add("PRIMER_NOMBRE", "PRIMER_NOMBRE")
            tableMapping.ColumnMappings.Add("PRIMER_APELLIDO", "PRIMER_APELLIDO")
            tableMapping.ColumnMappings.Add("SEGUNDO_NOMBRE", "SEGUNDO_NOMBRE")
            tableMapping.ColumnMappings.Add("SEGUNDO_APELLIDO", "SEGUNDO_APELLIDO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        A.CODIGO_CANDIDATO, A.POSICION, A.CODIGO_CARGO_ELECTIVO, F.DESCRIPC"& _ 
                "ION AS CARGO, A.CODIGO_DEPARTAMENTO, A.PRIMER_NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " A.PRIMER_APELLIDO, A.SEGUNDO_NOMBRE, A.SEGUNDO_APELLIDO, D.DESCRIPCION AS DEPAR"& _ 
                "TAMENTO, A.CODIGO_MUNICIPIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         E.DESCRIPCION AS MUNICIP"& _ 
                "IO, A.IDENTIDAD, A.CODIGO_MOVIMIENTO, C.NOMBRE_MOVIMIENTO AS MOVIMIENTO, A.CODIG"& _ 
                "O_PARTIDO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         B.NOMBRE AS PARTIDO, A.CODIGO_MOTIVO, A.IM"& _ 
                "AGEN_RENUNCIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_RENUNCIAS A, IM_PARTIDOS_POLITICOS B, IM_MOVIM"& _ 
                "IENTOS C, IM_DEPARTAMENTOS D, IM_MUNICIPIOS E, IM_CARGOS_ELECTIVOS F"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     "& _ 
                "   A.CODIGO_PARTIDO = B.CODIGO_PARTIDO AND A.CODIGO_MOVIMIENTO = C.CODIGO_MOVIMI"& _ 
                "ENTO AND A.CODIGO_PARTIDO = C.CODIGO_PARTIDO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CO"& _ 
                "DIGO_DEPARTAMENTO = D.CODIGO_DEPARTAMENTO AND A.CODIGO_MUNICIPIO = E.CODIGO_MUNI"& _ 
                "CIPIO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CODIGO_DEPARTAMENTO = E.CODIGO_DEPARTAMEN"& _ 
                "TO AND A.CODIGO_CARGO_ELECTIVO = F.CODIGO_CARGO_ELECTIVO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        A.CODIGO_CANDIDATO, A.POSICION, A.CODIGO_CARGO_ELECTIVO, F.DESCRIPC"& _ 
                "ION AS CARGO, A.PRIMER_NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.PRIMER_APELLIDO, A.S"& _ 
                "EGUNDO_NOMBRE, A.SEGUNDO_APELLIDO, A.CODIGO_DEPARTAMENTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     D.DESCRIPCION AS DEPARTAMENTO, A.CODIGO_MUNICIPIO, E.DESCRIPCION AS MUNICIP"& _ 
                "IO, A.IDENTIDAD, A.CODIGO_MOVIMIENTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         C.NOMBRE_MOVIMI"& _ 
                "ENTO AS MOVIMIENTO, A.CODIGO_PARTIDO, B.NOMBRE AS PARTIDO, A.CODIGO_MOTIVO, A.IM"& _ 
                "AGEN_RENUNCIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_RENUNCIAS A, IM_PARTIDOS_POLITICOS B, IM_MOVIM"& _ 
                "IENTOS C, IM_DEPARTAMENTOS D, IM_MUNICIPIOS E, IM_CARGOS_ELECTIVOS F"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     "& _ 
                "   A.CODIGO_PARTIDO = B.CODIGO_PARTIDO AND A.CODIGO_MOVIMIENTO = C.CODIGO_MOVIMI"& _ 
                "ENTO AND A.CODIGO_PARTIDO = C.CODIGO_PARTIDO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CO"& _ 
                "DIGO_DEPARTAMENTO = D.CODIGO_DEPARTAMENTO AND A.CODIGO_MUNICIPIO = E.CODIGO_MUNI"& _ 
                "CIPIO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CODIGO_DEPARTAMENTO = E.CODIGO_DEPARTAMEN"& _ 
                "TO AND A.CODIGO_CARGO_ELECTIVO = F.CODIGO_CARGO_ELECTIVO AND (A.IDENTIDAD = :ID)"& _ 
                ""
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ID", Global.System.Data.OracleClient.OracleType.VarChar, 15, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.RENUNCIASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.RENUNCIASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.RENUNCIASDataTable = New DT_Renuncia.RENUNCIASDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DT_Renuncia.RENUNCIASDataTable, ByVal ID As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ID,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal ID As String) As DT_Renuncia.RENUNCIASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ID,String)
            End If
            Dim dataTable As DT_Renuncia.RENUNCIASDataTable = New DT_Renuncia.RENUNCIASDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_MOTIVOS_RENUNCIA1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_MOTIVOS_RENUNCIA1"
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_MOTIVOS_RENUNCIA"" WHERE (((:IsNull_DESCRIPCION = 1 AND ""DESCRIPCI"& _ 
                "ON"" IS NULL) OR (""DESCRIPCION"" = :Original_DESCRIPCION)) AND (""CODIGO_MOTIVO"" = "& _ 
                ":Original_CODIGO_MOTIVO) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND ("& _ 
                "(:IsNull_MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" ="& _ 
                " :Original_MODIFICADO_POR)) AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND "& _ 
                "((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MO"& _ 
                "DIFICACION"" = :Original_FECHA_MODIFICACION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_MOTIVOS_RENUNCIA"" (""DESCRIPCION"", ""CODIGO_MOTIVO"", ""ADICIONADO_PO"& _ 
                "R"", ""MODIFICADO_POR"", ""FECHA_ADICION"", ""FECHA_MODIFICACION"") VALUES (:DESCRIPCIO"& _ 
                "N, :CODIGO_MOTIVO, :ADICIONADO_POR, :MODIFICADO_POR, :FECHA_ADICION, :FECHA_MODI"& _ 
                "FICACION)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_MOTIVOS_RENUNCIA"" SET ""DESCRIPCION"" = :DESCRIPCION, ""CODIGO_MOTIVO"" = "& _ 
                ":CODIGO_MOTIVO, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""MODIFICADO_POR"" = :MODIFICA"& _ 
                "DO_POR, ""FECHA_ADICION"" = :FECHA_ADICION, ""FECHA_MODIFICACION"" = :FECHA_MODIFICA"& _ 
                "CION WHERE (((:IsNull_DESCRIPCION = 1 AND ""DESCRIPCION"" IS NULL) OR (""DESCRIPCIO"& _ 
                "N"" = :Original_DESCRIPCION)) AND (""CODIGO_MOTIVO"" = :Original_CODIGO_MOTIVO) AND"& _ 
                " (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND ((:IsNull_MODIFICADO_POR = 1 "& _ 
                "AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Original_MODIFICADO_POR)) "& _ 
                "AND (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNull_FECHA_MODIFICACION"& _ 
                " = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FECH"& _ 
                "A_MODIFICACION)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        DESCRIPCION, CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_A"& _ 
                "DICION, FECHA_MODIFICACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVOS_RENUNCIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        DESCRIPCION, CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_A"& _ 
                "DICION, FECHA_MODIFICACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVOS_RENUNCIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where CODIGO_MO"& _ 
                "TIVO=:id"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("id", Global.System.Data.OracleClient.OracleType.Number, 22, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable = New DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable, ByVal id As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal id As Decimal) As DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Decimal)
            Dim dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable = New DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DT_Renuncia.IM_MOTIVOS_RENUNCIA1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DT_Renuncia) As Integer
            Return Me.Adapter.Update(dataSet, "IM_MOTIVOS_RENUNCIA1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DESCRIPCION As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_ADICIONADO_POR As String, ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_ADICION As Date, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DESCRIPCION,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_MODIFICADO_POR,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DESCRIPCION As String, ByVal CODIGO_MOTIVO As Decimal, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_MOTIVO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MODIFICADO_POR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(FECHA_ADICION,Date)
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESCRIPCION As String, ByVal CODIGO_MOTIVO As Decimal, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_DESCRIPCION As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_ADICIONADO_POR As String, ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_ADICION As Date, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_MOTIVO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MODIFICADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FECHA_ADICION,Date)
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_DESCRIPCION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_MODIFICADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal MODIFICADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_DESCRIPCION As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_ADICIONADO_POR As String, ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_ADICION As Date, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(DESCRIPCION, Original_CODIGO_MOTIVO, ADICIONADO_POR, MODIFICADO_POR, FECHA_ADICION, FECHA_MODIFICACION, Original_DESCRIPCION, Original_CODIGO_MOTIVO, Original_ADICIONADO_POR, Original_MODIFICADO_POR, Original_FECHA_ADICION, Original_FECHA_MODIFICACION)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_SUSTITUCIONESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_SUSTITUCIONES"
            tableMapping.ColumnMappings.Add("CODIGO_CANDIDATO", "CODIGO_CANDIDATO")
            tableMapping.ColumnMappings.Add("POSICION", "POSICION")
            tableMapping.ColumnMappings.Add("CODIGO_CARGO_ELECTIVO", "CODIGO_CARGO_ELECTIVO")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            tableMapping.ColumnMappings.Add("PRIMER_NOMBRE", "PRIMER_NOMBRE")
            tableMapping.ColumnMappings.Add("SEGUNDO_NOMBRE", "SEGUNDO_NOMBRE")
            tableMapping.ColumnMappings.Add("SEGUNDO_APELLIDO", "SEGUNDO_APELLIDO")
            tableMapping.ColumnMappings.Add("PRIMER_APELLIDO", "PRIMER_APELLIDO")
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("IMAGEN", "IMAGEN")
            tableMapping.ColumnMappings.Add("CODIGO_CANDIDATO_SUSTITUIDO", "CODIGO_CANDIDATO_SUSTITUIDO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_SUSTITUCIONES"" WHERE ((""CODIGO_CANDIDATO"" = :Original_CODIGO_CAND"& _ 
                "IDATO) AND ((:IsNull_POSICION = 1 AND ""POSICION"" IS NULL) OR (""POSICION"" = :Orig"& _ 
                "inal_POSICION)) AND (""CODIGO_CARGO_ELECTIVO"" = :Original_CODIGO_CARGO_ELECTIVO) "& _ 
                "AND (""CODIGO_DEPARTAMENTO"" = :Original_CODIGO_DEPARTAMENTO) AND (""CODIGO_MUNICIP"& _ 
                "IO"" = :Original_CODIGO_MUNICIPIO) AND (""CODIGO_MOVIMIENTO"" = :Original_CODIGO_MO"& _ 
                "VIMIENTO) AND (""IDENTIDAD"" = :Original_IDENTIDAD) AND (""CODIGO_PARTIDO"" = :Origi"& _ 
                "nal_CODIGO_PARTIDO) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND (""FECH"& _ 
                "A_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNull_MODIFICADO_POR = 1 AND ""MODI"& _ 
                "FICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Original_MODIFICADO_POR)) AND ((:Is"& _ 
                "Null_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFIC"& _ 
                "ACION"" = :Original_FECHA_MODIFICACION)) AND ((:IsNull_PRIMER_NOMBRE = 1 AND ""PRI"& _ 
                "MER_NOMBRE"" IS NULL) OR (""PRIMER_NOMBRE"" = :Original_PRIMER_NOMBRE)) AND ((:IsNu"& _ 
                "ll_SEGUNDO_NOMBRE = 1 AND ""SEGUNDO_NOMBRE"" IS NULL) OR (""SEGUNDO_NOMBRE"" = :Orig"& _ 
                "inal_SEGUNDO_NOMBRE)) AND ((:IsNull_SEGUNDO_APELLIDO = 1 AND ""SEGUNDO_APELLIDO"" "& _ 
                "IS NULL) OR (""SEGUNDO_APELLIDO"" = :Original_SEGUNDO_APELLIDO)) AND ((:IsNull_PRI"& _ 
                "MER_APELLIDO = 1 AND ""PRIMER_APELLIDO"" IS NULL) OR (""PRIMER_APELLIDO"" = :Origina"& _ 
                "l_PRIMER_APELLIDO)) AND ((:IsNull_CODIGO_MOTIVO = 1 AND ""CODIGO_MOTIVO"" IS NULL)"& _ 
                " OR (""CODIGO_MOTIVO"" = :Original_CODIGO_MOTIVO)) AND ((:p3 = 1 AND ""CODIGO_CANDI"& _ 
                "DATO_SUSTITUIDO"" IS NULL) OR (""CODIGO_CANDIDATO_SUSTITUIDO"" = :p2)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_POSICION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p3", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO_SUSTITUIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO_SUSTITUIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_SUSTITUCIONES"" (""CODIGO_CANDIDATO"", ""POSICION"", ""CODIGO_CARGO_ELE"& _ 
                "CTIVO"", ""CODIGO_DEPARTAMENTO"", ""CODIGO_MUNICIPIO"", ""CODIGO_MOVIMIENTO"", ""IDENTID"& _ 
                "AD"", ""CODIGO_PARTIDO"", ""ADICIONADO_POR"", ""FECHA_ADICION"", ""MODIFICADO_POR"", ""FEC"& _ 
                "HA_MODIFICACION"", ""PRIMER_NOMBRE"", ""SEGUNDO_NOMBRE"", ""SEGUNDO_APELLIDO"", ""PRIMER"& _ 
                "_APELLIDO"", ""CODIGO_MOTIVO"", ""IMAGEN"", ""CODIGO_CANDIDATO_SUSTITUIDO"") VALUES (:C"& _ 
                "ODIGO_CANDIDATO, :POSICION, :CODIGO_CARGO_ELECTIVO, :CODIGO_DEPARTAMENTO, :CODIG"& _ 
                "O_MUNICIPIO, :CODIGO_MOVIMIENTO, :IDENTIDAD, :CODIGO_PARTIDO, :ADICIONADO_POR, :"& _ 
                "FECHA_ADICION, :MODIFICADO_POR, :FECHA_MODIFICACION, :PRIMER_NOMBRE, :SEGUNDO_NO"& _ 
                "MBRE, :SEGUNDO_APELLIDO, :PRIMER_APELLIDO, :CODIGO_MOTIVO, :IMAGEN, :p1)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO_SUSTITUIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_SUSTITUCIONES"" SET ""CODIGO_CANDIDATO"" = :CODIGO_CANDIDATO, ""POSICION"" "& _ 
                "= :POSICION, ""CODIGO_CARGO_ELECTIVO"" = :CODIGO_CARGO_ELECTIVO, ""CODIGO_DEPARTAME"& _ 
                "NTO"" = :CODIGO_DEPARTAMENTO, ""CODIGO_MUNICIPIO"" = :CODIGO_MUNICIPIO, ""CODIGO_MOV"& _ 
                "IMIENTO"" = :CODIGO_MOVIMIENTO, ""IDENTIDAD"" = :IDENTIDAD, ""CODIGO_PARTIDO"" = :COD"& _ 
                "IGO_PARTIDO, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""FECHA_ADICION"" = :FECHA_ADICIO"& _ 
                "N, ""MODIFICADO_POR"" = :MODIFICADO_POR, ""FECHA_MODIFICACION"" = :FECHA_MODIFICACIO"& _ 
                "N, ""PRIMER_NOMBRE"" = :PRIMER_NOMBRE, ""SEGUNDO_NOMBRE"" = :SEGUNDO_NOMBRE, ""SEGUND"& _ 
                "O_APELLIDO"" = :SEGUNDO_APELLIDO, ""PRIMER_APELLIDO"" = :PRIMER_APELLIDO, ""CODIGO_M"& _ 
                "OTIVO"" = :CODIGO_MOTIVO, ""IMAGEN"" = :IMAGEN, ""CODIGO_CANDIDATO_SUSTITUIDO"" = :p1"& _ 
                " WHERE ((""CODIGO_CANDIDATO"" = :Original_CODIGO_CANDIDATO) AND ((:IsNull_POSICION"& _ 
                " = 1 AND ""POSICION"" IS NULL) OR (""POSICION"" = :Original_POSICION)) AND (""CODIGO_"& _ 
                "CARGO_ELECTIVO"" = :Original_CODIGO_CARGO_ELECTIVO) AND (""CODIGO_DEPARTAMENTO"" = "& _ 
                ":Original_CODIGO_DEPARTAMENTO) AND (""CODIGO_MUNICIPIO"" = :Original_CODIGO_MUNICI"& _ 
                "PIO) AND (""CODIGO_MOVIMIENTO"" = :Original_CODIGO_MOVIMIENTO) AND (""IDENTIDAD"" = "& _ 
                ":Original_IDENTIDAD) AND (""CODIGO_PARTIDO"" = :Original_CODIGO_PARTIDO) AND (""ADI"& _ 
                "CIONADO_POR"" = :Original_ADICIONADO_POR) AND (""FECHA_ADICION"" = :Original_FECHA_"& _ 
                "ADICION) AND ((:IsNull_MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MOD"& _ 
                "IFICADO_POR"" = :Original_MODIFICADO_POR)) AND ((:IsNull_FECHA_MODIFICACION = 1 A"& _ 
                "ND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FECHA_MODI"& _ 
                "FICACION)) AND ((:IsNull_PRIMER_NOMBRE = 1 AND ""PRIMER_NOMBRE"" IS NULL) OR (""PRI"& _ 
                "MER_NOMBRE"" = :Original_PRIMER_NOMBRE)) AND ((:IsNull_SEGUNDO_NOMBRE = 1 AND ""SE"& _ 
                "GUNDO_NOMBRE"" IS NULL) OR (""SEGUNDO_NOMBRE"" = :Original_SEGUNDO_NOMBRE)) AND ((:"& _ 
                "IsNull_SEGUNDO_APELLIDO = 1 AND ""SEGUNDO_APELLIDO"" IS NULL) OR (""SEGUNDO_APELLID"& _ 
                "O"" = :Original_SEGUNDO_APELLIDO)) AND ((:IsNull_PRIMER_APELLIDO = 1 AND ""PRIMER_"& _ 
                "APELLIDO"" IS NULL) OR (""PRIMER_APELLIDO"" = :Original_PRIMER_APELLIDO)) AND ((:Is"& _ 
                "Null_CODIGO_MOTIVO = 1 AND ""CODIGO_MOTIVO"" IS NULL) OR (""CODIGO_MOTIVO"" = :Origi"& _ 
                "nal_CODIGO_MOTIVO)) AND ((:p3 = 1 AND ""CODIGO_CANDIDATO_SUSTITUIDO"" IS NULL) OR "& _ 
                "(""CODIGO_CANDIDATO_SUSTITUIDO"" = :p2)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMAGEN", Global.System.Data.OracleClient.OracleType.Blob, 0, Global.System.Data.ParameterDirection.Input, "IMAGEN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO_SUSTITUIDO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CANDIDATO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_POSICION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_POSICION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_CARGO_ELECTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CARGO_ELECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_DEPARTAMENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_DEPARTAMENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MUNICIPIO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MUNICIPIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOVIMIENTO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IDENTIDAD", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_PARTIDO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_PARTIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_NOMBRE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SEGUNDO_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SEGUNDO_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PRIMER_APELLIDO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PRIMER_APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p3", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO_SUSTITUIDO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_CANDIDATO_SUSTITUIDO", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_DEPARTAME"& _ 
                "NTO, CODIGO_MUNICIPIO, CODIGO_MOVIMIENTO, IDENTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CODIGO_PARTIDO, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACIO"& _ 
                "N, PRIMER_NOMBRE, SEGUNDO_NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SEGUNDO_APELLIDO, P"& _ 
                "RIMER_APELLIDO, CODIGO_MOTIVO, IMAGEN, CODIGO_CANDIDATO_SUSTITUIDO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    IM_SUSTITUCIONES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_SUSTITUCIONESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.IM_SUSTITUCIONESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.IM_SUSTITUCIONESDataTable = New DT_Renuncia.IM_SUSTITUCIONESDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DT_Renuncia.IM_SUSTITUCIONESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DT_Renuncia) As Integer
            Return Me.Adapter.Update(dataSet, "IM_SUSTITUCIONES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODIGO_CANDIDATO As Decimal,  _
                    ByVal Original_POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIMER_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_APELLIDO As String,  _
                    ByVal Original_PRIMER_APELLIDO As String,  _
                    ByVal Original_CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal p2 As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODIGO_CANDIDATO,Decimal)
            If (Original_POSICION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_POSICION.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODIGO_MOVIMIENTO,Decimal)
            If (Original_IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDENTIDAD")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_IDENTIDAD,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODIGO_PARTIDO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_PRIMER_NOMBRE,String)
            End If
            If (Original_SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SEGUNDO_NOMBRE,String)
            End If
            If (Original_SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_SEGUNDO_APELLIDO,String)
            End If
            If (Original_PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_PRIMER_APELLIDO,String)
            End If
            If (Original_CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (p2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(p2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal IMAGEN() As Byte,  _
                    ByVal p1 As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODIGO_CANDIDATO,Decimal)
            If (POSICION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(POSICION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(CODIGO_MOVIMIENTO,Decimal)
            If (IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDENTIDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(IDENTIDAD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODIGO_PARTIDO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(FECHA_ADICION,Date)
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PRIMER_NOMBRE,String)
            End If
            If (SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SEGUNDO_NOMBRE,String)
            End If
            If (SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SEGUNDO_APELLIDO,String)
            End If
            If (PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PRIMER_APELLIDO,String)
            End If
            If (CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (IMAGEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(IMAGEN,Byte())
            End If
            If (p1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_CANDIDATO As Decimal,  _
                    ByVal POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal CODIGO_PARTIDO As Decimal,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal IMAGEN() As Byte,  _
                    ByVal p1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CANDIDATO As Decimal,  _
                    ByVal Original_POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIMER_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_APELLIDO As String,  _
                    ByVal Original_PRIMER_APELLIDO As String,  _
                    ByVal Original_CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal p2 As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODIGO_CANDIDATO,Decimal)
            If (POSICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(POSICION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CODIGO_MOVIMIENTO,Decimal)
            If (IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDENTIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(IDENTIDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODIGO_PARTIDO,Decimal)
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(FECHA_ADICION,Date)
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PRIMER_NOMBRE,String)
            End If
            If (SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SEGUNDO_NOMBRE,String)
            End If
            If (SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SEGUNDO_APELLIDO,String)
            End If
            If (PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PRIMER_APELLIDO,String)
            End If
            If (CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (IMAGEN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(IMAGEN,Byte())
            End If
            If (p1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_CODIGO_CANDIDATO,Decimal)
            If (Original_POSICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_POSICION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODIGO_CARGO_ELECTIVO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_CODIGO_DEPARTAMENTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CODIGO_MUNICIPIO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_CODIGO_MOVIMIENTO,Decimal)
            If (Original_IDENTIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDENTIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_IDENTIDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_CODIGO_PARTIDO,Decimal)
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIMER_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_PRIMER_NOMBRE,String)
            End If
            If (Original_SEGUNDO_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_SEGUNDO_NOMBRE,String)
            End If
            If (Original_SEGUNDO_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_SEGUNDO_APELLIDO,String)
            End If
            If (Original_PRIMER_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_PRIMER_APELLIDO,String)
            End If
            If (Original_CODIGO_MOTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_CODIGO_MOTIVO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (p2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(p2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal CODIGO_MUNICIPIO As Decimal,  _
                    ByVal IDENTIDAD As String,  _
                    ByVal ADICIONADO_POR As String,  _
                    ByVal FECHA_ADICION As Date,  _
                    ByVal MODIFICADO_POR As String,  _
                    ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal PRIMER_NOMBRE As String,  _
                    ByVal SEGUNDO_NOMBRE As String,  _
                    ByVal SEGUNDO_APELLIDO As String,  _
                    ByVal PRIMER_APELLIDO As String,  _
                    ByVal CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal IMAGEN() As Byte,  _
                    ByVal p1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CANDIDATO As Decimal,  _
                    ByVal Original_POSICION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIGO_CARGO_ELECTIVO As Decimal,  _
                    ByVal Original_CODIGO_DEPARTAMENTO As Decimal,  _
                    ByVal Original_CODIGO_MUNICIPIO As Decimal,  _
                    ByVal Original_CODIGO_MOVIMIENTO As Decimal,  _
                    ByVal Original_IDENTIDAD As String,  _
                    ByVal Original_CODIGO_PARTIDO As Decimal,  _
                    ByVal Original_ADICIONADO_POR As String,  _
                    ByVal Original_FECHA_ADICION As Date,  _
                    ByVal Original_MODIFICADO_POR As String,  _
                    ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIMER_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_NOMBRE As String,  _
                    ByVal Original_SEGUNDO_APELLIDO As String,  _
                    ByVal Original_PRIMER_APELLIDO As String,  _
                    ByVal Original_CODIGO_MOTIVO As Global.System.Nullable(Of Decimal),  _
                    ByVal p2 As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_DEPARTAMENTO, CODIGO_MUNICIPIO, Original_CODIGO_MOVIMIENTO, IDENTIDAD, Original_CODIGO_PARTIDO, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, PRIMER_NOMBRE, SEGUNDO_NOMBRE, SEGUNDO_APELLIDO, PRIMER_APELLIDO, CODIGO_MOTIVO, IMAGEN, p1, Original_CODIGO_CANDIDATO, Original_POSICION, Original_CODIGO_CARGO_ELECTIVO, Original_CODIGO_DEPARTAMENTO, Original_CODIGO_MUNICIPIO, Original_CODIGO_MOVIMIENTO, Original_IDENTIDAD, Original_CODIGO_PARTIDO, Original_ADICIONADO_POR, Original_FECHA_ADICION, Original_MODIFICADO_POR, Original_FECHA_MODIFICACION, Original_PRIMER_NOMBRE, Original_SEGUNDO_NOMBRE, Original_SEGUNDO_APELLIDO, Original_PRIMER_APELLIDO, Original_CODIGO_MOTIVO, p2)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_MOTIVO_SUSTITUCIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_MOTIVO_SUSTITUCION"
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_MOTIVO_SUSTITUCION"" WHERE ((""CODIGO_MOTIVO"" = :Original_CODIGO_MO"& _ 
                "TIVO) AND ((:IsNull_DESCRIPCION = 1 AND ""DESCRIPCION"" IS NULL) OR (""DESCRIPCION"""& _ 
                " = :Original_DESCRIPCION)) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND"& _ 
                " (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNull_MODIFICADO_POR = 1 AN"& _ 
                "D ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Original_MODIFICADO_POR)) AN"& _ 
                "D ((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_"& _ 
                "MODIFICACION"" = :Original_FECHA_MODIFICACION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_MOTIVO_SUSTITUCION"" (""CODIGO_MOTIVO"", ""DESCRIPCION"", ""ADICIONADO_"& _ 
                "POR"", ""FECHA_ADICION"", ""MODIFICADO_POR"", ""FECHA_MODIFICACION"") VALUES (:CODIGO_M"& _ 
                "OTIVO, :DESCRIPCION, :ADICIONADO_POR, :FECHA_ADICION, :MODIFICADO_POR, :FECHA_MO"& _ 
                "DIFICACION)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_MOTIVO_SUSTITUCION"" SET ""CODIGO_MOTIVO"" = :CODIGO_MOTIVO, ""DESCRIPCION"& _ 
                """ = :DESCRIPCION, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""FECHA_ADICION"" = :FECHA_A"& _ 
                "DICION, ""MODIFICADO_POR"" = :MODIFICADO_POR, ""FECHA_MODIFICACION"" = :FECHA_MODIFI"& _ 
                "CACION WHERE ((""CODIGO_MOTIVO"" = :Original_CODIGO_MOTIVO) AND ((:IsNull_DESCRIPC"& _ 
                "ION = 1 AND ""DESCRIPCION"" IS NULL) OR (""DESCRIPCION"" = :Original_DESCRIPCION)) A"& _ 
                "ND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND (""FECHA_ADICION"" = :Origina"& _ 
                "l_FECHA_ADICION) AND ((:IsNull_MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) "& _ 
                "OR (""MODIFICADO_POR"" = :Original_MODIFICADO_POR)) AND ((:IsNull_FECHA_MODIFICACI"& _ 
                "ON = 1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FE"& _ 
                "CHA_MODIFICACION)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGO_MOTIVO, DESCRIPCION, ADICIONADO_POR, FECHA_ADICION, MODIFICA"& _ 
                "DO_POR, FECHA_MODIFICACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVO_SUSTITUCION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CODIGO_MOTIVO, DESCRIPCION, ADICIONADO_POR, FECHA_ADICION, MODIFICA"& _ 
                "DO_POR, FECHA_MODIFICACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVO_SUSTITUCION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where CODIGO_"& _ 
                "MOTIVO=:id"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("id", Global.System.Data.OracleClient.OracleType.Number, 22, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable = New DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable, ByVal id As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal id As Decimal) As DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Decimal)
            Dim dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable = New DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DT_Renuncia) As Integer
            Return Me.Adapter.Update(dataSet, "IM_MOTIVO_SUSTITUCION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_DESCRIPCION As String, ByVal Original_ADICIONADO_POR As String, ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date), ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DESCRIPCION,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_FECHA_ADICION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODIGO_MOTIVO As Decimal, ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Global.System.Nullable(Of Date), ByVal MODIFICADO_POR As String, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODIGO_MOTIVO,Decimal)
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DESCRIPCION,String)
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            If (FECHA_ADICION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODIGO_MOTIVO As Decimal, ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Global.System.Nullable(Of Date), ByVal MODIFICADO_POR As String, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_DESCRIPCION As String, ByVal Original_ADICIONADO_POR As String, ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date), ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODIGO_MOTIVO,Decimal)
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DESCRIPCION,String)
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            If (FECHA_ADICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MODIFICADO_POR,String)
            End If
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DESCRIPCION,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ADICIONADO_POR,String)
            End If
            If (Original_FECHA_ADICION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_FECHA_ADICION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_MODIFICADO_POR,String)
            End If
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Global.System.Nullable(Of Date), ByVal MODIFICADO_POR As String, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_DESCRIPCION As String, ByVal Original_ADICIONADO_POR As String, ByVal Original_FECHA_ADICION As Global.System.Nullable(Of Date), ByVal Original_MODIFICADO_POR As String, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_CODIGO_MOTIVO, DESCRIPCION, ADICIONADO_POR, FECHA_ADICION, MODIFICADO_POR, FECHA_MODIFICACION, Original_CODIGO_MOTIVO, Original_DESCRIPCION, Original_ADICIONADO_POR, Original_FECHA_ADICION, Original_MODIFICADO_POR, Original_FECHA_MODIFICACION)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_MOTIVO_SUSTITUCION1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_MOTIVO_SUSTITUCION1"
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("ADICIONADO_POR", "ADICIONADO_POR")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("FECHA_MODIFICACION", "FECHA_MODIFICACION")
            tableMapping.ColumnMappings.Add("MODIFICADO_POR", "MODIFICADO_POR")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""IM_MOTIVO_SUSTITUCION"" WHERE ((""CODIGO_MOTIVO"" = :Original_CODIGO_MO"& _ 
                "TIVO) AND ((:IsNull_DESCRIPCION = 1 AND ""DESCRIPCION"" IS NULL) OR (""DESCRIPCION"""& _ 
                " = :Original_DESCRIPCION)) AND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND"& _ 
                " (""FECHA_ADICION"" = :Original_FECHA_ADICION) AND ((:IsNull_FECHA_MODIFICACION = "& _ 
                "1 AND ""FECHA_MODIFICACION"" IS NULL) OR (""FECHA_MODIFICACION"" = :Original_FECHA_M"& _ 
                "ODIFICACION)) AND ((:IsNull_MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR "& _ 
                "(""MODIFICADO_POR"" = :Original_MODIFICADO_POR)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""IM_MOTIVO_SUSTITUCION"" (""CODIGO_MOTIVO"", ""DESCRIPCION"", ""ADICIONADO_"& _ 
                "POR"", ""FECHA_ADICION"", ""FECHA_MODIFICACION"", ""MODIFICADO_POR"") VALUES (:CODIGO_M"& _ 
                "OTIVO, :DESCRIPCION, :ADICIONADO_POR, :FECHA_ADICION, :FECHA_MODIFICACION, :MODI"& _ 
                "FICADO_POR)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""IM_MOTIVO_SUSTITUCION"" SET ""CODIGO_MOTIVO"" = :CODIGO_MOTIVO, ""DESCRIPCION"& _ 
                """ = :DESCRIPCION, ""ADICIONADO_POR"" = :ADICIONADO_POR, ""FECHA_ADICION"" = :FECHA_A"& _ 
                "DICION, ""FECHA_MODIFICACION"" = :FECHA_MODIFICACION, ""MODIFICADO_POR"" = :MODIFICA"& _ 
                "DO_POR WHERE ((""CODIGO_MOTIVO"" = :Original_CODIGO_MOTIVO) AND ((:IsNull_DESCRIPC"& _ 
                "ION = 1 AND ""DESCRIPCION"" IS NULL) OR (""DESCRIPCION"" = :Original_DESCRIPCION)) A"& _ 
                "ND (""ADICIONADO_POR"" = :Original_ADICIONADO_POR) AND (""FECHA_ADICION"" = :Origina"& _ 
                "l_FECHA_ADICION) AND ((:IsNull_FECHA_MODIFICACION = 1 AND ""FECHA_MODIFICACION"" I"& _ 
                "S NULL) OR (""FECHA_MODIFICACION"" = :Original_FECHA_MODIFICACION)) AND ((:IsNull_"& _ 
                "MODIFICADO_POR = 1 AND ""MODIFICADO_POR"" IS NULL) OR (""MODIFICADO_POR"" = :Origina"& _ 
                "l_MODIFICADO_POR)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CODIGO_MOTIVO", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CODIGO_MOTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DESCRIPCION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DESCRIPCION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ADICIONADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADICIONADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_ADICION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_ADICION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHA_MODIFICACION", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "FECHA_MODIFICACION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFICADO_POR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFICADO_POR", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGO_MOTIVO, DESCRIPCION, ADICIONADO_POR, FECHA_ADICION, FECHA_MO"& _ 
                "DIFICACION, MODIFICADO_POR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_MOTIVO_SUSTITUCION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCION1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.IM_MOTIVO_SUSTITUCION1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCION1DataTable = New DT_Renuncia.IM_MOTIVO_SUSTITUCION1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DT_Renuncia.IM_MOTIVO_SUSTITUCION1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DT_Renuncia) As Integer
            Return Me.Adapter.Update(dataSet, "IM_MOTIVO_SUSTITUCION1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_DESCRIPCION As String, ByVal Original_ADICIONADO_POR As String, ByVal Original_FECHA_ADICION As Date, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_MODIFICADO_POR As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DESCRIPCION,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_MODIFICADO_POR,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODIGO_MOTIVO As Decimal, ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal MODIFICADO_POR As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODIGO_MOTIVO,Decimal)
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DESCRIPCION,String)
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FECHA_ADICION,Date)
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MODIFICADO_POR,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODIGO_MOTIVO As Decimal, ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal MODIFICADO_POR As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_DESCRIPCION As String, ByVal Original_ADICIONADO_POR As String, ByVal Original_FECHA_ADICION As Date, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_MODIFICADO_POR As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODIGO_MOTIVO,Decimal)
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DESCRIPCION,String)
            End If
            If (ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FECHA_ADICION,Date)
            If (FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(MODIFICADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CODIGO_MOTIVO,Decimal)
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DESCRIPCION,String)
            End If
            If (Original_ADICIONADO_POR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ADICIONADO_POR")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ADICIONADO_POR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_FECHA_ADICION,Date)
            If (Original_FECHA_MODIFICACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_FECHA_MODIFICACION.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_MODIFICADO_POR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_MODIFICADO_POR,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESCRIPCION As String, ByVal ADICIONADO_POR As String, ByVal FECHA_ADICION As Date, ByVal FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal MODIFICADO_POR As String, ByVal Original_CODIGO_MOTIVO As Decimal, ByVal Original_DESCRIPCION As String, ByVal Original_ADICIONADO_POR As String, ByVal Original_FECHA_ADICION As Date, ByVal Original_FECHA_MODIFICACION As Global.System.Nullable(Of Date), ByVal Original_MODIFICADO_POR As String) As Integer
            Return Me.Update(Original_CODIGO_MOTIVO, DESCRIPCION, ADICIONADO_POR, FECHA_ADICION, FECHA_MODIFICACION, MODIFICADO_POR, Original_CODIGO_MOTIVO, Original_DESCRIPCION, Original_ADICIONADO_POR, Original_FECHA_ADICION, Original_FECHA_MODIFICACION, Original_MODIFICADO_POR)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IM_V_REPORTE_SUSTITUCIONESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IM_V_REPORTE_SUSTITUCIONES"
            tableMapping.ColumnMappings.Add("CODIGO_CANDIDATO", "CODIGO_CANDIDATO")
            tableMapping.ColumnMappings.Add("POSICION", "POSICION")
            tableMapping.ColumnMappings.Add("CODIGO_CARGO_ELECTIVO", "CODIGO_CARGO_ELECTIVO")
            tableMapping.ColumnMappings.Add("CODIGO_CARGO", "CODIGO_CARGO")
            tableMapping.ColumnMappings.Add("CARGO", "CARGO")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("MOVIMIENTO", "MOVIMIENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("SALIENTE", "SALIENTE")
            tableMapping.ColumnMappings.Add("FECHA_ADICION", "FECHA_ADICION")
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("IDENTIDAD_ENTRANTE", "IDENTIDAD_ENTRANTE")
            tableMapping.ColumnMappings.Add("ENTRANTE", "ENTRANTE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGO_CANDIDATO, POSICION, CODIGO_CARGO_ELECTIVO, CODIGO_CARGO, CA"& _ 
                "RGO, CODIGO_DEPARTAMENTO, DEPARTAMENTO, CODIGO_MUNICIPIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     MUNICIPIO, MOVIMIENTO, CODIGO_MOVIMIENTO, IDENTIDAD, CODIGO_PARTIDO, SALIEN"& _ 
                "TE, FECHA_ADICION, CODIGO_MOTIVO, IDENTIDAD_ENTRANTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " ENTRANTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_V_REPORTE_SUSTITUCIONES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.IM_V_REPORTE_SUSTITUCIONESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.IM_V_REPORTE_SUSTITUCIONESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.IM_V_REPORTE_SUSTITUCIONESDataTable = New DT_Renuncia.IM_V_REPORTE_SUSTITUCIONESDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SUSTITUCIONESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _transaction As Global.System.Data.OracleClient.OracleTransaction
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.OracleClient.OracleTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SUSTITUCIONES"
            tableMapping.ColumnMappings.Add("CODIGO_CANDIDATO", "CODIGO_CANDIDATO")
            tableMapping.ColumnMappings.Add("POSICION", "POSICION")
            tableMapping.ColumnMappings.Add("CODIGO_CARGO_ELECTIVO", "CODIGO_CARGO_ELECTIVO")
            tableMapping.ColumnMappings.Add("CARGO", "CARGO")
            tableMapping.ColumnMappings.Add("CODIGO_DEPARTAMENTO", "CODIGO_DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("PRIMER_NOMBRE", "PRIMER_NOMBRE")
            tableMapping.ColumnMappings.Add("PRIMER_APELLIDO", "PRIMER_APELLIDO")
            tableMapping.ColumnMappings.Add("SEGUNDO_NOMBRE", "SEGUNDO_NOMBRE")
            tableMapping.ColumnMappings.Add("SEGUNDO_APELLIDO", "SEGUNDO_APELLIDO")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("CODIGO_MUNICIPIO", "CODIGO_MUNICIPIO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("IDENTIDAD", "IDENTIDAD")
            tableMapping.ColumnMappings.Add("CODIGO_MOVIMIENTO", "CODIGO_MOVIMIENTO")
            tableMapping.ColumnMappings.Add("MOVIMIENTO", "MOVIMIENTO")
            tableMapping.ColumnMappings.Add("CODIGO_PARTIDO", "CODIGO_PARTIDO")
            tableMapping.ColumnMappings.Add("PARTIDO", "PARTIDO")
            tableMapping.ColumnMappings.Add("CODIGO_MOTIVO", "CODIGO_MOTIVO")
            tableMapping.ColumnMappings.Add("IMAGEN", "IMAGEN")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection
            Me._connection.ConnectionString = Global.Inscripcion_de_Moviemientos.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        A.CODIGO_CANDIDATO, A.POSICION, A.CODIGO_CARGO_ELECTIVO, F.DESCRIPC"& _ 
                "ION AS CARGO, A.CODIGO_DEPARTAMENTO, A.PRIMER_NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " A.PRIMER_APELLIDO, A.SEGUNDO_NOMBRE, A.SEGUNDO_APELLIDO, D.DESCRIPCION AS DEPAR"& _ 
                "TAMENTO, A.CODIGO_MUNICIPIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         E.DESCRIPCION AS MUNICIP"& _ 
                "IO, A.IDENTIDAD, A.CODIGO_MOVIMIENTO, C.NOMBRE_MOVIMIENTO AS MOVIMIENTO, A.CODIG"& _ 
                "O_PARTIDO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         B.NOMBRE AS PARTIDO, A.CODIGO_MOTIVO, A.IM"& _ 
                "AGEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_SUSTITUCIONES A, IM_PARTIDOS_POLITICOS B, IM_MOVIMIENTO"& _ 
                "S C, IM_DEPARTAMENTOS D, IM_MUNICIPIOS E, IM_CARGOS_ELECTIVOS F"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        A."& _ 
                "CODIGO_PARTIDO = B.CODIGO_PARTIDO AND A.CODIGO_MOVIMIENTO = C.CODIGO_MOVIMIENTO "& _ 
                "AND A.CODIGO_PARTIDO = C.CODIGO_PARTIDO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CODIGO_"& _ 
                "DEPARTAMENTO = D.CODIGO_DEPARTAMENTO AND A.CODIGO_MUNICIPIO = E.CODIGO_MUNICIPIO"& _ 
                " AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CODIGO_DEPARTAMENTO = E.CODIGO_DEPARTAMENTO AN"& _ 
                "D A.CODIGO_CARGO_ELECTIVO = F.CODIGO_CARGO_ELECTIVO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OracleClient.OracleCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        A.CODIGO_CANDIDATO, A.POSICION, A.CODIGO_CARGO_ELECTIVO, F.DESCRIPC"& _ 
                "ION AS CARGO, A.CODIGO_DEPARTAMENTO, A.PRIMER_NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " A.PRIMER_APELLIDO, A.SEGUNDO_NOMBRE, A.SEGUNDO_APELLIDO, D.DESCRIPCION AS DEPAR"& _ 
                "TAMENTO, A.CODIGO_MUNICIPIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         E.DESCRIPCION AS MUNICIP"& _ 
                "IO, A.IDENTIDAD, A.CODIGO_MOVIMIENTO, C.NOMBRE_MOVIMIENTO AS MOVIMIENTO, A.CODIG"& _ 
                "O_PARTIDO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         B.NOMBRE AS PARTIDO, A.CODIGO_MOTIVO, A.IM"& _ 
                "AGEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IM_SUSTITUCIONES A, IM_PARTIDOS_POLITICOS B, IM_MOVIMIENTO"& _ 
                "S C, IM_DEPARTAMENTOS D, IM_MUNICIPIOS E, IM_CARGOS_ELECTIVOS F"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        A."& _ 
                "CODIGO_PARTIDO = B.CODIGO_PARTIDO AND A.CODIGO_MOVIMIENTO = C.CODIGO_MOVIMIENTO "& _ 
                "AND A.CODIGO_PARTIDO = C.CODIGO_PARTIDO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CODIGO_"& _ 
                "DEPARTAMENTO = D.CODIGO_DEPARTAMENTO AND A.CODIGO_MUNICIPIO = E.CODIGO_MUNICIPIO"& _ 
                " AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.CODIGO_DEPARTAMENTO = E.CODIGO_DEPARTAMENTO AN"& _ 
                "D A.CODIGO_CARGO_ELECTIVO = F.CODIGO_CARGO_ELECTIVO AND (A.IDENTIDAD = :ID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ID", Global.System.Data.OracleClient.OracleType.VarChar, 15, Global.System.Data.ParameterDirection.Input, "IDENTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_Renuncia.SUSTITUCIONESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DT_Renuncia.SUSTITUCIONESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DT_Renuncia.SUSTITUCIONESDataTable = New DT_Renuncia.SUSTITUCIONESDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DT_Renuncia.SUSTITUCIONESDataTable, ByVal ID As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ID,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal ID As String) As DT_Renuncia.SUSTITUCIONESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ID,String)
            End If
            Dim dataTable As DT_Renuncia.SUSTITUCIONESDataTable = New DT_Renuncia.SUSTITUCIONESDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _iM_MOTIVOS_RENUNCIATableAdapter As IM_MOTIVOS_RENUNCIATableAdapter
        
        Private _iM_RENUNCIASTableAdapter As IM_RENUNCIASTableAdapter
        
        Private _iM_MOTIVOS_RENUNCIA1TableAdapter As IM_MOTIVOS_RENUNCIA1TableAdapter
        
        Private _iM_SUSTITUCIONESTableAdapter As IM_SUSTITUCIONESTableAdapter
        
        Private _iM_MOTIVO_SUSTITUCIONTableAdapter As IM_MOTIVO_SUSTITUCIONTableAdapter
        
        Private _iM_MOTIVO_SUSTITUCION1TableAdapter As IM_MOTIVO_SUSTITUCION1TableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_MOTIVOS_RENUNCIATableAdapter() As IM_MOTIVOS_RENUNCIATableAdapter
            Get
                Return Me._iM_MOTIVOS_RENUNCIATableAdapter
            End Get
            Set
                Me._iM_MOTIVOS_RENUNCIATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_RENUNCIASTableAdapter() As IM_RENUNCIASTableAdapter
            Get
                Return Me._iM_RENUNCIASTableAdapter
            End Get
            Set
                Me._iM_RENUNCIASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_MOTIVOS_RENUNCIA1TableAdapter() As IM_MOTIVOS_RENUNCIA1TableAdapter
            Get
                Return Me._iM_MOTIVOS_RENUNCIA1TableAdapter
            End Get
            Set
                Me._iM_MOTIVOS_RENUNCIA1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_SUSTITUCIONESTableAdapter() As IM_SUSTITUCIONESTableAdapter
            Get
                Return Me._iM_SUSTITUCIONESTableAdapter
            End Get
            Set
                Me._iM_SUSTITUCIONESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_MOTIVO_SUSTITUCIONTableAdapter() As IM_MOTIVO_SUSTITUCIONTableAdapter
            Get
                Return Me._iM_MOTIVO_SUSTITUCIONTableAdapter
            End Get
            Set
                Me._iM_MOTIVO_SUSTITUCIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IM_MOTIVO_SUSTITUCION1TableAdapter() As IM_MOTIVO_SUSTITUCION1TableAdapter
            Get
                Return Me._iM_MOTIVO_SUSTITUCION1TableAdapter
            End Get
            Set
                Me._iM_MOTIVO_SUSTITUCION1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_MOTIVOS_RENUNCIATableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_MOTIVOS_RENUNCIATableAdapter.Connection
                End If
                If ((Not (Me._iM_RENUNCIASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_RENUNCIASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_RENUNCIASTableAdapter.Connection
                End If
                If ((Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Connection
                End If
                If ((Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_SUSTITUCIONESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_SUSTITUCIONESTableAdapter.Connection
                End If
                If ((Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Connection
                End If
                If ((Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iM_RENUNCIASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DT_Renuncia, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVO_SUSTITUCION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVO_SUSTITUCION1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVOS_RENUNCIA1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVOS_RENUNCIA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_MOTIVOS_RENUNCIATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iM_RENUNCIASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_RENUNCIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_RENUNCIASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IM_SUSTITUCIONES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iM_SUSTITUCIONESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DT_Renuncia, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVO_SUSTITUCION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVO_SUSTITUCION1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVOS_RENUNCIA1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVOS_RENUNCIA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_MOTIVOS_RENUNCIATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iM_RENUNCIASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_RENUNCIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_RENUNCIASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IM_SUSTITUCIONES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iM_SUSTITUCIONESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DT_Renuncia, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_SUSTITUCIONES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_SUSTITUCIONESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iM_RENUNCIASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_RENUNCIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_RENUNCIASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVOS_RENUNCIA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_MOTIVOS_RENUNCIATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVOS_RENUNCIA1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVO_SUSTITUCION1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IM_MOTIVO_SUSTITUCION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DT_Renuncia) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_MOTIVOS_RENUNCIATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._iM_RENUNCIASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_RENUNCIASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_SUSTITUCIONESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_MOTIVOS_RENUNCIATableAdapter, Me._iM_MOTIVOS_RENUNCIATableAdapter.Connection)
                    Me._iM_MOTIVOS_RENUNCIATableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVOS_RENUNCIATableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_MOTIVOS_RENUNCIATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_MOTIVOS_RENUNCIATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_MOTIVOS_RENUNCIATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iM_RENUNCIASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_RENUNCIASTableAdapter, Me._iM_RENUNCIASTableAdapter.Connection)
                    Me._iM_RENUNCIASTableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_RENUNCIASTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_RENUNCIASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_RENUNCIASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_RENUNCIASTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_MOTIVOS_RENUNCIA1TableAdapter, Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Connection)
                    Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_SUSTITUCIONESTableAdapter, Me._iM_SUSTITUCIONESTableAdapter.Connection)
                    Me._iM_SUSTITUCIONESTableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_SUSTITUCIONESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_SUSTITUCIONESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_SUSTITUCIONESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_SUSTITUCIONESTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_MOTIVO_SUSTITUCIONTableAdapter, Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Connection)
                    Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iM_MOTIVO_SUSTITUCION1TableAdapter, Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Connection)
                    Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Connection = CType(workConnection,Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.OracleClient.OracleTransaction)
                    If Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._iM_MOTIVOS_RENUNCIATableAdapter) Is Nothing) Then
                    Me._iM_MOTIVOS_RENUNCIATableAdapter.Connection = CType(revertConnections(Me._iM_MOTIVOS_RENUNCIATableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVOS_RENUNCIATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iM_RENUNCIASTableAdapter) Is Nothing) Then
                    Me._iM_RENUNCIASTableAdapter.Connection = CType(revertConnections(Me._iM_RENUNCIASTableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_RENUNCIASTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iM_MOTIVOS_RENUNCIA1TableAdapter) Is Nothing) Then
                    Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Connection = CType(revertConnections(Me._iM_MOTIVOS_RENUNCIA1TableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVOS_RENUNCIA1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iM_SUSTITUCIONESTableAdapter) Is Nothing) Then
                    Me._iM_SUSTITUCIONESTableAdapter.Connection = CType(revertConnections(Me._iM_SUSTITUCIONESTableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_SUSTITUCIONESTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iM_MOTIVO_SUSTITUCIONTableAdapter) Is Nothing) Then
                    Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Connection = CType(revertConnections(Me._iM_MOTIVO_SUSTITUCIONTableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVO_SUSTITUCIONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iM_MOTIVO_SUSTITUCION1TableAdapter) Is Nothing) Then
                    Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Connection = CType(revertConnections(Me._iM_MOTIVO_SUSTITUCION1TableAdapter),Global.System.Data.OracleClient.OracleConnection)
                    Me._iM_MOTIVO_SUSTITUCION1TableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
